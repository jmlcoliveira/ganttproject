<METRICS profile="Complexity metrics" timestamp="Fri, 2 Dec 2022 22:39:36 WET">
	<METRIC category="Method" name="Cognitive complexity" abbreviation="CogC">
		<VALUE measured="BooleanDefaultValue.BooleanDefaultValue()" value="1.0"/>
		<VALUE measured="BooleanDefaultValue.commit()" value="1.0"/>
		<VALUE measured="BooleanDefaultValue.setValue(Boolean)" value="0.0"/>
		<VALUE measured="ChartImageVisitorImpl.acceptChart(ChartDimensions, ChartModel)" value="1.0"/>
		<VALUE measured="ChartImageVisitorImpl.acceptLogo(ChartDimensions, Image)" value="1.0"/>
		<VALUE measured="ChartImageVisitorImpl.acceptTable(ChartDimensions, Component, Component)" value="1.0"/>
		<VALUE measured="ChartImageVisitorImpl.getGraphics(ChartDimensions)" value="1.0"/>
		<VALUE measured="DateDefaultValue.DateDefaultValue()" value="0.0"/>
		<VALUE measured="DateDefaultValue.commit()" value="1.0"/>
		<VALUE measured="DateDefaultValue.setValue(Date)" value="0.0"/>
		<VALUE measured="DoubleDefaultValue.DoubleDefaultValue()" value="0.0"/>
		<VALUE measured="DoubleDefaultValue.commit()" value="1.0"/>
		<VALUE measured="DoubleDefaultValue.setValue(Double)" value="0.0"/>
		<VALUE measured="Filter.run(Function&lt;CustomPropertyDefinition, String&gt;)" value="2.0"/>
		<VALUE measured="Filter.run0(Function&lt;CustomPropertyDefinition, S&gt;)" value="5.0"/>
		<VALUE measured="IntegerDefaultValue.IntegerDefaultValue()" value="0.0"/>
		<VALUE measured="IntegerDefaultValue.commit()" value="1.0"/>
		<VALUE measured="IntegerDefaultValue.setValue(Integer)" value="0.0"/>
		<VALUE measured="MouseListenerImpl.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="MouseListenerImpl.mousePressed(MouseEvent)" value="1.0"/>
		<VALUE measured="MouseListenerImpl.mouseReleased(MouseEvent)" value="1.0"/>
		<VALUE measured="MyComboBox.MyComboBox(Action[])" value="3.0"/>
		<VALUE measured="MyComboBox.formatActionName(Action)" value="0.0"/>
		<VALUE measured="MyComboBox.getActionName(Action)" value="0.0"/>
		<VALUE measured="MyComboBox.getButton()" value="0.0"/>
		<VALUE measured="MyComboBox.getPreferredSize()" value="3.0"/>
		<VALUE measured="MyComboBox.onMouseClicked(MouseEvent)" value="2.0"/>
		<VALUE measured="MyComboBox.resetPreferredSize()" value="0.0"/>
		<VALUE measured="MyComboBox.setSelectedAction(Action)" value="0.0"/>
		<VALUE measured="MyComboBox.setText(String)" value="0.0"/>
		<VALUE measured="MyComboBox.showPopup()" value="1.0"/>
		<VALUE measured="OptionValueUpdater.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="OptionValueUpdater.propertyChange(PropertyChangeEvent)" value="2.0"/>
		<VALUE measured="ShowHideSelectionAction.ShowHideSelectionAction(boolean, String)" value="0.0"/>
		<VALUE measured="ShowHideSelectionAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="ShowHideSelectionAction.selectionChanged(List&lt;CustomPropertyDefinition&gt;)" value="11.0"/>
		<VALUE measured="TaskManagerConfigImpl.getCalendar()" value="0.0"/>
		<VALUE measured="TaskManagerConfigImpl.getDefaultColor()" value="0.0"/>
		<VALUE measured="TaskManagerConfigImpl.getDefaultColorOption()" value="0.0"/>
		<VALUE measured="TaskManagerConfigImpl.getNotificationManager()" value="0.0"/>
		<VALUE measured="TaskManagerConfigImpl.getProjectDocumentURL()" value="1.0"/>
		<VALUE measured="TaskManagerConfigImpl.getResourceManager()" value="0.0"/>
		<VALUE measured="TaskManagerConfigImpl.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="TextDefaultValue.TextDefaultValue()" value="0.0"/>
		<VALUE measured="TextDefaultValue.commit()" value="1.0"/>
		<VALUE measured="TextDefaultValue.setValue(String)" value="0.0"/>
		<VALUE measured="accept(File)" value="1.0"/>
		<VALUE measured="accept(File, String)" value="0.0"/>
		<VALUE measured="accept(List&lt;SearchResult&lt;?&gt;&gt;)" value="0.0"/>
		<VALUE measured="actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="add(Action)" value="0.0"/>
		<VALUE measured="add(DateInterval)" value="0.0"/>
		<VALUE measured="add(String, int, int)" value="0.0"/>
		<VALUE measured="addHoliday(Date, Optional&lt;String&gt;)" value="0.0"/>
		<VALUE measured="addTab(String, Icon, Component)" value="0.0"/>
		<VALUE measured="addYearlyHoliday(Date, Optional&lt;String&gt;)" value="0.0"/>
		<VALUE measured="adjustDependencies(Task)" value="3.0"/>
		<VALUE measured="apply(CalendarEvent)" value="0.0"/>
		<VALUE measured="apply(Color)" value="0.0"/>
		<VALUE measured="apply(ColumnImpl)" value="0.0"/>
		<VALUE measured="apply(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="apply(Date)" value="0.0"/>
		<VALUE measured="apply(DefaultMutableTreeTableNode)" value="0.0"/>
		<VALUE measured="apply(Entry&lt;String, String&gt;)" value="0.0"/>
		<VALUE measured="apply(Enum)" value="0.0"/>
		<VALUE measured="apply(GPCalendar)" value="0.0"/>
		<VALUE measured="apply(GPOption&lt;?&gt;)" value="0.0"/>
		<VALUE measured="apply(HumanResource)" value="0.0"/>
		<VALUE measured="apply(Integer)" value="0.0"/>
		<VALUE measured="apply(JComponent)" value="0.0"/>
		<VALUE measured="apply(List&lt;CalendarEvent&gt;)" value="2.0"/>
		<VALUE measured="apply(List&lt;CustomPropertyDefinition&gt;)" value="3.0"/>
		<VALUE measured="apply(List&lt;T&gt;)" value="3.0"/>
		<VALUE measured="apply(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="apply(Object)" value="0.0"/>
		<VALUE measured="apply(Pair&lt;MutableTreeTableNode, MutableTreeTableNode&gt;)" value="0.0"/>
		<VALUE measured="apply(Pair&lt;Task, Task&gt;)" value="1.0"/>
		<VALUE measured="apply(Polygon)" value="0.0"/>
		<VALUE measured="apply(Rectangle)" value="0.0"/>
		<VALUE measured="apply(Resource)" value="0.0"/>
		<VALUE measured="apply(ResourceAssignment)" value="0.0"/>
		<VALUE measured="apply(String)" value="0.0"/>
		<VALUE measured="apply(Task)" value="0.0"/>
		<VALUE measured="apply(Task, HumanResourceManager)" value="0.0"/>
		<VALUE measured="apply(Task, Task)" value="0.0"/>
		<VALUE measured="apply(Task, Task, int)" value="0.0"/>
		<VALUE measured="apply(TaskDependency)" value="7.0"/>
		<VALUE measured="apply(TimeUnit)" value="0.0"/>
		<VALUE measured="apply(Type)" value="0.0"/>
		<VALUE measured="applyComponentOrientation(ComponentOrientation)" value="0.0"/>
		<VALUE measured="applyLocale(Locale)" value="1.0"/>
		<VALUE measured="areUnrelated(Task, Task)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.copy()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.findClosestWorkingTime(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, TimeDuration)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getBaseCalendarID()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getDayMask(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getEvent(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getOnlyShowWeekends()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getPublicHolidays()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getWeekDayType(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setBaseCalendarID(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setOnlyShowWeekends(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setWeekDayType(int, DayType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.CalendarActivityImpl(Date, Date, boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getEnd()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getStart()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.isWorkingTime()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.CalendarEvent(Date, boolean, Type, String, Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getColor()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getTitle()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getType()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.hashCode()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.newEvent(Date, boolean, Type, String, Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.addListener(GPCalendarListener)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.doFindClosest(Date, DateFrameable, MoveDirection, DayType, Date)" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.fireCalendarChanged()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeDuration)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getName()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setID(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setName(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.shiftDate(Date, TimeDuration)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(Date, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(GanttCalendar, GanttCalendar)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.create(GanttDaysOff)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.equals(GanttDaysOff)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getFinish()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getStart()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(GanttCalendar)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOffInWeek(Date)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption(Values)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.Values.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.copy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.findClosestWorkingTime(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, Date)" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, TimeDuration)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getBaseCalendarID()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getDayMask(Date)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getEvent(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getOnlyShowWeekends()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getPublicHolidays()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getRecurringDate(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekDayType(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekendDaysCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isPublicHoliDay(Date)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isWeekend(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.reset()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setBaseCalendarID(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setOnlyShowWeekends(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setWeekDayType(int, DayType)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.ForwardTimeWalker(GPCalendarCalc, TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.getTimeUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.walk(Date)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.WorkingUnitCounter(GPCalendarCalc, TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.getNonWorkingTime()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.isMoving()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processNonWorkingTime(Date, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processWorkingTime(Date, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.run(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.Arrow(int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getLength()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getWidth()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas(int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.setVisible(boolean)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.Line(int, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getArrow()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.setArrow(Arrow)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.Polygon(int...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getBottomY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getHeight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getLeftX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointCount()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getRightX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getTopY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getWidth()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.Rectangle(int, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.getBackgroundPaint()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.setBackgroundPaint(Paint)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.addStyle(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getBackgroundColor()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getForegroundColor()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getModelObject()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getOpacity()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyle()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyles()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.hasStyle(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.isVisible()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setBackgroundColor(Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setForegroundColor(Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setModelObject(Object)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setOpacity(float)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setStyle(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setVisible(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, String, SpatialIndex&lt;Text&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector, SpatialIndex&lt;Text&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getBottomY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getFont()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getHAlignment()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLabels(TextMetrics)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLeftX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getMaxLength()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getTextSelector()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getVAlignment()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.index(Label)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setAlignment(HAlignment, VAlignment)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setFont(Font)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setMaxLength(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setSelector(TextSelector)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.TextGroup(int, int, int, String...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.addText(int, int, TextSelector)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getColor(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getFont(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLeftX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLine(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLineCount()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getTotalHeight(FontChooser, List&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.setFonts(FontChooser)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.bind(Shape, Object)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createDetachedRectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLayers(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLine(int, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createPolygon(int...)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createRectangle(int, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, TextSelector)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createTextGroup(int, int, int, String...)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayer(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayers()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(Object)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int, int, int)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.newLayer()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.paint(Painter)" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.setOffset(int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.Rect(T, int, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.clear()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int, int, int)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.put(T, int, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.values()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.FontChooser(Properties, TextMetrics, Supplier&lt;Font&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.decreaseBaseFontSize()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getColor(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getFont(String)" value="24.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginBottom(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginTop(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getTextHeight(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.Offset(TimeUnit, Date, Date, Date, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.createFullyClosed(TimeUnit, Date, Date, Date, int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.debugPrint(List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getDayMask()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetAnchor()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetEnd()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetPixels()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetStart()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getStartPixels()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.hashCode()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.shift(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.Factory()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.preBuild()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withAtomicUnitWidth(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withBottomUnit(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withCalendar(GPCalendar)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndDate(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndOffset(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withOffsetStepFunction(Function&lt;TimeUnit, Float&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withRightMargin(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withStartDate(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withTopUnit(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withViewportStartDate(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withWeekendDecreaseFactor(float)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.FactoryImpl.build()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.OffsetBuilderImpl(Factory)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.calculateNextStep(OffsetStep, TimeUnit, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructBottomOffsets(List&lt;Offset&gt;, int)" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, List&lt;Offset&gt;, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, OffsetList)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructTopOffsets(TimeUnit, List&lt;Offset&gt;, List&lt;Offset&gt;, int, int)" value="22.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getBottomUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getCalendar()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getChartWidth()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getConcreteUnit(TimeUnit, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getDefaultUnitWidth()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getOffsetStep(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getTopUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.clear()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getEndPx()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getStartPx()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.setStartPx(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.shift(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByEndDate.compare(Date, int, List&lt;Offset&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByPixels.compare(Integer, int, List&lt;Offset&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByStartDate.compare(Date, int, List&lt;Offset&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.findOffset(Type, ComparatorBy&lt;Type&gt;, int, int, List&lt;Offset&gt;)" value="16.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.getBounds(Date, Date, List&lt;Offset&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupDateByPixels(int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetBy(Date, List&lt;Offset&gt;, ComparatorBy&lt;Date&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByEndDate(Date, List&lt;Offset&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByStartDate(Date, List&lt;Offset&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.OffsetManager(OffsetBuilderFactory)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.alignOffsets(OffsetList)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.constructOffsets()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getAtomUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getTopUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.reset()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.AlphaRenderingOption()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.commit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.getValueAsFloat()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.updateIndex()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.LineRenderer(Properties)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.renderLine(Line)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.setGraphics(Graphics2D)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.PolygonRenderer(Properties)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.render(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.setGraphics(Graphics2D)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.RectangleRenderer(Properties)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.render(Rectangle)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorderEdge(Graphics2D, Border, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorders(Graphics2D, Borders, int, int, int, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.setGraphics(Graphics2D)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint, Color, Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[])" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[], Color, Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.createTexture(int, int, int[], Color, Color)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.equals(Object)" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getArray()" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getBackground()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getForeground()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getarray()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.toString()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.BackgroundImage(Paint, Image)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.getPaint()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.parse(String)" value="18.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color, BasicStroke)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getColor()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getStroke()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.parse(String)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border, Border, Border, Border)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getBottom()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getLeft()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getRight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getTop()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.isHomogeneous()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.withColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.Color(Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.get()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.parse(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.Padding(Collection&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getBottom()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getLeft()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getRight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getTop()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getX()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getY()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.parse(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Style(Properties, String)" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundColor(Shape)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundImage()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundPaint(Rectangle)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBorder(Shape)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getForegroundColor(Shape)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getOpacity(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getPadding()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getStyle(Properties, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getVisibility(Shape)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.parseStroke(String[])" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.State(FontRenderContext, Font)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.hashCode()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.TextLengthCalculatorImpl(Graphics2D)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getState()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(Font, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(Graphics2D, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.setGraphics(Graphics2D)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.TextPainter(Properties, Supplier&lt;Font&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(Text)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(TextGroup)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(int, int, HAlignment, VAlignment, Text, Label, Style)" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paintTextLine(TextGroup, int)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.setGraphics(Graphics2D)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder(Canvas)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getCanvas()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getHeight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.reset(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.setHeight(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.BottomUnitSceneBuilder(Canvas, InputApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.build()" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getBottomUnitOffsets()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getLineTopPosition()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderLabel(TextGroup, int, Date, Offset, TimeFormatter)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderScaleMark(Offset, Offset)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.DayGridSceneBuilder(InputApi, Canvas)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.applyRectangleStyle(Rectangle, Offset)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.build()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineBottomPosition()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineHeight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineTopPosition()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.isProjectBoundariesOptionOn()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderLine(Date, String, int, ComparatorBy&lt;Date&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDay(int, Offset)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDayColumns()" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.TimelineSceneBuilder(InputApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.build()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.getTimelineContainer()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderBottomUnits()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderTopUnits()" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderUnderlay()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.reset(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.Result.Result(Date, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.getBounds(Iterable&lt;BarChartActivity&lt;?&gt;&gt;)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Connector(Vector, Vector, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.Vector(Point, Dimension)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getHProjection()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.reaches(Point)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getEnd()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStart()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStyleName()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.DependencySceneBuilder(Canvas, Canvas, TaskApi&lt;T, D&gt;, ChartApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.build()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.drawDependencies(Collection&lt;Connector&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData()" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData(D, List&lt;Connector&gt;)" value="20.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.Style.Style(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.StyleApplier(TaskApi&lt;T, A&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.applyStyle(Shape)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.setTask(T)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.TaskActivitySceneBuilder(TaskApi&lt;T, A&gt;, ChartApi, Canvas, TaskLabelSceneBuilder&lt;T&gt;, Style)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getBoundingRectangle(int, BarChartActivity&lt;T&gt;, List&lt;Offset&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRectangleHeight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRowHeight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityEarlierThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityLaterThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processRegularActivity(int, A, OffsetList, List&lt;Polygon&gt;)" value="27.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.renderActivities(int, List&lt;A&gt;, OffsetList)" value="11.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.TaskLabelSceneBuilder(TaskApi&lt;T&gt;, InputApi, Canvas)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.calculateRowHeight()" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createDownSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createLeftSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createRightSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createUpSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getFontHeight()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getPrimitiveContainer()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getTaskLabel(T, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyDown()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyUp()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextDown()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextUp()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.renderLabels(List&lt;Polygon&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.stripVerticalLabelSpace(Rectangle)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.CachingTextFormatter()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(Offset)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(TimeUnit, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getCachedText(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getTextCount()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.setLocale(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.createTimeUnitText(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.format(Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.MonthTextFormatter(LocaleApi, String, String, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.createTimeUnitText(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.initFormats(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.setLocale(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.QuarterTextFormatter()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.createTimeUnitText(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.TimeFormatters(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.getFormatter(TimeUnit, Position)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.setLocaleApi(LocaleApi)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String, String, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getFitCount(Label[], int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getLabels(int, TextMetrics)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.WeekTextFormatter()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createBottomText()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTimeUnitText(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTopText()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.getTextCount()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.setLocale(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.YearTextFormatter()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.createTimeUnitText(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String, Predicate&lt;? extends Object&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.find(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getColumnStubs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getNameKey()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getSortComparator()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getStub()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getValueClass()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.isEditable(T)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setIsEditablePredicate(Predicate&lt;T&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setLocaleApi(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setSortComparator(Comparator&lt;?&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.ChangeValueEvent(Object, Object, Object, Object)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getID()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getNewValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getOldValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getTriggerID()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.determineColor(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.getColor(Color)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.isValidColor(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String, boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getPersistentValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.isChecked()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.toggle()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String, Color)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String, Double)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, List&lt;String&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, T[])" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getAvailableValues()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getPersistentValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getSelectedValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.objectToString(T)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.reloadValues(List&lt;T&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.setSelectedValue(T)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.stringToObject(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFileOption.DefaultFileOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.DefaultFontOption(String, FontSpec, List&lt;String&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getFontFamilies()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getSizeLabels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String, Integer)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.getPersistentValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String, BigDecimal)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.getPersistentValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.getPersistentValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.FontSpec(String, Size)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.Size(float)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.getFactor()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.asString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getFamily()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getSize()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.hashCode()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String, T)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.I18N.setI18N(I18N)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.Entry(ChangeValueListener, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.compareTo(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.add(ChangeValueListener, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.fire(ChangeValueEvent)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addPropertyChangeListener(PropertyChangeListener)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.commit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.fireChangeValueEvent(ChangeValueEvent)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getID()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getInitialValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getPropertyChangeSupport()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.hasUi()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.i18n(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isChanged()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isScreened()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isWritable()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.lock()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.removePropertyChangeListener(PropertyChangeListener)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.rollback()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setHasUi(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setScreened(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T, Object)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setWritable(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.GPOptionGroup(String, GPOption...)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.copyFrom(GPOptionGroup)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getI18Nkey(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getID()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOption(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOptions()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.isTitled()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.lock()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.rollback()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setI18Nkey(String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setTitled(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String, Throwable)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(Throwable)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.ColumnStub(String, String, boolean, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getID()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getName()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getOrder()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getSort()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getWidth()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.isVisible()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setOrder(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setSort(SortOrder)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setVisible(boolean)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setWidth(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.Immutable.fromList(List&lt;Column&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(int, int, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.newCalendar()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.setLocaleApi(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(Date, LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(int, int, int, LocaleApi)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.clone()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.compareTo(GanttCalendar)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.equals(GanttCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDate()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDay()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDisplayValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getMonth()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getYear()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.module(int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.parseXMLDate(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toXMLString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, float)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, long)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength(TimeUnit)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getTimeUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getValue()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.hashCode()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.reverse()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.setLength(TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.translate(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.TimeUnitDateFrameableImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustRight(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.jumpLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.ParameterizedTimeUnitImpl(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustRight(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.equals(Object)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getAtomCount(TimeUnit)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomCount()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getName()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.hashCode()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.isConstructedFrom(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.jumpLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.TimeUnitFunctionOfDateImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.createTimeUnit(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.getAtomCount(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(Composition, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(TimeUnit, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.getAtomCount()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createAtomTimeUnit(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createDateFrameableTimeUnit(String, TimeUnit, int, DateFrameable)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnit(String, TimeUnit, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnitFunctionOfDate(String, TimeUnit, DateFrameable)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.getComposition(TimeUnitImpl, TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.registerTimeUnit(TimeUnit, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.TimeUnitImpl(String, TimeUnitGraph, TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustRight(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.equals(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getAtomCount(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getDirectAtomUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getName()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.hashCode()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.isConstructedFrom(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.jumpLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.TimeUnitPair(TimeUnit, TimeUnit, TimeUnitStack, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getBottomTimeUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getDefaultUnitWidth()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTopTimeUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitStack.Util.findCommonUnit(TimeUnit, TimeUnit)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.FramerImpl(int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustRight(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.clearFields(Calendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.jumpLeft(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.GPTimeUnitStack()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createLength(TimeUnit, float)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.encode(TimeUnit)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.findTimeUnit(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDateFormats()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDefaultTimeUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getName()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeFormat()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeUnitPairs()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isDay(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isHour(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isWeek(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.parseDuration(String)" value="53.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.GregorianTimeUnitStack()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, int)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.encode(TimeUnit)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.findTimeUnit(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDateFormats()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDefaultTimeUnit()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getName()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeFormat()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeUnitPairs()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.parseDuration(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.DefaultCalendarFactory.newCalendar()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl()" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl(ICalendarFactory)" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(IGanttProject, CSVOptions)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(TaskManager, HumanResourceManager, RoleManager, CSVOptions)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.buildAssignmentSpec(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getAssignments(Task)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getName(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getWebLink(GanttTask)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.i18n(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.save(OutputStream)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeCustomPropertyValues(CSVPrinter, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomProperty&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResourceHeaders(CSVPrinter)" value="11.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResources(CSVPrinter)" value="25.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTaskHeaders(CSVPrinter)" value="10.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTasks(CSVPrinter)" value="33.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(File, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup...)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createCustomProperties(Collection&lt;String&gt;, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createResourceRecordGroup(HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createTaskRecordGroup(TaskManager, HumanResourceManager, TimeUnitStack)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.doLoad(CSVParser, int, int)" value="30.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getFieldNames(Enum...)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getSkippedLineCount()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.isEmpty(CSVRecord)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.load()" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.setOptions(CSVOptions)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.ImporterFromCsvFile()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileNamePattern()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileTypeDescription()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getOptions()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;, Set&lt;String&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(Level, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(List&lt;Pair&lt;Level, String&gt;&gt;, Level, String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.doProcess(CSVRecord)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getCustomFields()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getErrorOutput()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getHeader()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getOrNull(CSVRecord, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.hasMandatoryFields(CSVRecord)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.isHeader(CSVRecord)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.postProcess()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setErrorOutput(List&lt;Pair&lt;Level, String&gt;&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setHeader(List&lt;String&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.ResourceFields(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceRecords(HumanResourceManager, RoleManager)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.doProcess(CSVRecord)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.setHeader(List&lt;String&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.AssignmentColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.apply(Task, HumanResourceManager)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.ResourceColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.apply(Task, HumanResourceManager)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.getIndexByName(HumanResourceManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.TaskFields(String)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.toString()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskRecords(TaskManager, HumanResourceManager, TimeUnitStack)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.doProcess(CSVRecord)" value="34.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseAssignmentSpec(CSVRecord)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseDateOrError(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.postProcess()" value="20.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.setHeader(List&lt;String&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter.main(String[])" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getComponent()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getEvents()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getTitle()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setActive(AbstractWizard)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setEvents(List&lt;CalendarEvent&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setFile(File)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.IcsFileImporter()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getCustomPage()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getFileNamePattern()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.isReady()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.readEvents(File)" value="25.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.run()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.setFile(File)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(CustomPropertyManager, SortedSet&lt;S&gt;, Class&lt;T&gt;)" value="19.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(HumanResourceManager)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(TaskManager)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.ExporterToMsProjectFile()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createExportJob(File)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createJobs(File, List&lt;File&gt;)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createProjectWriter()" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getCustomOptionsUI()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileExtensions()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileNamePattern()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileTypeDescription()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getOptions()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSelectedFormatExtension()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.proposeFileExtension()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.ImporterFromMsProjectFile()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.findChangedDates(Map&lt;GanttTask, Date&gt;, Map&lt;Task, Task&gt;, List&lt;Pair&lt;Level, String&gt;&gt;)" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getFileNamePattern()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getOptions()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getTaskManager()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.run()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.LocaleOption()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.getSelectedLocale()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.setSelectedLocale(Locale)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.ProjectFileExporter(IGanttProject)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertConstraint(TaskDependency)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertDuration(TimeDuration)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertFinishTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertLag(TaskDependency)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertPriority(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertStartTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertTaskId(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertValue(CustomProperty)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.copyHours(ProjectCalendarHours, ProjectCalendarHours)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportAssignments(Map&lt;Integer, Task&gt;, Map&lt;Integer, Resource&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCalendar()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomFieldTypes(Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomProperties(CustomPropertyHolder, Map&lt;CustomPropertyDefinition, FieldType&gt;, CustomPropertySetter)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDaysOff(HumanResource, Resource)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDependencies(Map&lt;Integer, Task&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(GPCalendar, ProjectCalendar)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(ProjectCalendar)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResource(HumanResource, Map&lt;Integer, Resource&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResources(Map&lt;Integer, Resource&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTask(Task, Task, int, int, Map&lt;Integer, Task&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTasks(Map&lt;Integer, Task&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportWeekends(ProjectCalendar)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task, double)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getCalendar()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getMaxTaskID()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getResourceManager()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskHierarchy()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskManager()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.isWorkingDay(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.run()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, ColumnList, File)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, TaskTreeUIFacade, File)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertConstraint(Relation)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataType(FieldType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataValue(FieldType, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertPriority(Priority)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertStartTime(Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createPatchedStream(File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createReader(File)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.debugTransformation()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.findDurationFunction(Task, StringBuilder)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.foreignId(Task)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getDurations(Date, Date)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getErrors()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getNativeCalendar()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getOriginalStartDates()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getTaskManager()" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomColumn(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomProperties()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCalendar(ProjectFile)" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomFields(Task, GanttTask)" value="17.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomProperties(Resource, HumanResource)" value="9.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDailyHoliday(ProjectCalendarException, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDayType(ProjectCalendar, Day, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDaysOff(Resource, HumanResource)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDependencies(ProjectFile, Map&lt;Integer, GanttTask&gt;)" value="17.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, Date, Optional&lt;String&gt;, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, int, Optional&lt;String&gt;, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(ProjectCalendarException, HolidayAdder)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResourceAssignments(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;Integer, HumanResource&gt;)" value="10.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResources(ProjectFile, Map&lt;Integer, HumanResource&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTask(ProjectFile, Task, Task, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="29.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTasks(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importWeekends(ProjectCalendar)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importYearlyHoliday(ProjectCalendarException, HolidayAdder)" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.isCustomField(FieldType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.run()" value="9.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.setPatchMspdi(boolean)" value="0.0"/>
		<VALUE measured="breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="0.0"/>
		<VALUE measured="breadthFirstSearch(Task, boolean)" value="0.0"/>
		<VALUE measured="build()" value="5.0"/>
		<VALUE measured="call()" value="0.0"/>
		<VALUE measured="canRead()" value="0.0"/>
		<VALUE measured="canSetPropertyClass(CustomPropertyClass)" value="0.0"/>
		<VALUE measured="canWrite()" value="0.0"/>
		<VALUE measured="cancelCellEditing()" value="0.0"/>
		<VALUE measured="cancelClipboardTransaction()" value="0.0"/>
		<VALUE measured="changeValue(ChangeValueEvent)" value="0.0"/>
		<VALUE measured="changed()" value="0.0"/>
		<VALUE measured="changed(ObservableValue&lt;? extends State&gt;, State, State)" value="8.0"/>
		<VALUE measured="changedUpdate(DocumentEvent)" value="0.0"/>
		<VALUE measured="clear()" value="0.0"/>
		<VALUE measured="clearOrdering()" value="1.0"/>
		<VALUE measured="close()" value="0.0"/>
		<VALUE measured="columnAdded(TableColumnModelEvent)" value="0.0"/>
		<VALUE measured="columnMarginChanged(ChangeEvent)" value="0.0"/>
		<VALUE measured="columnMoved(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="columnRemoved(TableColumnModelEvent)" value="0.0"/>
		<VALUE measured="columnSelectionChanged(ListSelectionEvent)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.buildDeb(File, File, File)" value="6.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.endFileEntry(OutputStream, long)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.main(String[])" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(String, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(long, int)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.startFileEntry(OutputStream, String, long, long)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Changelog()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Format.getValues()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFile()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFormat()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getTargetFilename()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.isDebian()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setDebian(boolean)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFile(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFormat(Format)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.addText(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtended()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtendedFormatted()" value="9.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getSynopsis()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.setSynopsis(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setEmail(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setName(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.toString()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Priority.getValues()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.Section()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.getValues()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setDebian(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setEpoch(int)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setUpstream(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.toString()" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.add(TarFileSet)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addChangelog(Changelog)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addConfFiles(TarFileSet)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addDescription(Description)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addFileToTar(Tar, File, String, String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addMaintainer(Maintainer)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addVersion(Version)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createDataFile()" value="14.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createMasterControlFile()" value="8.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createTempFolder()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFileCheck(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolder(File)" value="7.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolderCheck(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.execute()" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileMd5(File)" value="7.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileNames(FileSet)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.gzip(File, File, int, byte)" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.normalizeTargetFolder(TarFileSet)" value="10.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelog(Changelog)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelogs()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String, String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.scanData()" value="34.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setArchitecture(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConfig(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConflicts(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDebFilenameProperty(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDepends(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setEnhances(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setHomepage(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setMaintainer(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPackage(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostinst(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostrm(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreDepends(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreinst(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPrerm(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPriority(Priority)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setProvides(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setRecommends(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setReplaces(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSection(Section)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSuggests(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTemplates(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setToDir(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTriggers(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setVersion(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.writeControlFile(File, long)" value="12.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Comment.Comment()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.GenericName.GenericName()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Icon.Icon()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.LocalizedEntry(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.getValue()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setCountry(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setEncoding(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setLang(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setModifier(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setValue(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.toString()" value="7.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Name.Name()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Type.getValues()" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addComment(Comment)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addGenericName(GenericName)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addIcon(Icon)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addName(Name)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.execute()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.init()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setCategories(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setComment(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setExec(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setGenericName(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setIcon(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setMimeType(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setName(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNoDisplay(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNotShowIn(String)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setOnlyShowIn(String)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setPath(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTerminal(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setToFile(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTryExec(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setType(Type)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setUrl(String)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateCategories(String)" value="46.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateKeys()" value="30.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.GZipOutputStream(OutputStream, int)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.close()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.finish()" value="11.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.setFileSystem(byte)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.write(byte[], int, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeHeader()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeInt(int, byte[], int)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeShort(int, byte[], int)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeTrailer(byte[], int)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(File)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream, boolean)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer, boolean)" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.println()" value="0.0"/>
		<VALUE measured="commit()" value="2.0"/>
		<VALUE measured="commitClipboardTransaction()" value="0.0"/>
		<VALUE measured="compare(Column, Column)" value="0.0"/>
		<VALUE measured="compare(ColumnImpl, ColumnImpl)" value="6.0"/>
		<VALUE measured="compare(File, File)" value="0.0"/>
		<VALUE measured="compare(GPCalendar, GPCalendar)" value="0.0"/>
		<VALUE measured="compare(GanttCalendar, GanttCalendar)" value="0.0"/>
		<VALUE measured="compare(Integer, Integer)" value="0.0"/>
		<VALUE measured="compare(Locale, Locale)" value="0.0"/>
		<VALUE measured="compare(Node, Node)" value="0.0"/>
		<VALUE measured="compare(ResourceField, ResourceField)" value="0.0"/>
		<VALUE measured="compare(String, String)" value="6.0"/>
		<VALUE measured="compare(Task, Task)" value="0.0"/>
		<VALUE measured="compare(TaskActivity, TaskActivity)" value="11.0"/>
		<VALUE measured="compare(TaskField, TaskField)" value="0.0"/>
		<VALUE measured="compare(WebDavResource, WebDavResource)" value="4.0"/>
		<VALUE measured="compareDocumentOrder(Task, Task)" value="0.0"/>
		<VALUE measured="componentHidden(ComponentEvent)" value="0.0"/>
		<VALUE measured="componentMoved(ComponentEvent)" value="0.0"/>
		<VALUE measured="componentResized(ComponentEvent)" value="0.0"/>
		<VALUE measured="componentShown(ComponentEvent)" value="0.0"/>
		<VALUE measured="contains(Task)" value="0.0"/>
		<VALUE measured="copyValues()" value="1.0"/>
		<VALUE measured="createAtomUnitBuilder()" value="1.0"/>
		<VALUE measured="createContainmentFacade()" value="0.0"/>
		<VALUE measured="createDateFormat(String)" value="0.0"/>
		<VALUE measured="createFacade()" value="0.0"/>
		<VALUE measured="createPrototype(Object)" value="0.0"/>
		<VALUE measured="createTopAndBottomUnitBuilder()" value="0.0"/>
		<VALUE measured="createValue(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="createValue(GanttPreviousState)" value="1.0"/>
		<VALUE measured="createValue(Role)" value="0.0"/>
		<VALUE measured="createValue(WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="deleteAutosaves()" value="2.0"/>
		<VALUE measured="deleteValue(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="deleteValue(GanttPreviousState)" value="3.0"/>
		<VALUE measured="deleteValue(Role)" value="0.0"/>
		<VALUE measured="deleteValue(WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="dependencyAdded(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="dependencyChanged(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="dependencyRemoved(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="doInBackground()" value="1.0"/>
		<VALUE measured="done()" value="2.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.FeaturesSetup(GanttProject, ChartPanel)" value="0.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.askToRunExtendAlg()" value="6.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupButton()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupEvents()" value="3.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupGui(ChartPanel)" value="0.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupSliders()" value="0.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupTitle()" value="0.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.syncSliders()" value="3.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.updateSliders()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.TaskChange()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyAdded(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyChanged(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyRemoved(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.fire()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.onCalendarChange()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectClosed()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectCreated()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectModified()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectOpened()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectSaved()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.reset()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.setListener(ChangeListener)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskAdded(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskModelReset()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskMoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskProgressChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskPropertiesChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskRemoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskScheduleChanged(TaskScheduleEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyAdded(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyChanged(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyRemoved(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskAdded(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskModelReset()" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskMoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskPropertiesChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskRemoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskScheduleChanged(TaskScheduleEvent)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.MyEntry(Component, Slider)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getKey()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getValue()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.setValue(Slider)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyManager()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getComponent()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getSlider(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, Slider)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, float)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.removeSlider(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider(float)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.formatProgress()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.getComponent()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.progress()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.round(float)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.setProgress(float)" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.set_slide_progress()" value="0.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.text()" value="0.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.Statistics(TaskManager)" value="0.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.calcParameters()" value="4.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getCompletedTasks()" value="0.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getDelayedTasks()" value="0.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getTotalTask()" value="0.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getUncompletedTasks()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.Feature2Tests()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.calcFiveDaysAgo()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.genTaskNumber()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testCompleted()" value="4.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testDelayed()" value="4.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testUncompleted()" value="4.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.MockingManager()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addOneDay(Date)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addTaskListener(TaskListener)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.clear()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createCompletedTask(Date)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createConstraint(Type)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(String)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, Date, Date)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, float)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(long)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(Date)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(int)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.deleteTask(Task)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.emptyClone()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.encode(TimeDuration)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getAlgorithmCollection()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendar()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendarListener()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCustomPropertyManager()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyCollection()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyGraph()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyHardnessOption()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectCompletion()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectEnd()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectLength()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectListener()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectStart()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getRootTask()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTask(int)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCopyNamePrefixOption()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCount()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskDefaultColorOption()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskHierarchy()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskNamePrefixOption()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTasks()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.isZeroMilestones()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.newTaskBuilder()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.processCriticalPath(Task)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.registerTask(Task)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.setZeroMilestones(Boolean)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.shift(Date, TimeDuration)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.taskCommitYesNo(TaskMutator, String, String)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.MockingTask(GanttCalendar, GanttCalendar)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.addNotes(String)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.applyThirdDateConstraint()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutator()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutatorFixingDuration()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.delete()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getActivities()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignmentCollection()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignments()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAttachments()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getColor()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCompletionPercentage()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCost()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCustomValues()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependencies()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependant()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependee()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDisplayEnd()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDuration()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getEnd()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getExpand()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getManager()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getName()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNestedTasks()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNotes()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getPriority()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getShape()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getStart()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getSupertask()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskID()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskInfo()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThird()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThirdDateConstraint()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isCritical()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isMilestone()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isProjectTask()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isSupertask()" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task, int)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setColor(Color)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCompletionPercentage(int)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCritical(boolean)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setDuration(TimeDuration)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setEnd(GanttCalendar)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setExpand(boolean)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setMilestone(boolean)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setName(String)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setNotes(String)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setPriority(Priority)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setProjectTask(boolean)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setShape(ShapePaint)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setStart(GanttCalendar)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setTaskInfo(TaskInfo)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDate(GanttCalendar)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDateConstraint(int)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setWebLink(String)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.shift(TimeDuration)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.translateDuration(TimeDuration)" value="0.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.unpluggedClone()" value="0.0"/>
		<VALUE measured="findIndex(WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="findTaskUnderMousePointer(int, int)" value="1.0"/>
		<VALUE measured="finish()" value="0.0"/>
		<VALUE measured="fireDependencyAdded(TaskDependency)" value="0.0"/>
		<VALUE measured="fireDependencyChanged(TaskDependency)" value="0.0"/>
		<VALUE measured="fireDependencyRemoved(TaskDependency)" value="0.0"/>
		<VALUE measured="fireScroll(MouseWheelEvent)" value="2.0"/>
		<VALUE measured="focusGained(FocusEvent)" value="0.0"/>
		<VALUE measured="focusLost(FocusEvent)" value="0.0"/>
		<VALUE measured="format(Offset)" value="0.0"/>
		<VALUE measured="format(TimeUnit, Date)" value="0.0"/>
		<VALUE measured="get()" value="0.0"/>
		<VALUE measured="getActiveAction()" value="1.0"/>
		<VALUE measured="getAtomUnitOffsets()" value="0.0"/>
		<VALUE measured="getAttributes()" value="0.0"/>
		<VALUE measured="getBarHeight()" value="0.0"/>
		<VALUE measured="getBottomLabelOption()" value="0.0"/>
		<VALUE measured="getBottomUnitOffsets()" value="0.0"/>
		<VALUE measured="getCellEditorValue()" value="1.0"/>
		<VALUE measured="getColor(Task)" value="0.0"/>
		<VALUE measured="getConnectors(Task)" value="1.0"/>
		<VALUE measured="getContainer(Task)" value="0.0"/>
		<VALUE measured="getDeepNestedTasks(Task)" value="0.0"/>
		<VALUE measured="getDefaultHardness()" value="0.0"/>
		<VALUE measured="getDefaultValue()" value="0.0"/>
		<VALUE measured="getDefaultValueAsString()" value="0.0"/>
		<VALUE measured="getDepth(Task)" value="0.0"/>
		<VALUE measured="getDescription()" value="0.0"/>
		<VALUE measured="getDirectoryName()" value="0.0"/>
		<VALUE measured="getDuration()" value="0.0"/>
		<VALUE measured="getElementAt(int)" value="0.0"/>
		<VALUE measured="getEnd()" value="0.0"/>
		<VALUE measured="getEvent(Date)" value="0.0"/>
		<VALUE measured="getField(int)" value="0.0"/>
		<VALUE measured="getFileName()" value="0.0"/>
		<VALUE measured="getFontSize()" value="0.0"/>
		<VALUE measured="getFormatter(TimeUnit, Position)" value="0.0"/>
		<VALUE measured="getHolidayColor(Date)" value="2.0"/>
		<VALUE measured="getID()" value="0.0"/>
		<VALUE measured="getInputStream()" value="0.0"/>
		<VALUE measured="getJComponent()" value="0.0"/>
		<VALUE measured="getLabels(TextMetrics)" value="0.0"/>
		<VALUE measured="getLeftLabelOption()" value="0.0"/>
		<VALUE measured="getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="5.0"/>
		<VALUE measured="getListCellRendererComponent(JList&lt;?&gt;, Object, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="getLocale()" value="0.0"/>
		<VALUE measured="getLocalizedName()" value="0.0"/>
		<VALUE measured="getMaxIntervalLength()" value="0.0"/>
		<VALUE measured="getMoveDuration()" value="0.0"/>
		<VALUE measured="getName()" value="0.0"/>
		<VALUE measured="getNamespaceURI(String)" value="1.0"/>
		<VALUE measured="getNestedTasks(Task)" value="0.0"/>
		<VALUE measured="getNextSibling(Task)" value="0.0"/>
		<VALUE measured="getOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="0.0"/>
		<VALUE measured="getOptionName(String)" value="1.0"/>
		<VALUE measured="getOutlinePath(Task)" value="0.0"/>
		<VALUE measured="getOutputStream()" value="0.0"/>
		<VALUE measured="getOwner()" value="0.0"/>
		<VALUE measured="getParserFactory()" value="0.0"/>
		<VALUE measured="getPassword()" value="0.0"/>
		<VALUE measured="getPath()" value="0.0"/>
		<VALUE measured="getPopupMenuActions(MouseEvent)" value="0.0"/>
		<VALUE measured="getPreferredSize()" value="0.0"/>
		<VALUE measured="getPrefix(String)" value="0.0"/>
		<VALUE measured="getPrefixes(String)" value="0.0"/>
		<VALUE measured="getPreviousSibling(Task)" value="0.0"/>
		<VALUE measured="getProjectDatesOption()" value="0.0"/>
		<VALUE measured="getProjectEnd()" value="0.0"/>
		<VALUE measured="getProjectStart()" value="0.0"/>
		<VALUE measured="getProperty(Task, String)" value="0.0"/>
		<VALUE measured="getPropertyClass()" value="0.0"/>
		<VALUE measured="getRedlineOption()" value="0.0"/>
		<VALUE measured="getResourceVisibleFields()" value="0.0"/>
		<VALUE measured="getRightLabelOption()" value="0.0"/>
		<VALUE measured="getRootTask()" value="0.0"/>
		<VALUE measured="getRowHeight()" value="0.0"/>
		<VALUE measured="getServerName()" value="0.0"/>
		<VALUE measured="getShapePaint(Task)" value="1.0"/>
		<VALUE measured="getShortDateFormat()" value="0.0"/>
		<VALUE measured="getSize()" value="0.0"/>
		<VALUE measured="getSizeLabels()" value="0.0"/>
		<VALUE measured="getStart()" value="0.0"/>
		<VALUE measured="getStringValue(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="getStringValue(GanttPreviousState)" value="0.0"/>
		<VALUE measured="getStringValue(Role)" value="0.0"/>
		<VALUE measured="getStringValue(WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="getStyle(BarChartConnectorImpl)" value="1.0"/>
		<VALUE measured="getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="1.0"/>
		<VALUE measured="getTableCellRendererComponent(DefaultTableCellRenderer, CustomPropertyDefinition, boolean, boolean, int)" value="3.0"/>
		<VALUE measured="getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="1.0"/>
		<VALUE measured="getTaskHierarchy()" value="0.0"/>
		<VALUE measured="getTaskIndex(Task)" value="0.0"/>
		<VALUE measured="getTaskRectangles(Task)" value="0.0"/>
		<VALUE measured="getTasks()" value="0.0"/>
		<VALUE measured="getTasksInDocumentOrder()" value="0.0"/>
		<VALUE measured="getTextCount()" value="0.0"/>
		<VALUE measured="getTextField(Container)" value="8.0"/>
		<VALUE measured="getTimelineBackgroundColor()" value="0.0"/>
		<VALUE measured="getTimelineBorderColor()" value="0.0"/>
		<VALUE measured="getTimelineHeight()" value="0.0"/>
		<VALUE measured="getToolTipText(MouseEvent)" value="1.0"/>
		<VALUE measured="getTopLabelOption()" value="0.0"/>
		<VALUE measured="getTopLineHeight()" value="0.0"/>
		<VALUE measured="getTopUnitOffsets()" value="0.0"/>
		<VALUE measured="getType()" value="0.0"/>
		<VALUE measured="getTypeAsString()" value="0.0"/>
		<VALUE measured="getURI()" value="8.0"/>
		<VALUE measured="getUnitVector(BarChartActivity&lt;Task&gt;, BarChartConnectorImpl)" value="3.0"/>
		<VALUE measured="getUserName()" value="0.0"/>
		<VALUE measured="getValue(int)" value="2.0"/>
		<VALUE measured="getViewportStartDate()" value="0.0"/>
		<VALUE measured="getViewportWidth()" value="0.0"/>
		<VALUE measured="getVisibleFields()" value="0.0"/>
		<VALUE measured="getWeekendColor()" value="0.0"/>
		<VALUE measured="handleEvent(Event)" value="2.0"/>
		<VALUE measured="hasNestedTasks(Task)" value="0.0"/>
		<VALUE measured="hasNotes(Task)" value="0.0"/>
		<VALUE measured="hyperlinkUpdate(HyperlinkEvent)" value="1.0"/>
		<VALUE measured="i18n(String)" value="0.0"/>
		<VALUE measured="importData(ColumnList)" value="0.0"/>
		<VALUE measured="insertUpdate(DocumentEvent)" value="0.0"/>
		<VALUE measured="isCriticalTask(Task)" value="1.0"/>
		<VALUE measured="isDeletable()" value="0.0"/>
		<VALUE measured="isEditable(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="isEmpty()" value="0.0"/>
		<VALUE measured="isEnabled()" value="0.0"/>
		<VALUE measured="isExpanded(HumanResource)" value="0.0"/>
		<VALUE measured="isFirst(TaskActivity)" value="0.0"/>
		<VALUE measured="isHighlighted(Component, ComponentAdapter)" value="0.0"/>
		<VALUE measured="isLast(TaskActivity)" value="0.0"/>
		<VALUE measured="isLocal()" value="0.0"/>
		<VALUE measured="isMilestone(Task)" value="0.0"/>
		<VALUE measured="isMoving()" value="0.0"/>
		<VALUE measured="isProjectTask(Task)" value="0.0"/>
		<VALUE measured="isSupertask()" value="0.0"/>
		<VALUE measured="isValidForMRU()" value="0.0"/>
		<VALUE measured="isVoid(TaskActivity)" value="0.0"/>
		<VALUE measured="itemStateChanged(ItemEvent)" value="0.0"/>
		<VALUE measured="keyPressed(KeyEvent)" value="2.0"/>
		<VALUE measured="keyReleased(KeyEvent)" value="1.0"/>
		<VALUE measured="languageChanged(Event)" value="0.0"/>
		<VALUE measured="layout(JPanel, int)" value="2.0"/>
		<VALUE measured="logDependencyLoop(String, String)" value="0.0"/>
		<VALUE measured="maybeQuit(QuitResponse)" value="2.0"/>
		<VALUE measured="mouseClicked(MouseEvent)" value="1.0"/>
		<VALUE measured="mouseDragged(MouseEvent)" value="0.0"/>
		<VALUE measured="mousePressed(MouseEvent)" value="0.0"/>
		<VALUE measured="mouseReleased(MouseEvent)" value="0.0"/>
		<VALUE measured="move(Task, Task)" value="0.0"/>
		<VALUE measured="move(Task, Task, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.AbstractChartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.cancelClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.commitClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.isDeletable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.installUI(JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.paint(Graphics, JComponent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.processMouseMotionEvent(MouseEvent, JLayer)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addRenderer(ChartRendererBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addSelectionListener(ChartSelectionListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.beginScrollViewInteraction(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.canPaste(ChartSelection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createCopy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createMouseHoverLayer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.finishInteraction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.fireSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getActiveInteraction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getAdapter(Class)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getBottomTimeUnit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getEndDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getHeaderHeight(JComponent, JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getLogo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getRenderedImage(GanttExportSettings)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getSelection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStyle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.init(IGanttProject, IntegerOption, FontOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paintChart(Graphics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paste(ChartSelection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.removeSelectionListener(ChartSelectionListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.reset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.resetRenderers()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scheduleTask(Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scrollBy(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setActiveInteraction(MouseInteraction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnit(TimeUnit)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnitWidth(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setCursor(Cursor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setDimensions(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartOffset(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTimelineHeight(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTopUnit(TimeUnit)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setVScrollController(VScrollController)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.zoomChanged(ZoomEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.CalendarEventAction(GPCalendar, Date, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addException(GPCalendar, Date, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addHoliday(GPCalendar, Date, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeException(GPCalendar, Date, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeHoliday(GPCalendar, Date, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.ChartComponentBase(IGanttProject, UIFacade, ZoomManager)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addRenderer(ChartRendererBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addSelectionListener(ChartSelectionListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.buildImage(GanttExportSettings, ChartImageVisitor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.canPaste(ChartSelection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.createCopy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getAdapter(Class)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getEndDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getJComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionsDialogAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getPopupMenuActions(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getRenderedImage(GanttExportSettings)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getSelection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStyle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIConfiguration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.init(IGanttProject, IntegerOption, FontOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.initMouseListeners()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paintComponent(Graphics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paste(ChartSelection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.removeSelectionListener(ChartSelectionListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.reset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.resetRenderers()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.scrollBy(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnit(TimeUnit)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnitWidth(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDefaultCursor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDimensions(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartOffset(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTimelineHeight(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTopUnit(TimeUnit)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setVScrollController(VScrollController)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.ChartTabContentPanel(IGanttProject, UIFacade, TimelineChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addChartPanel(Component)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addTableResizeListeners(Component, Component)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.alignTopPanelHeights(JComponent, JComponent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createChartPanels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createContentComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getDividerLocation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getLeftPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getRightPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getUiFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setDividerLocation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.updateTimelineHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.CustomPropertyClass(String, String, Class&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.fromJavaClass(Class&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDefaultValueAsString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDisplayName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getJavaClass()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(String, String)" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.encodeFieldType(Class&lt;?&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String, String, CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.canSetPropertyClass(CustomPropertyClass)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getAttributes()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValueAsString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getPropertyClass()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getType()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getTypeAsString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setDefaultValueAsString(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setPropertyClass(CustomPropertyClass)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.isMacOs()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.setup(GanttProject)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.isCommited()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogBuilder(JFrame)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.DialogImpl(JDialog, JFrame, NotificationManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.center(Centering)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.hide()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.layout()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.setNotificationOwner(JButton)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.show()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.NotificationViewImpl(JDialog, JButton)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isReady()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.setComponent(JComponent, JComponent, Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.showBalloon()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.createDialog(Component, Action[], String, NotificationManager)" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.ErrorNotifier(UIFacadeImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.add(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.FacadeInvalidator(TreeModel, List&lt;RowHeightAligner&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.isValid()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectClosed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.reset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesChanged(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesInserted(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesRemoved(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeStructureChanged(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.close()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.debug(Logger, String, Object...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Class&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(Throwable)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logSystemInformation()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readConfiguration(URL)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readLog()" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setLogFile(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setUIFacade(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.GPTransferable(ClipboardContents)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createDocumentFlavor()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createTextFlavor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferData(DataFlavor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferDataFlavors()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.isDataFlavorSupported(DataFlavor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.ColumnImpl(JXTreeTable, TableColumnExt, Column)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getHeaderFitDimension()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getOrder()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getSort()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getStub()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableColumnExt()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.isVisible()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setOrder(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setSort(SortOrder)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setVisible(boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setWidth(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.GPTreeTableBase(IGanttProject, UIFacade, CustomPropertyManager, DefaultTreeTableModel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.HeaderMouseListener(CustomPropertyManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.createPopupActions(MouseEvent)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.handlePopupTrigger(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mousePressed(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mouseReleased(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.SortTableHeaderRenderer(JTable, Function&lt;Integer, ColumnImpl&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.TableHeaderUiFacadeImpl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.add(String, int, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clear()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clearUiColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createColumn(int, Column)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createDefaultColumns(List&lt;Column&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createStub(Column)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.deleteColumn(CustomPropertyDefinition)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByID(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByViewIndex(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getColumns()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getField(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getModelIndex(Column)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importColumnList(ColumnList)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importData(ColumnList)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.insertColumnIntoUi(ColumnImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.renameColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.updateType(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.VscrollAdjustmentListener(TimelineChart, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.adjustmentValueChanged(AdjustmentEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.isScrollable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.scrollBy(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addAction(Action, KeyStroke)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addActionWithAccelleratorKey(GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addNewCustomColumn(CustomColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.applyComponentOrientation(ComponentOrientation)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumnWidth(ColumnImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumns()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellEditor(Class&lt;?&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellRenderer(Class&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createDefaultEditors()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.deleteCustomColumn(CustomColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.doInit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editCellAt(int, int, EventObject)" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editingStopped(ChangeEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getCellEditor(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getDefaultColumns()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getHorizontalScrollBar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getManageColumnsAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getScrollPane()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTableHeaderUiFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getToolTipText(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTreeTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVerticalScrollBar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVisibleFields()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.initTreeTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.insertWithLeftyScrollBar(JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.isStartEditingEvent(KeyEvent, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.newTableColumnExt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onCellSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectCreated()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectOpened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.prepareEditor(TableCellEditor, int, int)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processKeyBinding(KeyStroke, KeyEvent, int, boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processMouseEvent(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setNewRowAction(GPAction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setRowPropertiesAction(GPAction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setupActionMaps(GPAction...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.wrapEditor(TableCellEditor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.GPTreeTransferHandler(GPTreeTableBase, TaskManager, Supplier&lt;GanttChart&gt;, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.canImport(TransferSupport)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.createTransferable(JComponent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.getSourceActions(JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.importData(TransferSupport)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentBuildNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentVersionNumber()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.GanttChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, JComponent, UIConfiguration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createButtonPanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createSchedulePanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChartComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getTreeComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getViewComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings(boolean, boolean, boolean, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getEndDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getLogo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getRowCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getVisibleTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getZoomLevel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isCommandLineMode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isExpanded(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isOnlySelectedItem()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setCommandLineMode(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setEndDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setExpandedResources(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setLogo(Image)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setOnlySelectedItem(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setRowCount(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setStartDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setWidth(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setZoomLevel(ZoomState)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.GanttGraphicArea(GanttProject, GanttTree2, TaskManager, ZoomManager, GPUndoManager)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.MouseSupport(ChartModelImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.findTaskUnderMousePointer(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.getChartItemUnderMousePoint(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createBaselineColorOptions(ChartModelImpl, UIConfiguration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createToggleHolidayAction(int)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.customPropertyChange(CustomPropertyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaseline()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaselineColorOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChart(GanttExportSettings)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartImplementation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getHeaderHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getImplementation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseMotionListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMyChartModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPopupMenuActions(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPreferredSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskDefaultColorOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskLabelOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTreeTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getUndoManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getViewState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectClosed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectCreated()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectModified()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectOpened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectSaved()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.repaint()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setBaseline(GanttPreviousState)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setPreviousStateTasks(List&lt;GanttPreviousStateTask&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttOptions(RoleManager, DocumentManager, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.characters(char[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.endElement(String, String, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.startElement(String, String, String, Attributes)" value="183.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(GPOptionGroup...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(Iterable&lt;GPOptionGroup&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptions(GPOptionGroup)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.correct(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.doSave(OutputStream)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getAutomatic()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getButtonShow()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getCSVOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExport3dBorders()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportComplete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportRelations()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportSettings()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPDirectory()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPPwd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUrl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUser()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontSpec(Font)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontStyle(Font)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getIconSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getLockDAVMinutes()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getOptionsFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getPluginPreferences()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getResourceColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getRoleManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getShowStatusBar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getToolBarPosition()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUndoNumber()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getVersion()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWorkingDir()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getX()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslDir()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslFo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getY()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.initDefault()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isLoaded()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isMaximized()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.load()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.loadRoleSets(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.save()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.savePreferences(Preferences, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoleSets(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoles(RoleSet, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setAutomatic(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setButtonShow(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setDaysOffColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setEarlierPreviousTaskColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExport3dBorders(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportComplete(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportName(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportRelations(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPDirectory(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPPwd(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUrl(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUser(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setIconSize(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLaterPreviousTaskColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLockDAVMinutes(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setPreviousTaskColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setRedline(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceOverloadColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceUnderloadColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setShowStatusBar(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setToolBarPosition(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUIConfiguration(UIConfiguration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUndoNumber(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWeekEndColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowPosition(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowSize(int, int, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWorkingDirectory(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslDir(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslFo(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.BaselineSaver.save(File, List&lt;GanttPreviousStateTask&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.GanttPreviousState(String, List&lt;GanttPreviousStateTask&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTasks(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTemporaryFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.init()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.load()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.remove()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.saveFile()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.GanttPreviousStateTask(int, GanttCalendar, int, boolean, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getDuration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getId()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.hasNested()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.isMilestone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.GanttProject(boolean)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newParser()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newSaver()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.addMouseListenerToAllContainer(Component[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.changeWorkingDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.createToolbar()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.fitBounds(GraphicsConfiguration, Rectangle)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getActiveCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getArea()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getBaselines()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCopyAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCutAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDocument()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttDividerLocation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptionsGroup()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getOrganization()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getPasteAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getProjectName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceDividerLocation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourcePanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getStopEditingMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskContainment()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getToolTip(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getUIConfiguration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getWebLink()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getZoomActionSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.initOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.isModified()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.languageChanged(Event)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.main(String[])" value="25.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.newProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.open(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.openStartupDocument(String)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.printProject()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.quitApplication()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refreshProjectInformation()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAdded(ResourceEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAssignmentsChanged(ResourceEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceChanged(ResourceEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourcesRemoved(ResourceEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreBounds()" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveAsProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setApplicationQuitCallback(Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setAskForSave(boolean)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDescription(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDocument(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setGanttDividerLocation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setOrganization(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setProjectName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setResourceDividerLocation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setWebLink(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.tryImportDocument(Document)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.GanttProjectBase()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.RowHeightAligner(TreeTableContainer, ChartModelBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.optionsChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addOnUpdateComponentTreeUi(Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addProjectEventListener(ProjectEventListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createContentPane(JPanel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createDialog(Component, Action[], String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectModified(boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getActiveChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getCurrentTaskView()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDocumentManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDpiOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLafOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLanguageOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLogo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLookAndFeel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getMainFrame()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getNotificationManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProjectUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getResourceCustomPropertyManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getRssFeedChecker()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getScrollingManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getSearchUi()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getStatusBar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTabs()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskCustomColumnManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionContext()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUiFacadeImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUndoManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getViewManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getZoomManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.removeProjectEventListener(ProjectEventListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setLookAndFeel(GanttLookAndFeelInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setStatusText(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setWorkbenchTitle(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showConfirmationDialog(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showNotificationDialog(NotificationChannel, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showOptionDialog(int, String, Action[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Action[], int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showSettingsDialog(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showYesNoConfirmationDialog(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getAttributeName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getTagName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.loadValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.GanttProjectImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.TaskManagerConfigImpl(HumanResourceManager, GPCalendarCalc, GanttLanguage)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColorOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getNotificationManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getProjectDocumentURL()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getResourceManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.addProjectEventListener(ProjectEventListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.close()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getActiveCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getBaselines()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocument()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocumentManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getHumanResourceManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getLanguage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getOrganization()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getProjectName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getResourceCustomPropertyManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getRoleManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskContainment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskCustomColumnManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getUIConfiguration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getWebLink()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.isModified()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.newTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.open(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.removeProjectEventListener(ProjectEventListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.repaintResourcePanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDescription(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDocument(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setOrganization(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setProjectName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setWebLink(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.GanttResourcePanel(GanttProject, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.addToolbarActions(ToolbarBuilder)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.clearSelection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.copySelection(ClipboardContents)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createPopupMenu(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createTreeTable(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.cutSelection(ClipboardContents)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getContext()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveDownAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveUpAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPeople()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPopupMenuPoint(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getProjectEventListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceActionSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceAssignments()" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTableModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResources()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRootNode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRowHeightAligner()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTaskSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTreeActions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.handlePopupTrigger(MouseEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.init()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.nbPeople()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.newHuman(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.reset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAdded(ResourceEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAssignmentsChanged(ResourceEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceChanged(ResourceEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourcesRemoved(ResourceEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.saveSelectionToClipboard(ClipboardContents, boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setSelected(HumanResource, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setTaskPropertiesAction(GPAction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.startDefaultEditing(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.updateContextActions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.GanttSplash()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.close()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(Graphics2D, String, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.frameInit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(String, GanttCalendar, long, TaskManagerImpl, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(TaskManagerImpl, TaskImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.getLength()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.setLength(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTree2(GanttProject, TaskManager, TaskSelectionManager, UIFacade)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.GanttTreeDropListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragExit(DropTargetEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragOver(DropTargetDragEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.drop(DropTargetDropEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.isHighlighted(Component, ComponentAdapter)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeCollapsed(TreeExpansionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeExpanded(TreeExpansionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addObjectWithExpand(Object, MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addToolbarActions(ToolbarBuilder)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.applyPreservingExpansionState(Task, Predicate&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearSelection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.convertNodesListToItemList(List&lt;DefaultMutableTreeTableNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createDirtyfier(GanttProjectBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createPopupMenu(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createTreeTable(IGanttProject, Runnable, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.expandRefresh(TreeTableNode)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getAllTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getJTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getParentNode(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getPopupMenuActions()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRoot()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRootNode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRowHeightAligner()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTaskSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTreeActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleFields()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleNodes(VisibleNodesFilter)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.handlePopupTrigger(MouseEvent)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.init()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.initRootNode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onTaskSelectionChanged(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setEditingTask(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setGraphicArea(ChartComponentBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelected(Task, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelectionPaths(TreePath[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.startDefaultEditing(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.stopEditing()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.GanttTreeTable(IGanttProject, UIFacade, GanttTreeTableModel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.ModelListener.tableChanged(TableModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.centerViewOnSelectedCell()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.doInit()" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.editSelectedTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getDefaultColumns()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getUiFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.onProjectCreated()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.BeginDateComparator.compare(Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.EndDateComparator.compare(Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.GanttTreeTableModel(TaskManager, CustomPropertyManager, UIFacade, Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnAdded(TableColumnModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMarginChanged(ChangeEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMoved(TableColumnModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnRemoved(TableColumnModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnSelectionChanged(ListSelectionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.compareDocumentOrder(Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.contains(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnClass(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnName(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getCustomProperty(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getHierarchicalColumn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getRootNode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getValueAt(Object, int)" value="35.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.isCellEditable(Object, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setCustomPropertyValue(Object, Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValue(Object, Object, int)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValueAt(Object, Object, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getPluginManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getTaskSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.registerTaskSelectionManager(TaskSelectionManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.OSXAdapter(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleAbout(ApplicationEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleOpenFile(ApplicationEvent)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handlePreferences(ApplicationEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleQuit(ApplicationEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.registerMacOSXApplication(GanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.setupSystemProperties()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.PluginOptionsHandler(PluginPreferencesImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.startElement(String, String, String, Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.PluginPreferencesImpl(Preferences, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.absolutePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.childrenNames()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.createChild(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.flush()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.get(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getBoolean(String, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getByteArray(String, byte[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getDouble(String, double)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getFloat(String, float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getInt(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getLong(String, long)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.keys()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.name()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.node(String)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.nodeExists(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.parent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.put(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putBoolean(String, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putByteArray(String, byte[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putDouble(String, double)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putFloat(String, float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putInt(String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putLong(String, long)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.remove(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.removeNode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.sync()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IEclipsePreferences, IPreferenceFilter[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IExportedPreferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, IPreferenceFilter[], OutputStream)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, OutputStream, String[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.get(String, String, Preferences[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getBoolean(String, String, boolean, IScopeContext[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getByteArray(String, String, byte[], IScopeContext[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDefaultLookupOrder(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDouble(String, String, double, IScopeContext[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getFloat(String, String, float, IScopeContext[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getInt(String, String, int, IScopeContext[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLong(String, String, long, IScopeContext[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLookupOrder(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getRootNode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getString(String, String, String, IScopeContext[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.importPreferences(InputStream)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.matches(IEclipsePreferences, IPreferenceFilter[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.readPreferences(InputStream)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.setDefaultLookupOrder(String, String, String[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos(String, String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getOrganization()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getWebLink()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setDescription(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setOrganization(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setWebLink(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectClosed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectCreated()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectModified()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectOpened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectSaved()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.ResourceChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, Component)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.createButtonPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChartComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getTreeComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getViewComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.ResourceDefaultColumn(Column, Class&lt;?&gt;, String, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.find(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getColumnStubs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getStub()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getValueClass()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.isEditable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.ResourceChartSelection(IGanttProject, GanttResourcePanel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.cancelClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.commitClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.exportIntoSystemClipboard()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.isEmpty()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.lostOwnership(Clipboard, Transferable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startCopyClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startMoveClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceLoadGraphicArea(GanttProject, ZoomManager, ResourceTreeUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.ResourcechartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.canPaste(ChartSelection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paste(ChartSelection)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getChartModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getImplementation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseListener()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getPreferredSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getResourceManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getTreeTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getViewState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.isExpanded(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.ResourceTreeImageGenerator(HumanResourceManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.calculateDimension()" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.createImage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.getRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.isAssignmentVisible(ResourceAssignment)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.printResources(Graphics, int)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.ResourceTreeTable(IGanttProject, ResourceTreeTableModel, UIFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.buildPath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionDown()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionUp()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.doInit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.downResource()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getDefaultColumns()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getRoleManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getSelectedNodes()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getToolTipText(MouseEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isExpanded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isVisible(DefaultMutableTreeTableNode)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.newTableColumnExt(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.onProjectOpened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.swapAssignents(AssignmentNode, AssignmentNode)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.upResource()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.ResourceTreeTableModel(HumanResourceManager, TaskManager, CustomPropertyManager)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.SelectionKeeper(TreeSelectionModel, DefaultMutableTreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.restoreSelection()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.addResource(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildAssignmentsSubtree(ResourceNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.changePeople(List&lt;HumanResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.decreaseCustomPropertyIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResource(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResources(HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getAllResouces()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnClass(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getCustomProperty(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForAssigment(ResourceAssignment)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getValueAt(Object, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.isCellEditable(Object, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveDown(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveUp(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.reset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceAssignmentsChanged(Iterable&lt;HumanResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceChanged(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setSelectionModel(TreeSelectionModel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setValueAt(Object, Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.updateResources()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.useNextIndex()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.ShowHideColumnsDialog(UIFacade, ColumnList, CustomPropertyManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.show()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.TaskContainmentHierarchyFacadeImpl(GanttTree2)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.areUnrelated(Task, Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.compareDocumentOrder(Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.contains(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getContainer(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDeepNestedTasks(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDepth(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNestedTasks(Task)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNextSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getPreviousSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getRootTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskIndex(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTasksInDocumentOrder()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.hasNestedTasks(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sort(Comparator&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sortHelper(Task, Comparator&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.TaskModelModificationListener(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyAdded(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyChanged(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyRemoved(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskAdded(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskMoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskProgressChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskPropertiesChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskRemoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskScheduleChanged(TaskScheduleEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.TaskTreeImageGenerator(GanttTree2, UIConfiguration, Image)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.createImage(List&lt;DefaultMutableTreeNode&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.isVisible(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paintTask(Graphics, PaintState, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.printTasks(Graphics2D, List&lt;DefaultMutableTreeNode&gt;)" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.TaskTreeImageGeneratorExt(GanttTree2, UIConfiguration, Image)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintIcon(Graphics, ImageIcon, PaintState, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintString(Graphics, TextMetrics, String, PaintState, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintTask(Graphics, PaintState, Task)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.TreeTableCellEditorImpl(DefaultCellEditor, JTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.addCellEditorListener(CellEditorListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.cancelCellEditing()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createOnFocusGained(JTextComponent, Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createSelectAllCommand(JTextComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createUnselectAllCommand(JTextComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getCellEditorValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.isCellEditable(EventObject)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.removeCellEditorListener(CellEditorListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.shouldSelectCell(EventObject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.stopCellEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesChanged(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesInserted(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesRemoved(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeStructureChanged(TreeModelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.CollapseAllAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.ExpandAllAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.ExpandCollapseAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.TreeTableContainer(Pair&lt;TreeTableClass, TreeTableModelClass&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.applyPreservingExpansionState(ModelObject, Predicate&lt;ModelObject&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.collapseAll(TreePath)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.commitIfEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.expandAll(TreePath)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getDeleteAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNewAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNode(ModelObject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getPropertiesAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getSelectedNodes()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getVisibleFields()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isExpanded(ModelObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isVisible(ModelObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.makeVisible(ModelObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setArtefactActions(GPAction, GPAction, GPAction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setExpanded(ModelObject, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.stopEditing()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode, Predicate&lt;Pair&lt;MutableTreeTableNode, MutableTreeTableNode&gt;&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode, List&lt;MutableTreeTableNode&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.createPath(TreeNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getLevel(TreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeNode, TreeNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeNode, TreeNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.removeAllChildren(MutableTreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.LafOption(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getAttributeName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getLookAndFeel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getTagName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.loadValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.objectToString(GanttLookAndFeelInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.UIFacadeImpl(JFrame, GanttStatusBar, NotificationManagerImpl, IGanttProject, UIFacade)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOnUpdateComponentTreeUi(Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOptions(GPOptionGroup)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.buildMessage(Throwable)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createDialog(Component, Action[], String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job, IProgressMonitor, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createProgressGroup()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.doSetLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getActiveChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getAppFontOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getChartFontOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getCurrentTaskView()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDefaultMonitor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDpiOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getExceptionReport(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getFontFamilies()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttDividerLocation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLafOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguageOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLogo()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLookAndFeel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getMainFrame()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getNotificationManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceDividerLocation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getScrollingManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getSizeLabels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionContext()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getUndoManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getViewIndex()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomActionSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.i18n(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.onViewLog()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.refresh()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.resetErrorLog()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setGanttDividerLocation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setLookAndFeel(GanttLookAndFeelInfo)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setResourceDividerLocation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setStatusText(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setViewIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setWorkbenchTitle(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showNotificationDialog(NotificationChannel, String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showOptionDialog(int, String, Action[])" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Action[], int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showSettingsDialog(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateComponentTreeUI()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateFonts()" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.ArtefactAction(String, IconSize, ActiveActionProvider, Action[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionStateChanged()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactDeleteAction.ArtefactDeleteAction(ActiveActionProvider, Action[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactNewAction.ArtefactNewAction(ActiveActionProvider, Action[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactPropertiesAction.ArtefactPropertiesAction(ActiveActionProvider, Action[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.BaselineDialogAction(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.actionPerformed(ActionEvent)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.CalculateCriticalPathAction(TaskManager, UIConfiguration, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.isOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.setOn(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.IconSize(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.asString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.calledFromAppleScreenMenu(ActionEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createIcon(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createVoidAction(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getAllKeyStrokes(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getCustomIconPath()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getFontawesomeLabel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getI18n(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIcon(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStrokeText(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedDescription()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.languageChanged(Event)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.parseKeyStroke(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.setFontAwesomeLabel(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateAction()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateIcon(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateName()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateTooltip()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.isDefault()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.setDefault(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.ShowChannelAction(NotificationManager, NotificationChannel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.channelCleared()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationAdded()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationRead(NotificationItem)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.updateState()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.ViewToggleAction(Chart, GPViewManager, GPView)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.CopyAction(GPViewManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.CutAction(GPViewManager, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.EditMenu(IGanttProject, UIFacade, GPViewManager, SearchUi, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.add(Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getRedoAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getUndoAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, IconSize, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.actionPerformed(ActionEvent)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteExternalDocument(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteInternalFlavor(ChartSelection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoOrRedoHappened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoableEditHappened(UndoableEditEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.RefreshViewAction(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.SearchDialogAction(SearchUi)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.SettingsDialogAction(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoOrRedoHappened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoableEditHappened(UndoableEditEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.AboutAction(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.HelpMenu(IGanttProject, UIFacade, ProjectUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.RecoverLastProjectAction(IGanttProject, UIFacade, ProjectUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.recover(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.runAction(Document)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.ViewLogAction(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.createMenu()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.CloudProjectActionBase(String, UIFacade, DocumentManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.showURLDialog(IGanttProject, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.ExitAction(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.NewProjectAction(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.OpenMRUDocumentAction(int, String, IGanttProject, UIFacade, ProjectUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.OpenURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.actionPerformed(ActionEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.openRemoteProject(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.PrintAction(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.ProjectExportAction(UIFacade, IGanttProject, Preferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.ProjectImportAction(UIFacade, GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.ProjectMenu(GanttProject, JMenu, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.add(Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getNewProjectAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getOpenProjectAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getPrintAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getSaveProjectAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.ProjectPreviewAction(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.ProjectPropertiesAction(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectClosed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectCreated()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectModified()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectOpened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectSaved()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.SaveProjectAsAction(GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.SaveURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.saveProjectRemotely(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.AssignmentDeleteAction(AssignmentContext, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.deleteAssignments(ResourceAssignment[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager, ResourceContext, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.addStateChangedListener(ActionStateChangedListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getContext()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.hasResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.ResourceActionSet(ResourceContext, AssignmentContext, GanttProject, UIFacade, ResourceTreeTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getAssignmentDelete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceDeleteAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveDownAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveUpAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceNewAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourcePropertiesAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceSendMailAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.deleteResources(HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.ResourceImportAction(HumanResourceManager, TaskManager, RoleManager, GanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getResourcesFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.ResourceMoveDownAction(ResourceTreeTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.valueChanged(TreeSelectionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.ResourceMoveUpAction(ResourceTreeTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.valueChanged(TreeSelectionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.updateAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.ResourceSendMailAction(ResourceTreeTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.actionPerformed(ActionEvent)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.ScrollTimeIntervalAction(String, int, TaskManager, ChartModel, ScrollingManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.createTimeInterval()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.ScrollToEndAction(IGanttProject, TimelineChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.ScrollToSelectionAction(UIFacade, TimelineChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.selectionChanged(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.userInputConsumerChanged(Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.ScrollToStartAction(IGanttProject, TimelineChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.ScrollToTodayAction(TimelineChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.IndentTargetFunctionFactory(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.OutdentTargetFunctionFactory(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.getTaskHierarchy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.actionPerformed(ActionEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.addStateChangedListener(ActionStateChangedListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.askUserPermission(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.forwardScheduling()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTreeFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.selectionChanged(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.userInputConsumerChanged(Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.askUserPermission(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.isEnabled(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.run(List&lt;Task&gt;)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.TaskIndentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.indent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, IndentApplyFxn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.isEnabled(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.run(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.TaskLinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.run(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.TaskMoveDownAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.TaskMoveEnabledPredicate(TaskManager, Function&lt;Collection&lt;Task&gt;, Function&lt;Task, Task&gt;&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.apply(List&lt;Task&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.TaskMoveUpAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.updateAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade, IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.asToolbarAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.isEnabled(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.withIcon(IconSize)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.TaskUnindentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.isEnabled(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.run(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.unindent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, UnindentApplyFxn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.TaskUnlinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.isEnabled(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.ViewChartOptionsDialogAction(ChartComponentBase, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.createDialogComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.ViewCycleAction(GPViewManager, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.GPViewImpl(Chart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getViewComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.setActive(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.ViewMenu(IGanttProject, GPViewManager, IntegerOption, FontOption, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.ZoomActionSet(ZoomManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomInAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomOutAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.ZoomInAction(ZoomManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.zoomChanged(ZoomEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.ZoomOutAction(ZoomManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.getIconFilePrefix()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.zoomChanged(ZoomEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.application.MainApplication.run(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, GPCalendar, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, List&lt;CalendarEvent&gt;, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.ColorEditor(UIFacade, FocusSetter)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getCellEditorValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.moveFocusToTable(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.DateCellRendererImpl(DateFormat)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.Column(Class&lt;?&gt;, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getColumnClass()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getDefault()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.TableModelImpl(List&lt;CalendarEvent&gt;, Runnable, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.delete(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnClass(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnName(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getRowCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValue(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValueAt(int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isRecurring()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.setValueAt(Object, int, int)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createDateValidatorComponents(String, DateFormat...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createNonRecurringComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createRecurringComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createTableComponent(TableModelImpl, DateFormat, UIFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getEvents()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getI18NedEventType(Type)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.recurring(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar, List&lt;CalendarEvent&gt;, TableModelImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.CalendarTagHandler(GPCalendarCalc, HolidayTagHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onEndElement()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.GPCalendarProvider(List&lt;GPCalendar&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getCalendars()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendar(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendars()" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl(ChartModel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.paint()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.render()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ChartModelBase(TaskManager, TimeUnitStack, UIConfiguration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.OptionEventDispatcher.optionsChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.ScrollingSessionImpl(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.scrollTo(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.shiftOffsets(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addOptionChangeListener(GPOptionChangeListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addRenderer(SceneBuilder)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createOffsetBuilderFactory()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createScrollingSession(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.fireOptionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitOffsets()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBounds()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartItemWithCoordinates(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartUIConfiguration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getHorizontalOffset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getMilestones()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAnchorDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOptionEventDispatcher()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getPainter()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getProjectConfig()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getRenderers()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTopLineHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit(Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnitOffsets()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVerticalOffset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVisibleLength()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.paint(Graphics)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetOffsets()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetRenderers()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBaseFont(FontSpec)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomTimeUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBounds(Dimension)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setChartUIConfiguration(ChartUIConfiguration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHeaderHeight(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHorizontalOffset(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setRowHeight(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTimelineTasks(Set&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopTimeUnit(TimeUnit)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setVerticalOffset(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setupCopy(ChartModelBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.ChartModelImpl(TaskManager, TimeUnitStack, UIConfiguration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.calculateRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.createCopy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskBoundaryItem(int, int)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskProgressItem(int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getBaseline()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartItemWithCoordinates(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getDependencyHardnessOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getGraphicPrimitive(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskContainment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskDefaultColorOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskLabelOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.isExplicitlyHidden(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setBaseline(List&lt;GanttPreviousStateTask&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setExplicitlyHiddenTasks(Set&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setVisibleTasks(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ChartModelResource(TaskManager, HumanResourceManager, TimeUnitStack, UIConfiguration, ResourceChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.ResourceLoadOption(String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getAttributeName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getTagName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.loadValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.calculateRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.createCopy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getChartOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getVisibleResources()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.setVisibleTasks(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.ChartOptionGroup(String, GPOption[], OptionEventDispatcher)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModelBase, Canvas)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.build()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getChartModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getConfig()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getPrimitiveContainer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.isEnabled()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.render()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.setEnabled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.ChartPropertiesOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.addValue(Entry&lt;String, String&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.asEnumerationOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getPersistentValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getValues()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.loadPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.removeValueIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValueIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValues(Iterable&lt;Entry&lt;String, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.updateValue(Entry&lt;String, String&gt;, Entry&lt;String, String&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartUIConfiguration(UIConfiguration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.createCopy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBaseFontSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBottomUnitGridColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartFont()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartStylesOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getDayOffColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getEarlierPreviousTaskColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderBorderColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHolidayTimeBackgroundColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor1()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor2()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getLaterPreviousTaskColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getMargin()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPreviousTaskColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPublicHolidayTimeBackgroundColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceNormalLoadColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceOverloadColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceUnderLoadColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderBackgroundColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderFont()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekEndColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekendAlphaValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWorkingTimeBackgroundColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getYOffSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isCriticalPathOn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isRedlineOn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setBaseFont(Font, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setHeaderHeight(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setRowHeight(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setYOffSet(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.ChartViewState(TimelineChart, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomTimeUnit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomUnitWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getCurrentZoomState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getTopTimeUnit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollTo(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.zoomChanged(ZoomEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer(int, int, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.changePoint2(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.getDraw()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.paint(Graphics)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.setDraw(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task, Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getDuration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getIntensity()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getOwner()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isFirst()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isLast()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.ProjectCalendarDialogAction(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.onCalendarEditCommited(ProjectCalendarOptionPageProvider)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.ResourceLoad(float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.getLoad()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoadRenderer(ChartModelResource, ResourceChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.beforeProcessingTimeFrames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.buildTasksLoadsRectangles(List&lt;Load&gt;, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.calculateGap(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createLoadText(Rectangle, Load)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(List&lt;Offset&gt;, Date, Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartEndDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getDefaultOffsets()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.render()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoadDetails(LoadDistribution, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(List&lt;Load&gt;, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(Load, Load, List&lt;Offset&gt;, int, String)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.SimpleRenderedImage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.copyData(WritableRaster)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getBounds()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getColorModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData(Rectangle)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileX()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileY()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxX()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxY()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileX()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileY()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinX()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinY()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumXTiles()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumYTiles()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getProperty(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSampleModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSources()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridXOffset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridYOffset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.ColouredRectanglePainter(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.paint(Rectangle)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.StyledPainterImpl(ChartUIConfiguration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Line)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Polygon)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Rectangle)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Text)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(TextGroup)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.prePaint()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.setGraphics(Graphics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.TaskActivityPart(TaskActivity, Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.equals(Object)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getDuration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getIntensity()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getOwner()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.TaskInteractionHintRenderer(String, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.paint(Graphics2D)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setText(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setX(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.BarChartConnectorImpl(Task, TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getDependency()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEnd()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEndVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStart()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStartVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.TaskActivityChartApi()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBarHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBottomUnitOffsets()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getChartStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getEndDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getViewportWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getWeekendOpacityOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskRendererImpl2(ChartModelImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.VerticalPartitioning(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.build(TaskContainmentHierarchyFacade)" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.createTaskActivitySceneBuilder(Canvas, ChartApi, Style)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelLayer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRectangleHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRowHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getTaskRectangles(Task, ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getVisibleTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.render()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderActivities(int, Task, List&lt;TaskActivity&gt;, OffsetList, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderBaseline(Task, int, OffsetList)" value="43.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderDependencies()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderLabels(List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderProgressBar(List&lt;Polygon&gt;)" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderTasksAboveAndBelowViewport(List&lt;Task&gt;, List&lt;Task&gt;, OffsetList)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderVisibleTasks(List&lt;Task&gt;, OffsetList)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnBounds(List&lt;TaskActivity&gt;, Date, Date)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnViewportBounds(List&lt;TaskActivity&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.LabelTextSelector(Task, Text)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.createMaxWidthLabel(TextMetrics, String, int)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.getLabels(TextMetrics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.TimelineLabelRendererImpl(ChartModelApi)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.createTimelineLabel(int, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.getLabelLayer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.render()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(JXTreeTable, int, int, int)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.ChartDimensions(GanttExportSettings, GPTreeTableBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getFullWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getLogoHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTableHeaderHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTreeWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.setChartWidth(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.ChartImageBuilder(GanttExportSettings, ChartModelBase, GPTreeTableBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.buildImage(ChartImageVisitor)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.RenderedChartImage(ChartModel, BufferedImage, int, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getChart(int, int, int, int, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getTile(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getWholeImage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.paintChart(Graphics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.ClipboardContents(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addResource(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addTasks(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.build()" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.copy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.cut()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getAssignments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIncomingDeps()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIntraDeps()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getNestedTasks(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getOutgoingDeps()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getResources()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.isCut()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.ClipboardTaskProcessor(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.canMove(Task, ClipboardContents)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAndInsert(Task, Task, Task, Map&lt;Task, Task&gt;, ClipboardContents)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAssignments(ClipboardContents, Map&lt;Task, Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyDependencies(ClipboardContents, Map&lt;Task, Task&gt;)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, ClipboardContents)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, Task, ClipboardContents)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsSibling(Task, ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTaskCopyNameOption(StringOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateAssignments(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateExternalDeps(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.GanttChartController(IGanttProject, UIFacade, ChartModelImpl, ChartComponentBase, GanttTree2, ChartViewState)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskEndInteraction(MouseEvent, TaskBoundaryChartItem)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginDrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginMoveTaskInteractions(MouseEvent, List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.buildImage(GanttExportSettings, ChartImageVisitor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.canPaste(ChartSelection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.findTaskUnderPointer(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getChartItemUnderMousePoint(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseMotionListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getSelection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getViewState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.hideTooltip()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paste(ChartSelection)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.showTooltip(int, int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.GanttChartSelection(IGanttProject, TreeTableContainer&lt;Task, GanttTreeTable, GanttTreeTableModel&gt;, TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.buildClipboardContents()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.exportTasksIntoSystemClipboard()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.isEmpty()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.lostOwnership(Clipboard, Transferable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.paste(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startCopyClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startMoveClipboardTransaction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.MouseListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase, GanttTree2)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getTaskSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.handleEvent(ChartItem, MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mouseClicked(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mousePressed(MouseEvent)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDragTasks(MouseEvent, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDrawDependency(MouseEvent, ChartItem)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.MouseMotionListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.findCalendarEvent(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.mouseMoved(MouseEvent)" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.CalendarChartItem(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.getDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.ChartItem(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.TaskBoundaryChartItem(Task, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.isStartBoundary()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskNotesChartItem.TaskNotesChartItem(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.TaskProgressChartItem(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem.TaskRegularAreaChartItem(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TimelineLabelChartItem.TimelineLabelChartItem(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.ChangeTaskBoundaryInteraction(Date, Task, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.doFinish(TaskMutator)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.finish(TaskMutator)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.updateTooltip(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.ChangeTaskEndInteraction(TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.apply(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.finish()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.getNotesText()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.ChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem, TimelineFacade, TaskChartModelFacade, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.apply(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.doFinish(TaskMutator)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.finish()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.ChangeTaskProgressRuler(Task, TaskChartModelFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.getProgress(int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.ChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.apply(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.finish()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.getNotesText()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.DrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem, TimelineFacade, ChartModelFacade, UIFacade, TaskDependencyCollection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.apply(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.finish()" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.paint(Graphics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.MouseInteractionBase(Date, TimelineFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getChartDateGrid()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getLengthDiff(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.paint(Graphics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.setStartDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.MouseListenerBase(UIFacade, ChartComponentBase, AbstractChartImplementation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getPopupMenuActions(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseEntered(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseExited(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mousePressed(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseReleased(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.showPopupMenu(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.startScrollView(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.MouseMotionListenerBase(UIFacade, AbstractChartImplementation)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.mouseDragged(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.MouseWheelListenerBase(ZoomManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomOut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.isRotationUp(MouseWheelEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.mouseWheelMoved(MouseWheelEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.MoveTaskInteractions(MouseEvent, List&lt;Task&gt;, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.apply(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.doFinish()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.ScrollViewInteraction(MouseEvent, TimelineFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.apply(MouseEvent)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.finish()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.TimelineFacadeImpl(ChartModelBase, TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createScrollingSession(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createTimeInterval(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getDateAt(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getEndDateAt(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.setVScrollController(VScrollController)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.GPToolbar(JPanel, List&lt;TestGanttRolloverButton&gt;, int, boolean, IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.getToolbar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resizeToolbar(List&lt;? extends JComponent&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.setButtonSizeScaling(float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.updateButtons()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.HighlightOnMouseOver(AbstractButton, Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseClicked(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseEntered(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseExited(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.NavigationPanel(IGanttProject, TimelineChart, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.PanelBorder()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.updateUI()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.ButtonBuilder(TestGanttRolloverButton)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.add()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.withAutoRepeat(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ToolbarBuilder()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(TestGanttRolloverButton)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addComboBox(Action[], Action)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addGap()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addPanel(JPanel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addWhitespace()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.build()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.button(Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBackground(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBorder(Border)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withDpiOption(IntegerOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withGapFactory(Supplier&lt;Component&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withHeight(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withLafOption(GPOption&lt;String&gt;, Function&lt;String, Float&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withSquareButtons()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.ZoomingPanel(UIFacade, TimelineChart)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.Item.Item(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.addItem(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.getItems()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.RssFeedChecker(GPTimeUnitStack, UIFacade)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssProposalCommand()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssReadCommand()" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getNotificationManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getUiOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.markLastCheck()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.onYes()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.run()" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.setOptionsVersion(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.wasToday(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.addItem(RssFeed, Node, Date)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.compareCategory(String, String, String)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.getXPath(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.isApplicableToVersion(Node, String, String)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.parse(InputStream, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.acquireLock()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getFilePath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getLastError()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPassword()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPortfolio()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getUsername()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.read()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.releaseLock()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.setUserInfo(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.DocumentCreator(IGanttProject, UIFacade, ParserFactory)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.StringOptionImpl(String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getAttributeName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getTagName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.loadValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addListener(DocumentMRUListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.changeWorkingDirectory(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.clearRecentDocuments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createAutosaveCleanup()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String, String, String)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createTemporaryFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getAutosaveZipFs()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getDocument(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getFTPOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getLastAutosaveDocument(Document)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getNetworkOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getOptionGroup()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getParserFactory()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getProxyDocument(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getRecentDocuments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getResourceVisibleFields()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getTempDir()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getVisibleFields()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWebDavStorageUi()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectory()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectoryFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.newAutosaveDocument()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentManager.FTPOptions.FTPOptions(String, GPOption&lt;?&gt;[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentStorageUi.Components.Components(JComponent, Action[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.DocumentsMRU(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.add(String, boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.addListener(DocumentMRUListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.fireMRUListChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.iterator()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.FileDocument(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canCreate(File)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canOverwrite()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canRead()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFileName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFilePath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getInputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getLastAccessTimestamp()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getOutputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getPath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getURI()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isLocal()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isValidForMRU()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.open()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.write()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.FtpDocument(String, StringOption, StringOption)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canRead()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canWrite()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getFileName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getInputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getOutputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getPath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getURI()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isLocal()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isValidForMRU()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.write()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.NetworkOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.buildPageComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.canEnableTestAction(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.FailureState.enter()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.OnlyShowWeekendsTagHandler(GPCalendarCalc)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.ParsingState(SuccessState, FailureState)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.enter()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.getDefaultDocument()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.setDefaultDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.PortfolioTagHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.startElement(String, String, String, Attributes)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ProxyDocument(DocumentCreator, Document, IGanttProject, UIFacade, ColumnList, ColumnList, ParserFactory)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.SuccessState.enter()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.acquireLock()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canRead()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canWrite()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getActiveCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFileName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFilePath()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getHumanResourceManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getInputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getLastError()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getOutputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPassword()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolio()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolioImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getRoleManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getURI()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUsername()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isLocal()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isValidForMRU()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.read()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.releaseLock()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.ReadOnlyProxyDocument(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.acquireLock()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canRead()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canWrite()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFileName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFilePath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getInputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getLastError()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getOutputStream()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPassword()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPortfolio()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getURI()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getUsername()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isLocal()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isValidForMRU()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.read()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.releaseLock()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.write()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.decorate(JComponent, JComponent, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getCollection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getElementAt(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.setCollection(WebDavResource, List&lt;WebDavResource&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.GanttURLChooser(IGanttProject, UIFacade, ListOption&lt;WebDavServerDescriptor&gt;, WebDavUri, StringOption, StringOption, IntegerOption, ...)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.ReloadWorker(WebDavResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.doInBackground()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.done()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.readChildren(WebDavResource)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.addEmptyRow(JPanel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.buildUrl()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createComponent()" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createOpenDocumentUi(OkAction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createSaveDocumentUi(OkAction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createUsernamePasswordPanel()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.dispose()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.findSavedServer(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getLockTimeout()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPassword()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPathOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getSelectedResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUrl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUsername()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.onSelectionChanged(WebDavResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.reloadFilesTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setProgressBar(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setSelectionListener(SelectionListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setWebDavActionsEnabled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.showError(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryApplyUrl(WebDavUri)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryEnterCollection(JXList, FilesTableModel)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.updateUsernameAndPassword()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(String, String, String, StringOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(WebDavResource, String, String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.acquireLock()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canRead()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canWrite()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getFileName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getHTTPError(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getLastError()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPassword()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getUsername()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getWebdavResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isLocal()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isValidForMRU()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.releaseLock()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.write()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.HttpDocumentOutputStream(HttpDocument)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.Key(String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory(String, String, StringOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.clearCache()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.createResource(WebDavUri)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getHost(WebDavUri)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getProxyDetails(StringOption)" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.setCredentials(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Host, MiltonResourceFactory)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Resource, MiltonResourceFactory)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.assertExists()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.delete()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.exists()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getChildResources()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getHost()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getInputStream()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getLockOwners()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getOptionalImpl()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getParent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUsername()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getWebDavUri()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isCollection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isLocked()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isWritable()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.lock(int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.unlock()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.write(byte[])" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.WebDavOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.buildPageComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor(String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getPassword()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getRootUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getUsername()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.setRootUrl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.EnumerationOptionImpl(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.objectToString(WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.reload()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.setValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.ServerListOption(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.addValue(WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.asEnumerationOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getPersistentValue()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getValues()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.loadPersistentValue(String)" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.removeValueIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValue(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValueIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValues(Iterable&lt;WebDavServerDescriptor&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.updateValue(WebDavServerDescriptor, WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.WebDavStorageImpl(IGanttProject, UIFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createChooser(Document)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createNoLockAction(String, GanttURLChooser, DocumentReceiver)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.findServer(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLastWebDavDocumentOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLegacyLastWebDAVDocumentOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getProxyOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getServersOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavLockTimeoutOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavReleaseLockOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.open(Document, DocumentReceiver)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.save(Document, DocumentReceiver)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildChild(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildParent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildRootUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildUrl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.CommandLineExportApplication()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.export(Args)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getArguments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getCommandLineFlags()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.ConsoleUIFacade(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.addOnUpdateComponentTreeUi(Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.createDialog(Component, Action[], String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getActiveChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getCurrentTaskView()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getDpiOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttDividerLocation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLafOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLanguageOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLogo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLookAndFeel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getMainFrame()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getNotificationManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceDividerLocation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getScrollingManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionContext()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskTree()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getUndoManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getViewIndex()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomActionSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.refresh()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setGanttDividerLocation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setLookAndFeel(GanttLookAndFeelInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setResourceDividerLocation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setStatusText(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setViewIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setWorkbenchTitle(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showConfirmationDialog(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showNotificationDialog(NotificationChannel, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showOptionDialog(int, String, Action[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Action[], int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showSettingsDialog(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showYesNoConfirmationDialog(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.DeprecatedProjectExportData.DeprecatedProjectExportData(IGanttProject, String, Chart, Chart, GanttExportSettings, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFileWizardImpl(UIFacade, IGanttProject, Preferences)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFinalizationJobImpl.run(File[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getExporter()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getPublishInWebOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getUrl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setExporter(Exporter)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setUrl(URL)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.onOkPressed()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.ExporterJob(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportRangeOptionGroup()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportSettings()" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getCommandLineKeys()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeEndOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeStartOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getGanttChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getPreferences()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getResourceChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.run(File, ExportFinalizationJob)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.ExporterChooserPage(List&lt;Exporter&gt;, State)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.setActive(boolean)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createCVSExportJob(File)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createJobs(File, List&lt;File&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getCustomOptionsUI()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileExtensions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileNamePattern()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileTypeDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getSecondaryOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.proposeFileExtension()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.ExporterToImage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.FileTypeOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getAvailableValues()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getPersistentValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.isChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.proposeFileExtension()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.setValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createImageExportJob(File)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createJobs(File, List&lt;File&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getCustomOptionsUI()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileExtensions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileNamePattern()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileTypeDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getSecondaryOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.proposeFileExtension()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.FileChooserPage(State, IGanttProject, WizardImpl, Preferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createFileFilter()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getFileChooserTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getOptionGroups()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.loadPreferences()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedFileChange(File)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedUrlChange(URL)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.proposeOutputFile(IGanttProject, Exporter)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(Task, int, StringBuffer)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.detach()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.loginAndChangedir(FTPOptions)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.put(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.WebPublisher()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.createTransferJob(Ftp, File)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.run(File[], FTPOptions)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.ExtensionBasedFileFilter(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.accept(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getExtension(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.matches(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.GanttXMLFileFilter.GanttXMLFileFilter()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.AbstractPagesDialog(String, UIFacade, List&lt;ListItem&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem.ListItem(boolean, String, String, Container)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.getComponent()" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.isPageVisible(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.AbstractTableAndActionsComponent(JTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addSelectionListener(SelectionListener&lt;T&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createDefaultTableAndActions(JComponent, JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createIsEnabledFunction(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.fireSelectionChanged(List&lt;T&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getActionsComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getAddResourceAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getDeleteItemAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getValue(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.onSelectionChanged()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setActionOrientation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelection(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelectionMode(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ActionUtil.setupAutoRepeat(JButton, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.DateInterval(Date, Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromModelDates(Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromVisibleDates(Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getVisibleEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateIntervalListEditor(DateIntervalModel)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.add(DateInterval)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.canRemove(DateInterval)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.format(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getIntervals()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getMaxIntervalLength()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.remove(DateInterval)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getElementAt(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.update()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.updateActions()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container, Centering)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JFrame)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.ComboItem(T)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.EditableList(List&lt;T&gt;, List&lt;T&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.TableAndActionsImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onAddEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onDeleteEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onSelectionChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getRowCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getValueAt(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.setValueAt(Object, int, int)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.applyValues()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createDefaultComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createPrototype(Object)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getActionsComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObject()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObjects()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getStringValue(T)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableAndActions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableCellRendererComponent(DefaultTableCellRenderer, T, boolean, boolean, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.initComponent()" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.isEditable(T)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.reloadValues()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setTitle(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setUndefinedValueLabel(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setupEditor(List&lt;T&gt;, JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.FileChooserPageBase(WizardImpl, Preferences, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.UrlFetcher()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.fetch()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.onFetchComplete(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.reschedule()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatus(IStatus)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatusLabel(JLabel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setUrl(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.createSecondaryOptionsPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getChooser()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getDefaultFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getFileChooserSelectionMode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getPreferences()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getSelectedUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.loadPreferences()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedFileChange(File)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedUrlChange(URL)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.reportMalformedUrl(Exception)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setActive(boolean)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setEnabledTree(JComponent, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setOptionsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setSelectedFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setStatus(JLabel, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser(List&lt;Color&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.buildComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColors()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColorsOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setRecentColors(List&lt;Color&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.GPlainDocument(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.insertString(int, String, AttributeSet)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setPattern(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setValidCharacters(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(AbstractFormatter)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setFocus()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setPattern(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setValidCharacters(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogInfo.GanttDialogInfo(Frame, int, int, String, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.GanttDialogPerson(CustomPropertyManager, UIFacade, HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.applyChanges()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.constructDaysOffPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.findRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.loadFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.okButtonActionPerformed()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.result()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.GanttDialogProperties(GanttTask[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.show(IGanttProject, UIFacade)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.GanttImagePanel(Image, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.setScale(float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(LookAndFeelInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.GanttLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.addLookAndFeel(GanttLookAndFeelInfo)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getDefaultInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getGanttLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByClass(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInstalledLookAndFeels()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.GanttStatusBar(JFrame)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.ProgressBarDialog(IProgressMonitor)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.dialogInit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.done()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.getLabelText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setProgress(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setSubTask(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.start(String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.ProgressMonitorImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.beginTask(String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.done()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.internalWorked(double)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.isCanceled()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setCanceled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setTaskName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.subTask(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.worked(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.createProgressMonitor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setNotificationManager(NotificationManagerImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.GanttTabbedPane()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Component, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, String, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.getSelectedUserObject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.GanttTaskPropertiesBean(GanttTask[], IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addEmptyRow(JPanel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.applySettings()" value="42.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.canBeProjectTask(Task, TaskContainmentHierarchyFacade)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCheckBox()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCustomColumnPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructEarliestBegin(Container)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructGeneralPanel()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructNotesPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructPredecessorsPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructResourcesPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getLength()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getNotes()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPercentComplete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPriority()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getTaskName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThird()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.init()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTaskOrContainsProjectTask(Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isSupertask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setSelectedTaskProperties()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setThird(GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.storeOriginalValues(GanttTask)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.ListAndFieldsPanel(EditableList&lt;T&gt;, JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.NotificationChannel(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addNotifications(Collection&lt;NotificationItem&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getButton()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getDefaultNotification()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getItems()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getNormalColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getUnreadCount()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isEmpty()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isPulsing()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isVisible()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.saveNormalColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setButton(JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setDefaultNotification(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setPulsing(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setRead(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setVisible(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.NotificationComponent(NotificationChannel, AnimationView)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(NotificationItem, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(String, String, HyperlinkListener, NotificationChannel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.channelCleared()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createBackwardAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createClearAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createForwardAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createHtmlPane(String, HyperlinkListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getActions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationAdded()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationRead(NotificationItem)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.processItems()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.updateEnabled()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.NotificationItem(String, String, HyperlinkListener)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.isRead()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.setRead(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.NotificationManagerImpl(AnimationView)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.addNotifications(NotificationChannel, Collection&lt;NotificationItem&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.getChannelButtons()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.hideNotification()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.setAnimationView(AnimationView)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showNotification(NotificationChannel)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showPending()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.ProjectMRUMenu(IGanttProject, UIFacade, ProjectUIFacade, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.add(Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.mruListChanged(Collection&lt;String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.ProjectOpenDiagnosticImpl(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addModifiedTask(Task, Date, Date)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addReason(Task, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildEndDateChangeTable()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildStartDateChangeTable()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.info(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.showDialog()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.run(String, ShowDialogCallback)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.setOpenLinksInBrowser(WebEngine)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiSwing.run(String, ShowDialogCallback)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.ProjectOpenStrategy(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.adjustTasks(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.checkLegacyMilestones()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.tryPatchMilestones(IGanttProject, TaskManager)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step2.checkEarliestStartConstraints()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.processTasks(List&lt;Runnable&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.runUiTasks()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.close()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.getMilestonesOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.openFileAsIs(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ProjectUIFacadeImpl(UIFacade, DocumentManager, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.afterSaveProject(IGanttProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.beforeClose()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.createProject(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ensureProjectSaved(IGanttProject)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.formatWriteStatusMessage(Document, IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getDocumentManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getUndoManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(Document, IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(IGanttProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectAs(IGanttProject)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryLock(IGanttProject, Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTrySave(IGanttProject, Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryWrite(IGanttProject, Document)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.showNewProjectWizard(IGanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.RecentColorsOption(List&lt;Color&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.addValue(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.asEnumerationOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getValues()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.removeValueIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValue(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValueIndex(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValues(Iterable&lt;Color&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.updateValue(Color, Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseEntered(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseExited(MouseEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Action)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Icon)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.paintComponent(Graphics)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIcon(Icon)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setScale(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setText(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setTextHidden(boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setupFontAwesome()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.TextFieldAndFileChooserComponent(UIFacade, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getSelectedURL()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getWorkingDir()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFile(File)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileFilter(FileFilter)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileSelectionMode(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.showFileChooser()" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.tryFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.RedlineOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getAttributeName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getTagName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.loadValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.UIConfiguration(Color, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getAppFontSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getChartFontOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDayOffColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDpiOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getEarlierPreviousTaskColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getLaterPreviousTaskColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getPreviousTaskColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getProjectBoundariesOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getRedlineOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceOverloadColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceUnderloadColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekEndColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekendAlphaRenderingOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isCriticalPathOn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isRedlineOn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setChartFontOption(FontOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setCriticalPathOn(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDayOffColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDpiOption(IntegerOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setEarlierPreviousTaskColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setLaterPreviousTaskColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setPreviousTaskColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setRedlineOn(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceOverloadColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceUnderloadColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setWeekEndColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.DatePickerEditCommiter(JXDatePicker, JFormattedTextField, DateValidator, ValueValidator&lt;Date&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.attachOnFocusLost(ActionListener)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.resetValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.tryCommit()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.aroundProjectStart(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.dateInRange(Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.GPDateCellEditor(IGanttProject, boolean, ValueValidator&lt;Date&gt;, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getActionListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.languageChanged(Event)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.stopCellEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.MultiscreenFitResult.MultiscreenFitResult(double, double, GraphicsConfiguration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.attachValidator(JTextField, ValueValidator&lt;T&gt;, GPOption&lt;T&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.autoFitColumnWidth(JTable, TableColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.border(JComponent, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.clearErrorLabel(JLabel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.contentPaneBorder(JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createButtonBar(JButton[], JButton[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker(DateFormat...)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createHtmlPane(String, HyperlinkListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createStringDateValidator(DateValidator, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTitle(JComponent, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTooltiplessJMenu(Action)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTopAndCenter(JComponent, JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.formatPathForLabel(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeLabel(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeScale(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeYShift(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getHeaderDimension(JTable, TableColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getUiProperty(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getValidFieldColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.initJavaFx(Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.isFontawesomeSizePreferred()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.multiscreenFit(Rectangle)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorComponent(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorRenderer(Supplier&lt;Integer&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newDateCellEditor(IGanttProject, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.pushAction(JComponent, boolean, KeyStroke, GPAction)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.registerActions(JComponent, boolean, GPAction...)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setBackgroundTree(JComponent, Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setEnabledTree(JComponent, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ActionListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ValueValidator&lt;Date&gt;, ActionListener)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupErrorLabel(JLabel, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupHighlighters(JXTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.tryParse(DateFormat, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.walkComponentTree(JComponent, Predicate&lt;JComponent&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ViewLogDialog.show(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.AboutDialog2(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtml(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createPages()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createSummaryPage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createTranslationsPage()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.i18n(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.onOk()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.BooleanOptionAction(BooleanOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.actionPerformed(ActionEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.CSVSettingsPanel(UIFacade, CSVOptions)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.ExportFieldsTableModel(List&lt;BooleanOption&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getRowCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getValueAt(int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.isCellEditable(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.setValueAt(Object, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.applyChanges(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createResourcePropertiesTableModel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createSeparatorSettingsPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskExportFieldsPanel(TableModel, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskPropertiesTableModel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getCsvOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getFixed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getSeparat()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getTextSeparat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.initialize()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, GPOptionGroup)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, String[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.Item(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getElementAt(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSelectedItem()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.geti18nedValues(EnumerationOption, GPOptionGroup)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.onValueChange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.setSelectedItem(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.ExportCsvOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.buildPageComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], GPOptionGroup[], int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], JComponent[], int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setEnabledTree(JComponent, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setSelected(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.updateSelectionUI(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.GanttChartOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.GeneralOptionPanel(UIFacade, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.askForApplyChanges()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.rollback()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.InterfaceOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.buildPageComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.checkLocale(Locale)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getExtDir()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.init(IGanttProject, UIFacade)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.OptionPageProviderBase(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.buildPageComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getCanonicalPageTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getPageID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getUiFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.init(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.wrapContentComponent(JComponent, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.OptionPageProviderPanel(OptionPageProvider, IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.BooleanOptionRadioUi(BooleanOption)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getNoButton()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getYesButton()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.I18N()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getAdvancedActionTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionGroupLabelKey(GPOptionGroup)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionLabelKey(GPOption&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageDescriptionKey(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageLabelKey(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageTitleKey(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionValueLabelKey(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorButtonText(ColorOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorChooserTitle(ColorOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionGroupLabel(GPOptionGroup)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageDescription(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageTitle(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(GPOptionGroup, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.hasValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder(Component, LayoutApi)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPage(GPOptionGroup[], String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPlanePage(GPOptionGroup[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanComponent(GPOptionGroup, BooleanOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanOptionRadioUi(BooleanOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createButtonComponent(GPOptionGroup)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createColorComponent(ColorOption)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createDateComponent(DateOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, GPOptionGroup)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, Supplier&lt;EnumerationOptionComboBoxModel&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFileComponent(FileOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFontComponent(FontOption)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup, GPOption&lt;?&gt;...)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createLabeledComponent(GPOption&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionComponent(GPOptionGroup, GPOption&lt;?&gt;)" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createRadioButtonBooleanComponent(GPOptionGroup, BooleanOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStandaloneOptionPanel(GPOption&lt;?&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStringComponent(StringOption)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createValidatingComponent(GPOption&lt;T&gt;, ValueValidator&lt;T&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createWaitIndicatorComponent(DefaultBooleanOption)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getI18N()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getTrailingLabel(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getValidFieldColor()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.isCheckboxOption(GPOptionGroup, GPOption&lt;?&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.needsLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setI18N(I18N)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setOptionKeyPrefix(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setUiFacade(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.updateTextField(JTextField, DocumentListener, ChangeValueEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.ProjectBasicOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.buildPageComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.ProjectCalendarOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.buildPageComponent()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.moveProject(TimeDuration)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.updateMoveOptions(TimeDuration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.ProjectRolesOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.buildPageComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getRoleManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.hasCustomComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.ProjectSettingsPanel(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.applyChanges(boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectOrganization()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getWebLink()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.initialize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.ResourceChartOptionPageProvider()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.SettingsDialog2(IGanttProject, UIFacade, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getListItems(List&lt;OptionPageProvider&gt;, String, IGanttProject, UIFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getPages(String, IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.onOk()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int, int, Container, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, Function&lt;Integer, Integer&gt;)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(Container, int, int, int, int, int, int)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.printSizes(Component)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.TopPanel.create(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.WeekendsSettingsPanel(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.applyChanges(boolean)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model.CustomPropertyDefaultValueAdapter.createDefaultValueOption(CustomPropertyClass, CustomPropertyDefinition)" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.I18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.formatRoleForTooltip(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getDayNames()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getNewProjectWizardWindowTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectDomainPageTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectWeekendPageTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRoleSetDisplayName(RoleSet)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipFooter()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipHeader(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard.createNewProject(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.NewProjectWizardWindow(IGanttProject, UIFacade, I18N)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addProjectNamePage(IGanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addRoleSetPage(RoleSet[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addWeekendConfigurationPage(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.onOkPressed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.ProjectNamePage(IGanttProject, I18N)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.RoleSetListModel(RoleSet[], I18N)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.createTooltipText(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getCellRenderer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getElementAt(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.isTheOnlyEnabled(RoleSet)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.toggle(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetPage(RoleSet[], I18N)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.setActive(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.CalendarOption(GPCalendar, List&lt;GPCalendar&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.objectToString(GPCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.CheckBoxAction(GPCalendar, int, String, ButtonModel, Supplier&lt;Integer&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendConfigurationPage(GPCalendarCalc, I18N, UIFacade)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.WeekendSchedulingOption(SchedulingEnum)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.objectToString(SchedulingEnum)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.append(List&lt;T&gt;, T...)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createCalendarOption(GPCalendar)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createWeekendCheckBoxes(GPCalendar, String[])" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.fillCustomCalendar(List&lt;CalendarEvent&gt;, GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.isChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.updateBasedOnLabel(GPCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.WizardImpl(UIFacade, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPage(WizardPage)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPageComponent(WizardPage, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.adjustButtonState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.backPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.canFinish()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getCurrentPage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getDialog()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.nextPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onCancelPressed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onOkPressed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePage(WizardPage)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePageComponent(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.ScrollingManagerImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.addScrollingListener(ScrollingListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.removeScrollingListener(ScrollingListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollTo(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.ColumnManagerPanel(CustomPropertyManager, ColumnList)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.DefaultValueOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.commit()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.reloadValue(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.setValue(Boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.IsVisibleOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.findColumn(CustomPropertyDefinition)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisible(CustomPropertyDefinition, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisibleFields(ColumnList)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.NameOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.reloadValue(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.PropertyClassOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.commit()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.getCustomPropertyClass(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.objectToString(CustomPropertyClass)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.reloadValue(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.resetValue(String, boolean, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.setUIControls(CardLayout, JPanel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.commitCustomPropertyEdit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createComponent()" value="31.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createDefaultFieldDefinitions(ColumnList, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomPropertyDefinition&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.getFieldsComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.isEditable(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setDefaultValuePanelEnabled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setSelectedDefinition(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.createTableAndActions(JComponent, JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupComboBoxEditor(TableColumn, Object[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupTableUI(JXTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.CustomColumnTableModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnClass(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnName(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getRowCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getValueAt(int, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.isCellEditable(int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.reload()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.setValueAt(Object, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnsPanel(CustomPropertyManager, UIFacade, CustomPropertyHolder, ColumnList)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.DependencyTableModel(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.MyColumn(String, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getCaption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getTableColumn(JTable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.isEditable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.TaskComboItem(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.createDependency(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.delete(int[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnName(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getDependencies()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getRowCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getValueAt(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.setValueAt(Object, int, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.updateDependency(Object, int, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.Column(String, Class&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getColumnClass()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.ResourcesTableModel(ResourceAssignmentCollection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.createAssignment(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.delete(int[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnClass(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnName(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getResourcesAssignments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getRowCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getValueAt(int, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isCellEditable(int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.setValueAt(Object, int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.updateAssignment(Object, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.TaskAllocationsPanel(Task, HumanResourceManager, RoleManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.createCostPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getComponent()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.init(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpPredecessorComboColumn(TableColumn, JTable)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.TaskScheduleDatesPanel(UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.adjustLength()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.changeLength(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLabel(String, BooleanOption, JComponent, GPAction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLockAction(String, BooleanOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.fireDurationChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.insertInto(JPanel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setEnd(GanttCalendar, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setStart(GanttCalendar, boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setUnpluggedClone(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setupFields(boolean, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.showPopup(List&lt;Action&gt;, JComponent, JComponent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.swapLocks(BooleanOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.ViewHolder(ViewManagerImpl, GanttTabbedPane, GPView, Icon)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.isVisible()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.selectionChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setVisible(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.ViewManagerImpl(IGanttProject, UIFacade, GanttTabbedPane, GPUndoManager)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activateNextView()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activatePrevView()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.createView(GPView, Icon)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getActiveChart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCopyAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCutAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getPasteAction()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getProjectEventListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedArtefacts()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedView()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.toggleVisible(GPView)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.updateActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.close()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isReady()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.setComponent(JComponent, JComponent, Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.ContentPaneBuilder(GanttTabbedPane, GanttStatusBar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.build(Component, Container)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.getAnimationHost()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.ZoomEvent(ZoomManager, ZoomState)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.getNewZoomState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomManager(TimeUnitStack)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getBottomUnitWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getPersistentName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getTimeUnitPair()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.addZoomListener(ZoomListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomIn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomOut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.fireZoomingChanged(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.removeZoomListener(ZoomListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.setZoomState(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomIn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomOut()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.BufferProject(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getDocumentManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getHumanResourceManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getTaskCustomColumnManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getVisibleFields()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newParser()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newSaver()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.FileChooserPage(UIFacade, Importer, Preferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createFileFilter(Importer)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createOptions(Importer)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getFileChooserSelectionMode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.setFile(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.ImportFileWizardImpl(UIFacade, IGanttProject, GanttOptions)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.getImporters()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.ImporterBase(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getCustomPage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileNamePattern()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getUiFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(UIFacade, List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setFile(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.ImporterChooserPage(List&lt;Importer&gt;, UIFacade, Preferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getTitle()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.onSelectImporter(Importer)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.setActive(AbstractWizard)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createFileChooser(GanttOptions)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createImporter(FileFilter)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.ImporterFromGanttFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.TaskFieldImpl(String, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getOrder()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getSort()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.isVisible()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setOrder(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setSort(SortOrder)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setVisible(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setWidth(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.add(String, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getField(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.importData(ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.createBufferProject(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getDocument(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getFileNamePattern()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.importBufferProject(IGanttProject, BufferProject, UIFacade, MergeResourcesOption, ImportCalendarOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(File, IGanttProject, BufferProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.setContext(IGanttProject, UIFacade, Preferences)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.ImporterFromTxtFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileNamePattern()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileTypeDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.save(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.saveAssignment(TransformerHandler, ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.CSVOptions()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createResourceExportOption(ResourceDefaultColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(TaskDefaultColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getBomOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getResourceOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getSeparatedTextChars()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getTaskOptions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.getShortDayName(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.save(IGanttProject, TransformerHandler)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttChartViewSaver.save(ColumnList, TransformerHandler)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.GanttTXTOpen(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.load(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.DefaultTagHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.appendCdata(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.hasCdata()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.startElement(String, String, String, Attributes)" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(PrjInfos, UIConfiguration, TaskManager, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.TimelineTagHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onEndElement()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingFinished()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingStarted()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addParsingListener(ParsingListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addTagHandler(TagHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.doLoad(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getContext()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getDefaultTagHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getTimelineTagHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(InputStream)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject, TaskTreeUIFacade, GanttResourcePanel, GanttGraphicArea, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.save(OutputStream)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveAssignments(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveCalendar(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveHistory(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveResources(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveRoles(TransformerHandler)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveTasks(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveVacations(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveViews(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.save(List&lt;GanttPreviousState&gt;, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(GanttPreviousState, TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(String, List&lt;GanttPreviousStateTask&gt;, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOption(String, GPOption&lt;?&gt;, TransformerHandler)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, GPOption&lt;?&gt;...)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, Iterable&lt;GPOption&lt;?&gt;&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionMap(Iterable&lt;Entry&lt;String, GPOption&lt;?&gt;&gt;&gt;, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.save(IGanttProject, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomColumnDefinitions(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomProperties(IGanttProject, HumanResource, TransformerHandler)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveRates(HumanResource, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, Boolean, AttributesImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, String, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, int, AttributesImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.cdataElement(String, String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.createHandler(Result)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyComment(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyElement(String, AttributesImpl, TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.endElement(String, TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, AttributesImpl, TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.encodeFieldType(Class&lt;?&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.save(IGanttProject, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTask(TransformerHandler, GanttTask, CustomPropertyManager)" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperties(TransformerHandler, CustomPropertyManager)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String, String, Map&lt;String, String&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.VacationSaver.save(IGanttProject, TransformerHandler)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.save(UIFacade, TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeColumns(ColumnList, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeRecentColors(TransformerHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeTimelineTasks(UIFacade, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.XmlParser(List&lt;TagHandler&gt;, List&lt;ParsingListener&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.characters(char[], int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endCDATA()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.parse(InputStream)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startCDATA()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startDocument()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(InputStream)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(Properties)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale, String)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadFile(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadPath(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadResource(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadStream(InputStream)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[], StringBuffer, int)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCommonCharSet(String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getLocale()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getShortDateFormat()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.setLocaleImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.Event(GanttLanguage)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.getLanguage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.GanttLanguage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.addListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.applyDateFormatLocale(Locale)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.correctLabel(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.createDateFormat(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.fireLanguageChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatDate(Calendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatLanguageAndCountry(Locale)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatShortDate(Calendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatText(String, Object...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatTime(Calendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getAvailableLocales()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCharSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getComponentOrientation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCorrectedLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormat()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDay(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getInstance()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLocale()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLongDateFormat()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMediumDateFormat()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMonth(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getRecurringDateFormat()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getResourceBundle(Locale)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDateFormat()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDayNames(Locale)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String, Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.parseDate(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.removeListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setLocale(Locale)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setShortDateFormat(SimpleDateFormat)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption(String, Locale[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getAttributeName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getTagName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.objectToString(Locale)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.ShortDateFormatOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.commit()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.formatDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.getSelectedValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.loadPersistentValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setSelectedLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.clearCdata()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.getCdata()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.hasCdata()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isMyTag(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isTagStarted()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onEndElement()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.setTagStarted(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.startElement(String, String, String, Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.AllocationTagHandler(HumanResourceManager, TaskManager, RoleManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.findRole(String)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getResourceManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getTaskManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.loadAllocation(Attributes)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingFinished()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingStarted()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ColorValueParser.parseString(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.CustomPropertiesStructure()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskID(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskPropertyID(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesTagHandler(ParsingContext, TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.loadProperty(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingFinished()" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingStarted()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.DefaultWeekTagHandler(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.getShortDayName(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.loadCalendar(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.DependencyTagHandler(ParsingContext, TaskManager, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.GanttDependStructure()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependTaskID(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependType(Type)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDifference(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setHardness(Hardness)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setTaskID(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getContext()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencies()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddressee()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddresser(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.loadDependency(Attributes)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingFinished()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingStarted()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.CalendarEventAttrs(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.HolidayTagHandler(GPCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.loadHoliday(CalendarEventAttrs)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.onCalendarLoaded()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.processLastEvent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.OptionTagHandler(T)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.addTaskWithLegacyFixedStart(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.getTasksWithLegacyFixedStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.isStackEmpty()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.peekTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.popTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.pushTask(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler(List&lt;GanttPreviousState&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.appendCdata(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.endElement(String, String, String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.hasCdata()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.loadPreviousTask(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.ResourceTagHandler(HumanResourceManager, RoleManager, CustomPropertyManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.findRole(String)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.getResourceManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomProperty(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomPropertyDefinition(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadRate(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadResource(Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingFinished()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingStarted()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(String, String, String, Attributes)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.RoleTagHandler(RoleManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.clearRoleSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.findRoleSet(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.loadRoles(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.TaskDisplayColumnsTagHandler(String, String, String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createLegacyHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createPilsenHandler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler, TaskDisplayColumnsTagHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.loadTaskDisplay(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.setEnabled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.TaskPropertiesTagHandler(CustomPropertyManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.loadTaskProperty(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.TaskTagHandler(TaskManager, ParsingContext, TaskTreeUIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.endElement(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.getManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.loadTask(Attributes)" value="32.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingFinished()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingStarted()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.VacationTagHandler(HumanResourceManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.loadResource(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.ViewTagHandler(String, UIFacade, TaskDisplayColumnsTagHandler)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.loadViewState(Attributes)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onEndElement()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getCharts()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExporters()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExtensions(String, Class&lt;T&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.GanttPrintable(RenderedImage, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.print(Graphics, PageFormat, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintManager.printChart(Chart, GanttExportSettings)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.PagePreview(int, PageFormat, Printable, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.clearCache()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMaximumSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMinimumSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getPreferredSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledHeight()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledWidth()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.paintComponent(Graphics)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.setScale(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.doLayout()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMaximumSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMinimumSize()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getPreferredSize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PrintPreview(IGanttProject, UIFacade, Chart, Date, Date)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.StatusBar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel0(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel1(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText0(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText1(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changePageOrientation(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changeScale()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.createPages()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.onChangingDates()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.print()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.run(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.updateSourceImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.AssignmentNode(ResourceAssignment)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getAssignment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getCustomField(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getRoleForAssigment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getStandardField(ResourceDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setCustomField(CustomPropertyDefinition, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setRoleForAssigment(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setStandardField(ResourceDefaultColumn, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getDefinition()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValueAsString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResourceManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(String, int, HumanResourceManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.ResourceAssignmentImpl(ResourceAssignment)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.delete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getLoad()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getRoleForAssignment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.isCoordinator()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setCoordinator(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setLoad(float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addCustomProperty(CustomPropertyDefinition, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addDaysOff(GanttDaysOff)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.createAssignment(ResourceAssignment)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.delete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentChanged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireResourceChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getAssignments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomField(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomProperties()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDaysOff()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDescription()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getId()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getLoadDistribution()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getMail()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getPhone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getStandardPayRate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.removeAllAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.resetLoads()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setDescription(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setId(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setMail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setRole(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setStandardPayRate(BigDecimal)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.swapAssignments(ResourceAssignment, ResourceAssignment)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.unpluggedClone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager, RoleManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withEmail(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withID(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withPhone(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withRole(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withStandardRate(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.add(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.addView(ResourceView)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.create(String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.down(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireAssignmentsChanged(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireCleanup()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceAdded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceChanged(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourcesRemoved(HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getById(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getCustomPropertyManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResources()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResourcesArray()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getValueAsString(Object)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.importData(HumanResourceManager, HumanResourceMerger)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newHumanResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newResourceBuilder()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource, GPUndoManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.save(OutputStream)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.up(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceMerger.MergeResourcesOption.MergeResourcesOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.Load(Date, Date, float, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.isResourceUnavailable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.LoadDistribution(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(Date, Date, float, List&lt;Load&gt;, Task)" value="25.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getDaysOff()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getLoads()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getSeparatedTaskLoads()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getTasksLoads()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processActivity(TaskActivity, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDayOff(GanttDaysOff)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDaysOff(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.OverwritingMerger(EnumerationOption)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildEmailCache(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildNameCache(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.findNative(HumanResource, HumanResourceManager)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(HumanResource, HumanResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(Map&lt;HumanResource, HumanResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResources()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.ResourceNode(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getCustomField(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getDefaultRole()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getEMail()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getPhone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getStandardField(ResourceDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.removeAllChildren()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setCustomField(CustomPropertyDefinition, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setDefaultRole(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setEMail(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setPhone(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setStandardField(ResourceDefaultColumn, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.ResourceTableNode(Object, Set&lt;ResourceDefaultColumn&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.isEditable(ResourceDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.RoleImpl(int, String, RoleSet)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getPersistentID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.RoleEvent(RoleManager, RoleSet)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.getChangedRoleSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.RoleManagerImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.addRoleListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.changeRoleSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.fireRolesChanged(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getDefaultRole()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getEnabledRoles()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectLevelRoles()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectRoleSet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSet(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSets()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.importData(RoleManager)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.removeRoleListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.RolePersistentID(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.asString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleSetID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.RoleSetImpl(String, RoleManagerImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.changeRole(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.deleteRole(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.findRole(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getRoles()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.importData(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEmpty()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEnabled()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.setEnabled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.MySearchResult.MySearchResult(HumanResource, ResourceSearchService)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.ResourceSearchService()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.init(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.search(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.SearchDialog(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.createSearchBox(SearchCallback)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getResultViewDataModel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.gotoSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.processResults(List&lt;SearchResult&lt;?&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.runSearch(String, SearchCallback)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.show()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.SearchResult(String, String, String, SearchObjectType, SearchService&lt;?, SearchObjectType&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getLabel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getObject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getOrigin()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSearchService()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSnippet()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.SearchServiceBase(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.init(IGanttProject, TreeUiFacade&lt;SO&gt;, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.isNotEmptyAndContains(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.select(List&lt;SR&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.PopupSearchCallback()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.accept(List&lt;SearchResult&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.dismissPopup()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.onSelect(JPopupMenu, List&lt;SearchResult&lt;?&gt;&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.runSearch()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.setSearchBox(JTextField)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.SearchUiImpl(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.getSearchField()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.requestFocus()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.MySearchResult.MySearchResult(Task, TaskSearchService)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.TaskSearchService()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.init(IGanttProject, UIFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.search(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.JPaintCombo(Paint[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.getSelectedPaint()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.PaintCellRenderer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.paintComponent(Graphics)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.BlankLineNode.BlankLineNode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(String, CustomColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, CustomColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColumn()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getOldName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getType()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.CustomColumn(CustomColumnsManager, String, CustomPropertyClass, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.canSetPropertyClass(CustomPropertyClass)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getAttributes()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getId()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getPropertyClass()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getType()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getTypeAsString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValue(Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValueAsString(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setId(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(int, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.getType()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.CustomColumnsManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addListener(CustomPropertyListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addNewCustomColumn(CustomColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.deleteDefinition(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(CustomPropertyDefinition, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getCustomPropertyDefinition(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getDefinitions()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.importData(CustomPropertyManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.reset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.CustomColumnsStorage(CustomColumnsManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumn(CustomColumn)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumnsListener(CustomPropertyListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.changeLanguage(GanttLanguage)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.createId()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.findByName(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireCustomColumnsChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(CustomPropertyDefinition, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnByID(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColums()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.importData(CustomColumnsStorage)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.removeCustomColumn(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.reset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomColumnsValues(CustomPropertyManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getDefinition()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValueAsString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.addCustomProperty(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.clone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomProperties()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomPropertyDefinition(CustomPropertyManager, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValueAsString(Object)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.hasOwnValue(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.removeCustomColumn(CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.setValue(CustomPropertyDefinition, Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getColName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getDefinition()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getType()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.CustomPropertyListenerImpl(TaskManagerImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.removeCustomPropertyValues(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(HumanResource, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(ResourceAssignment, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(ResourceAssignmentCollectionImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(TaskImpl, HumanResourceManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.ResourceAssignmentImpl(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.delete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getLoad()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getRoleForAssignment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.isCoordinator()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setCoordinator(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setLoad(float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.addAssignment(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.commit()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.deleteAssignment(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.ResourceAssignmentStub(HumanResource, Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.delete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getLoad()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getResource()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getRoleForAssignment()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.isCoordinator()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setCoordinator(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setLoad(float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setRoleForAssignment(Role)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(ResourceAssignment)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.auxAddAssignment(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.copy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.createMutator()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.deleteAssignment(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignment(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getCoordinator()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.importData(ResourceAssignmentCollection)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.removeAssignment(HumanResource)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.Priority(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.fromPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getI18nKey()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getIconPath()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getLowerString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPersistentValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPriority(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.TaskActivitiesAlgorithm(GPCalendarCalc)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.recalculateActivities(Task, List&lt;TaskActivity&gt;, Date, Date)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date, float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getDuration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getIntensity()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getOwner()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isFirst()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isLast()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskContainmentHierarchyFacade)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskManagerImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getCalculatedValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getManualValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.isCalculated()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setCalculated(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(BigDecimal)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(Cost)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setOldValue(Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setValue(Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorException.MutatorException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.addNotes(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.cachePrecomputedShift(Task, float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.commit()" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getActivities()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getPrecomputedShift(float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getThird()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCritical(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setDuration(TimeDuration)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setExpand(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setIsolationLevel(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setMilestone(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setNotes(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setPriority(Priority)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setProjectTask(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setShape(ShapePaint)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setStart(GanttCalendar)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setTaskInfo(TaskInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setThird(GanttCalendar, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setWebLink(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(TimeDuration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.enable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.fireEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.enable()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.fireEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, TaskImpl, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.addNotes(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.adjustNestedTasks()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.applyThirdDateConstraint()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.areEventsEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.calculateEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.colorDefined()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutatorFixingDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.delete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.enableEvents(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getActivities()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignmentCollection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignments()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAttachments()" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getColor()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCompletionPercentage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCost()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCustomValues()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependencies()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependant()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependee()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDisplayEnd()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDuration()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getEnd()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getExpand()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNestedTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNotes()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getPriority()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getShape()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getSupertask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskID()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskInfo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThird()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThirdDateConstraint()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getWebLink()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isCritical()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isLegacyMilestone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isProjectTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isSupertask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isUnplugged()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities(GPCalendarCalc, Task, List&lt;TaskActivity&gt;, Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCritical(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setDuration(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setEnd(GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setExpand(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setNotes(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setPriority(Priority)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setProjectTask(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setShape(ShapePaint)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setStart(GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setTaskInfo(TaskInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDate(GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDateConstraint(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setWebLink(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shapeDefined()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(TimeDuration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(float)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shiftDate(Date, TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDuration(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDurationValue(TimeDuration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.unpluggedClone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.Access.newInstance(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCompletion(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCost(BigDecimal)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withDuration(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withEndDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withExpansionState(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withId(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withLegacyMilestone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withNotes(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withParent(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrevSibling(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPriority(Priority)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrototype(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withStartDate(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withWebLink(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeFactoryImpl.createFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.addDeepNestedTasks(Task, ArrayList&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.areUnrelated(Task, Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.compareDocumentOrder(Task, Task)" value="25.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.contains(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getContainer(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDeepNestedTasks(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDepth(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNestedTasks(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNextSibling(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getOutlinePath(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getPreviousSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getRootTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.hasNestedTasks(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.sort(Comparator&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskManagerImpl(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.TaskMap(TaskManagerImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.addTask(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTask(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.isEmpty()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.removeTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.setDirty()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.size()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.TaskNamePrefixOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getAttributeName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getTagName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.loadValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.addTaskListener(TaskListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.areEventsEnabled()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createConstraint(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(String)" value="53.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, float)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(long)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createRootTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.deleteTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.emptyClone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.encode(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findClosestWorkingTime(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findTimeUnit(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyAdded(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyChanged(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyRemoved(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskAdded(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskModelReset()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskProgressChanged(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskPropertiesChanged(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskRemoved(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskScheduleChanged(Task, GanttCalendar, GanttCalendar)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAlgorithmCollection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAndIncrementId()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendar()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendarListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getConfig()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyCollection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyGraph()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyHardnessOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getHierarchyManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getMaxId()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectCompletion()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectDocument()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getRootTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTask(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCopyNamePrefixOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCount()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskDefaultColorOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskHierarchy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskNamePrefixOption()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTimeUnitStack()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(Task, Task, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;, Map&lt;Task, Task&gt;)" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isRegistered(TaskImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isZeroMilestones()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.newTaskBuilder()" value="43.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.onTaskMoved(TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.processCriticalPath(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectClosed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectOpened()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.registerTask(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.resetCriticalPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setEventsEnabled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setZeroMilestones(Boolean)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.shift(Date, TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.taskCommitYesNo(TaskMutator, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.tasksToActivities(Task[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.TaskNode(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.applyThirdDateConstraint()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getCompletionPercentage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getDuration()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getEnd()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getPriority()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getTaskInfo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getUserObject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setCompletionPercentage(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setDuration(TimeDuration)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setEnd(GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setName(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setStart(GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setTaskInfo(TaskInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.TaskProperties(TimeUnitStack)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatCoordinators(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatDate(GanttCalendar, StringBuffer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String, boolean)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatResources(Collection&lt;ResourceAssignment&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.getProperty(Task, String)" value="58.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependencies(Iterable&lt;String&gt;, Task, Function&lt;Integer, Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependency(String, Task, Function&lt;Integer, Task&gt;, Map&lt;Integer, Supplier&lt;TaskDependency&gt;&gt;)" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.TaskSelectionManager(Supplier&lt;TaskManager&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addSelectionListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireUserInputConsumerChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getEarliestStart()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getLatestEnd()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getSelectedTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getTaskHierarchy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.isTaskSelected(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeSelectionListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setSelectedTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setUserInputConsumer(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskView.getTimelineTasks()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskSchedule(Task, TaskContainmentHierarchyFacade)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskScheduleBottomUp(Set&lt;Task&gt;, TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.run(Collection&lt;Task&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.adjustNestedTasks(Task)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.isEnabled()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.getDiagnostic()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.isEnabled()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.run()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setDiagnostic(Diagnostic)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setEnabled(boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.AlgorithmCollection(TaskManagerImpl, FindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm, ChartBoundsAlgorithm, CriticalPathAlgorithm, ...)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getAdjustTaskBoundsAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getCriticalPathAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getExtendUncompletedTaskAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getFindPossibleDependeesAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getProjectBoundsAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskCompletionPercentageAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskScheduleAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getScheduler()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getShiftTaskTreeAlgorithm()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmException.AlgorithmException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CostAlgorithmImpl.getCalculatedCost(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.CriticalPathAlgorithmImpl(TaskManager, GPCalendarCalc)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Date, Date, Date, Date, int, Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.collectDependees(Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.isCritical()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.Processor(Map&lt;Task, Node&gt;, Node)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.calculateLatestDates(Node)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.enqueueDependees(LinkedList&lt;Node&gt;, Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Map&lt;Task, Node&gt;, Node)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Node, Node, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.hasMoreInput()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.processQueue()" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.createTaskNodeMap(Task[], Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.getCriticalTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;, Logger)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.ExplicitDependencyImpl(TaskDependency, Node, Node)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getDst()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getEndRange()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getSrc()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getStartRange()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.isWeak()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.refresh()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(GraphData, Transaction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(Transaction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.addToLevel(int, Node)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.checkLayerValidity()" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.createEmptyLayers()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.getLayer(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.removeFromLevel(int, Node)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.rollback()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.withTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.ImplicitInheritedDependency(DependencyEdge, Node, Node)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getDst()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getEndRange()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getSrc()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getStartRange()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.isWeak()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.refresh()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.ImplicitSubSuperTaskDependency(Node, Node)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getDst()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getEndRange()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getSrc()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getStartRange()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.isWeak()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.refresh()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.Node(Task, Transaction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addIncoming(DependencyEdge)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addOutgoing(DependencyEdge)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.demoteLayer(GraphData)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getIncoming()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getLevel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getOutgoing()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.promoteLayer(GraphData)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeIncoming(DependencyEdge)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeOutgoing(DependencyEdge)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.revertData()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(Node, Transaction)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(NodeData)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addIncoming(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addOutgoing(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getIncoming()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getLevel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getOutgoing()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeIncoming(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeOutgoing(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.revert()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.setLevel(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.isRunning()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.start()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.touch(Node)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addDependency(TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addEdge(DependencyEdge)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addInheritedDependencies(DependencyEdge, Node)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addListener(Listener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addTask(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.buildLoop(Map&lt;Task, DependencyEdge&gt;, DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.checkLayerValidity()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.findExplicitDependency(TaskDependency, Node, Node)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.fireGraphChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLayer(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLogger()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getNode(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.isAncestor(Node, Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.move(Task, Task)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeDependency(TaskDependency)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeEdge(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeImplicitDependencies(Node)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeTask(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.rollbackTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.setLogger(Logger)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.startTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.ExtendUncompletedTaskAlgorithm(DependencyGraph, WeekendCalendarImpl, SchedulerImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.couldRun()" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.defineEndOfNextWorkingDay(WeekendCalendarImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.doRun()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.extendUncompletedTasks(Node)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.modifyTaskEndToNextWorkingEnd(Task)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskAfterNextWorkingEnd(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskBeforeNextWorkingEnd(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskStartsBeforeNextWorkingEnd(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.FindPossibleDependeesAlgorithmImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.processTask(Task[], Task, ArrayList&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.run(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.Result.Result(Date, Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.getBounds(Collection&lt;Task&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentage(Task, TaskContainmentHierarchyFacade)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentageBottomUp(Task, TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.RecalculateTaskScheduleAlgorithm(AdjustTaskBoundsAlgorithm)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(TaskDependency[], int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilConstraints(TaskDependency)" value="32.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilDependencies()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isEnabled()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isRunning()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.modifyTaskStart(Task, GanttCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Collection&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.traverse(TaskContainmentHierarchyFacade, Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(Collection&lt;T&gt;, Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(T[], Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.SchedulerImpl(DependencyGraph, Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.doRun()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.getTaskModelListener()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskEnd(Task, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskStart(Task, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.schedule(Node)" value="33.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.ShiftTaskTreeAlgorithm(TaskManagerImpl, RecalculateTaskScheduleAlgorithm)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(List&lt;Task&gt;, TimeDuration, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(Task, TimeDuration, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.shiftTask(Task, TimeDuration, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortByStartDate(List&lt;TaskActivity&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortTasksByStartDate(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.LoopDetector(TaskManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey.RangeSearchFromKey(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchToKey.RangeSearchToKey(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, TaskDependencyImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, int, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.compareTo(SearchKey)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.Hardness(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.getIdentifier()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.parse(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.MutationInfo(TaskDependency, int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.commit()" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.deleteDependency(TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.TaskDependencyCollectionImpl(Factory, EventDispatcher)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency, Set&lt;Task&gt;)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.addDependency(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.canCreateDependency(Task, Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.clear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createMutator()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.delete(TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.deleteDependency(TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.doClear()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.fireChanged(TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDefaultHardness()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependant(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependee(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getTaskHierarchy()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.isLooping(TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.DefaultCollision(GanttCalendar, int, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getAcceptableStart()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getVariation()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.isActive()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromPersistentValue(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromReadablePersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getPersistentValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getReadablePersistentValue()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String, Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(Throwable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint, Hardness, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.delete()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getActivityBinding()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getConstraint()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependant()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependee()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDifference()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEndVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getHardness()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStartVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.hashCode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setConstraint(TaskDependencyConstraint)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setDifference(int)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setHardness(Hardness)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.TaskDependencySliceAsDependant(Task, TaskDependencyCollection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.toArray()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.TaskDependencySliceAsDependee(Task, TaskDependencyCollection)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.toArray()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.TaskDependencySliceImpl(Task, TaskDependencyCollection, Function&lt;Task, TaskDependencySlice&gt;)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependency(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependencyCollection()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.hasLinks(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.toArray()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.ConstraintImpl(Type, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.addDelay(GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.clone()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getBackwardCollision(Date)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getDependency()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getType()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.setTaskDependency(TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(Date, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(GanttCalendar, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.toString()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.DependencyActivityBindingImpl(TaskActivity, TaskActivity, Date[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getAlignedBounds()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependantActivity()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependeeActivity()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.FinishFinishConstraintImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getActivityBinding()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getCollision()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.FinishStartConstraintImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getActivityBinding()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getBackwardCollision(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getCollision()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.StartFinishConstraintImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getActivityBinding()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getCollision()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.StartStartConstraintImpl()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getActivityBinding()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getCollision()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.TaskDependencyEvent(TaskDependencyCollection, TaskDependency)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.getDependency()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.TaskHierarchyEvent(Object, Task, Task, Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getNewContainer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getOldContainer()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyAdded(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyChanged(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyRemoved(TaskDependencyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskAdded(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskModelReset()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskMoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskProgressChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskPropertiesChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskRemoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskScheduleChanged(TaskScheduleEvent)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.TaskPropertyEvent(Object)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.TaskScheduleEvent(Task, GanttCalendar, GanttCalendar, GanttCalendar, GanttCalendar)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewFinishDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldFinishDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldStartDate()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.TaskHierarchyItem(Task, TaskHierarchyItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.addNestedItem(TaskHierarchyItem, int)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.delete()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getContainerItem()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNestedItems()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNextSiblingItem()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getTask()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.createItem(Task)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.getRootItem()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.UndoManagerImpl(IGanttProject, ParserFactory, DocumentManager)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.addUndoableEditListener(GPUndoListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canRedo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canUndo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.die()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoableEditHappened(UndoableEditImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getDocumentManager()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getParserFactory()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getProject()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getRedoPresentationName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getUndoPresentationName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.redo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.removeUndoableEditListener(GPUndoListener)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undoableEdit(String, Runnable)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.UndoableEditImpl(String, Runnable, UndoManagerImpl)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canRedo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canUndo()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.getPresentationName()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.redo()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.restoreDocument(Document)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.saveFile()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undo()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undoRedoExceptionHandler(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.connectStringArray(String[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayURL(String)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithDesktopApi(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithJnlpApi(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.getPlatform()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.replaceToken(String[], String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[])" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[], String[])" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.determineColor(String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.getColor(Color)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.DateUtils.parseDate(String)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendExtension(File, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendSuffixBeforeExtension(File, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getExtension(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getFilenameWithoutExtension(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.replaceExtension(File, String)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MathUtil.signum(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.append(StringBuilder, int, int, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.toString(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.PropertiesUtil.loadProperties(Properties, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getDisplayNames(Object[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getTruncatedString(String, int, FontMetrics)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.isEmptyOrNull(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padLeft(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padRight(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.Pair(F, S)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.create(F, S)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.first()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.second()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.AbstractFileChooserPage(UIFacade, Preferences, String, FileFilter, GPOptionGroup[], boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.UrlFetcher()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.fetch()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.getComponent()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.onFetchComplete(File)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.reschedule()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatus(IStatus)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatusLabel(JLabel)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setUrl(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.createSecondaryOptionsPanel()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getChooser()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileChooserSelectionMode()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileStatus(File)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getOptionGroups()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getPreferences()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getSelectedUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getWizard()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.loadPreferences()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.onSelectedFileChange(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.reportMalformedUrl(Exception)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setActive(AbstractWizard)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setEnabledTree(JComponent, boolean)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setOptionsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.showStatus(JLabel, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.AbstractWizard(UIFacade, String, WizardPage)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.addPageComponent(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.adjustButtonState()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.backPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.canFinish()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getCurrentPage()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getDialog()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getUIFacade()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.isExistingNextPage(WizardPage)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.nextPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.onOkPressed()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setNextPage(WizardPage)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setOkAction(Runnable)" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.show()" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.wrapePageComponent(String, JComponent)" value="0.0"/>
		<VALUE measured="objectToString(CheckOption)" value="0.0"/>
		<VALUE measured="onAddEvent()" value="0.0"/>
		<VALUE measured="onCalendarChange()" value="1.0"/>
		<VALUE measured="onChange()" value="0.0"/>
		<VALUE measured="onDeleteEvent()" value="1.0"/>
		<VALUE measured="onFetchComplete(File)" value="0.0"/>
		<VALUE measured="onFileChosen(File)" value="0.0"/>
		<VALUE measured="onStartElement(Attributes)" value="0.0"/>
		<VALUE measured="openChooser()" value="0.0"/>
		<VALUE measured="openFile(File)" value="5.0"/>
		<VALUE measured="optionsChanged()" value="0.0"/>
		<VALUE measured="org.w3c.util.DateParser.check(StringTokenizer, String)" value="3.0"/>
		<VALUE measured="org.w3c.util.DateParser.getCalendar(String)" value="49.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDate(Date)" value="0.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoHours(Date)" value="0.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoMillis(Date)" value="0.0"/>
		<VALUE measured="org.w3c.util.DateParser.main(String[])" value="0.0"/>
		<VALUE measured="org.w3c.util.DateParser.parse(String)" value="0.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(String)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.twoDigit(int)" value="2.0"/>
		<VALUE measured="org.w3c.util.InvalidDateException.InvalidDateException(String)" value="0.0"/>
		<VALUE measured="paint(Graphics)" value="1.0"/>
		<VALUE measured="paint(Graphics2D, JXLabel, int, int)" value="0.0"/>
		<VALUE measured="paint(Rectangle)" value="14.0"/>
		<VALUE measured="paintIcon(Component, Graphics, int, int)" value="0.0"/>
		<VALUE measured="parse(String)" value="2.0"/>
		<VALUE measured="parsingFinished()" value="0.0"/>
		<VALUE measured="parsingStarted()" value="0.0"/>
		<VALUE measured="processNonWorkingTime(Date, Date)" value="0.0"/>
		<VALUE measured="processResponse(InputStream)" value="2.0"/>
		<VALUE measured="processWorkingTime(Date, Date)" value="0.0"/>
		<VALUE measured="projectClosed()" value="2.0"/>
		<VALUE measured="projectCreated()" value="0.0"/>
		<VALUE measured="projectOpened()" value="0.0"/>
		<VALUE measured="propertyChange(PropertyChangeEvent)" value="1.0"/>
		<VALUE measured="remove(DateInterval)" value="0.0"/>
		<VALUE measured="removeUpdate(DocumentEvent)" value="0.0"/>
		<VALUE measured="resetValue(Color, boolean, Object)" value="1.0"/>
		<VALUE measured="rolesChanged(RoleEvent)" value="0.0"/>
		<VALUE measured="run()" value="0.0"/>
		<VALUE measured="run(File[])" value="0.0"/>
		<VALUE measured="run(IProgressMonitor)" value="4.0"/>
		<VALUE measured="saveValue()" value="1.0"/>
		<VALUE measured="scrollTo(int, int)" value="2.0"/>
		<VALUE measured="selectionChanged(List&lt;CustomPropertyDefinition&gt;)" value="2.0"/>
		<VALUE measured="selectionChanged(List&lt;GanttPreviousState&gt;)" value="2.0"/>
		<VALUE measured="selectionChanged(List&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="selectionChanged(List&lt;WebDavServerDescriptor&gt;)" value="1.0"/>
		<VALUE measured="set(FieldType, Object)" value="0.0"/>
		<VALUE measured="setDefaultValueAsString(String)" value="0.0"/>
		<VALUE measured="setDocument(Document)" value="0.0"/>
		<VALUE measured="setEditor(ColumnImpl)" value="2.0"/>
		<VALUE measured="setFocus(int)" value="0.0"/>
		<VALUE measured="setName(String)" value="0.0"/>
		<VALUE measured="setOnCancelCallback(Runnable)" value="0.0"/>
		<VALUE measured="setOnOkCallback(Runnable)" value="0.0"/>
		<VALUE measured="setPropertyClass(CustomPropertyClass)" value="0.0"/>
		<VALUE measured="setStart(GanttCalendar)" value="0.0"/>
		<VALUE measured="setValue(Date)" value="1.0"/>
		<VALUE measured="setValue(Double)" value="0.0"/>
		<VALUE measured="showAboutDialog()" value="0.0"/>
		<VALUE measured="showDialog(JComponent)" value="0.0"/>
		<VALUE measured="showPreferencesDialog()" value="0.0"/>
		<VALUE measured="sort(Comparator&lt;Task&gt;)" value="0.0"/>
		<VALUE measured="startCopyClipboardTransaction()" value="0.0"/>
		<VALUE measured="startMoveClipboardTransaction()" value="0.0"/>
		<VALUE measured="stateChanged(ChangeEvent)" value="0.0"/>
		<VALUE measured="stopCellEditing()" value="1.0"/>
		<VALUE measured="stringToObject(String)" value="0.0"/>
		<VALUE measured="tableChanged(TableModelEvent)" value="0.0"/>
		<VALUE measured="taskAdded(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="taskModelReset()" value="0.0"/>
		<VALUE measured="taskMoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="taskProgressChanged(TaskPropertyEvent)" value="2.0"/>
		<VALUE measured="taskPropertiesChanged(TaskPropertyEvent)" value="0.0"/>
		<VALUE measured="taskRemoved(TaskHierarchyEvent)" value="0.0"/>
		<VALUE measured="taskScheduleChanged(TaskScheduleEvent)" value="4.0"/>
		<VALUE measured="toString()" value="0.0"/>
		<VALUE measured="treeCollapsed(TreeExpansionEvent)" value="0.0"/>
		<VALUE measured="treeExpanded(TreeExpansionEvent)" value="0.0"/>
		<VALUE measured="uncaughtException(Thread, Throwable)" value="0.0"/>
		<VALUE measured="updateValue(CustomPropertyDefinition, CustomPropertyDefinition)" value="0.0"/>
		<VALUE measured="updateValue(GanttPreviousState, GanttPreviousState)" value="0.0"/>
		<VALUE measured="updateValue(Role, Role)" value="0.0"/>
		<VALUE measured="updateValue(WebDavServerDescriptor, WebDavServerDescriptor)" value="0.0"/>
		<VALUE measured="userInputConsumerChanged(Object)" value="1.0"/>
		<VALUE measured="valueChanged(ListSelectionEvent)" value="1.0"/>
		<VALUE measured="valueChanged(TreeSelectionEvent)" value="0.0"/>
		<VALUE measured="windowClosed(WindowEvent)" value="2.0"/>
		<VALUE measured="windowClosing(WindowEvent)" value="0.0"/>
		<VALUE measured="windowOpened(WindowEvent)" value="2.0"/>
		<VALUE measured="write()" value="0.0"/>
	</METRIC>
	<METRIC category="Method" name="Essential cyclomatic complexity" abbreviation="ev(G)">
		<VALUE measured="accept(File)" value="1.0"/>
		<VALUE measured="actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="apply(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="apply(Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="apply(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="apply(Object)" value="1.0"/>
		<VALUE measured="apply(Polygon)" value="1.0"/>
		<VALUE measured="apply(ResourceAssignment)" value="1.0"/>
		<VALUE measured="apply(Task)" value="1.0"/>
		<VALUE measured="apply(Task, HumanResourceManager)" value="1.0"/>
		<VALUE measured="apply(Type)" value="1.0"/>
		<VALUE measured="applyComponentOrientation(ComponentOrientation)" value="1.0"/>
		<VALUE measured="areUnrelated(Task, Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.copy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.findClosestWorkingTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getBaseCalendarID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getDayMask(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getEvent(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getOnlyShowWeekends()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getPublicHolidays()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getWeekDayType(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setBaseCalendarID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setOnlyShowWeekends(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setWeekDayType(int, DayType)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.CalendarActivityImpl(Date, Date, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.isWorkingTime()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.CalendarEvent(Date, boolean, Type, String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getTitle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getType()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.newEvent(Date, boolean, Type, String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.addListener(GPCalendarListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.doFindClosest(Date, DateFrameable, MoveDirection, DayType, Date)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.fireCalendarChanged()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setName(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.shiftDate(Date, TimeDuration)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.create(GanttDaysOff)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.equals(GanttDaysOff)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getFinish()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(GanttCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOffInWeek(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption(Values)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.Values.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.copy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.findClosestWorkingTime(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, Date)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getBaseCalendarID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getDayMask(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getEvent(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getOnlyShowWeekends()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getPublicHolidays()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getRecurringDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekDayType(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekendDaysCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isPublicHoliDay(Date)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isWeekend(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.reset()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setBaseCalendarID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setOnlyShowWeekends(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setWeekDayType(int, DayType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.ForwardTimeWalker(GPCalendarCalc, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.getTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.walk(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.WorkingUnitCounter(GPCalendarCalc, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.getNonWorkingTime()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.isMoving()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processNonWorkingTime(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processWorkingTime(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.run(Date, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.Arrow(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.setVisible(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.Line(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getArrow()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.setArrow(Arrow)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.Polygon(int...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getRightX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getTopY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.Rectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.getBackgroundPaint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.setBackgroundPaint(Paint)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.addStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getBackgroundColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getForegroundColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getModelObject()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getOpacity()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyles()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.hasStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.isVisible()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setBackgroundColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setForegroundColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setModelObject(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setOpacity(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setVisible(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, String, SpatialIndex&lt;Text&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector, SpatialIndex&lt;Text&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getFont()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getHAlignment()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLabels(TextMetrics)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getMaxLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getTextSelector()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getVAlignment()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.index(Label)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setAlignment(HAlignment, VAlignment)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setFont(Font)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setMaxLength(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setSelector(TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.TextGroup(int, int, int, String...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.addText(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getColor(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getFont(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLine(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLineCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getTotalHeight(FontChooser, List&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.setFonts(FontChooser)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.bind(Shape, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createDetachedRectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLayers(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLine(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createPolygon(int...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createRectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createTextGroup(int, int, int, String...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayer(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayers()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int, int, int)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.newLayer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.paint(Painter)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.setOffset(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.Rect(T, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int, int, int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.put(T, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.values()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.FontChooser(Properties, TextMetrics, Supplier&lt;Font&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.decreaseBaseFontSize()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getFont(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginBottom(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginTop(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getTextHeight(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.Offset(TimeUnit, Date, Date, Date, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.createFullyClosed(TimeUnit, Date, Date, Date, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.debugPrint(List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getDayMask()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetAnchor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetPixels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getStartPixels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.shift(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.Factory()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.preBuild()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withAtomicUnitWidth(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withCalendar(GPCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndOffset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withOffsetStepFunction(Function&lt;TimeUnit, Float&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withRightMargin(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withStartDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withViewportStartDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withWeekendDecreaseFactor(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.FactoryImpl.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.OffsetBuilderImpl(Factory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.calculateNextStep(OffsetStep, TimeUnit, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructBottomOffsets(List&lt;Offset&gt;, int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, List&lt;Offset&gt;, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, OffsetList)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructTopOffsets(TimeUnit, List&lt;Offset&gt;, List&lt;Offset&gt;, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getBottomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getChartWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getConcreteUnit(TimeUnit, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getDefaultUnitWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getOffsetStep(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getTopUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getEndPx()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getStartPx()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.setStartPx(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.shift(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByEndDate.compare(Date, int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByPixels.compare(Integer, int, List&lt;Offset&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByStartDate.compare(Date, int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.findOffset(Type, ComparatorBy&lt;Type&gt;, int, int, List&lt;Offset&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.getBounds(Date, Date, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupDateByPixels(int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetBy(Date, List&lt;Offset&gt;, ComparatorBy&lt;Date&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByEndDate(Date, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByStartDate(Date, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.OffsetManager(OffsetBuilderFactory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.alignOffsets(OffsetList)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.constructOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getAtomUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getTopUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.reset()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.AlphaRenderingOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.getValueAsFloat()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.updateIndex()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.LineRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.renderLine(Line)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.PolygonRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.render(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.RectangleRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.render(Rectangle)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorderEdge(Graphics2D, Border, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorders(Graphics2D, Borders, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint, Color, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[])" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[], Color, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.createTexture(int, int, int[], Color, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.equals(Object)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getArray()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getBackground()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getForeground()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getarray()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.BackgroundImage(Paint, Image)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.getPaint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.parse(String)" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color, BasicStroke)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getStroke()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.parse(String)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border, Border, Border, Border)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getBottom()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getLeft()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getRight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getTop()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.isHomogeneous()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.withColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.Color(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.get()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.parse(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.Padding(Collection&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getBottom()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getLeft()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getRight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getTop()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.parse(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Style(Properties, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundColor(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundImage()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundPaint(Rectangle)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBorder(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getForegroundColor(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getOpacity(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getPadding()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getStyle(Properties, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getVisibility(Shape)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.parseStroke(String[])" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.State(FontRenderContext, Font)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.TextLengthCalculatorImpl(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getState()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(Font, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(Graphics2D, String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.TextPainter(Properties, Supplier&lt;Font&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(Text)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(TextGroup)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(int, int, HAlignment, VAlignment, Text, Label, Style)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paintTextLine(TextGroup, int)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder(Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getCanvas()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.reset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.setHeight(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.BottomUnitSceneBuilder(Canvas, InputApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getLineTopPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderLabel(TextGroup, int, Date, Offset, TimeFormatter)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderScaleMark(Offset, Offset)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.DayGridSceneBuilder(InputApi, Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.applyRectangleStyle(Rectangle, Offset)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineBottomPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineTopPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.isProjectBoundariesOptionOn()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderLine(Date, String, int, ComparatorBy&lt;Date&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDay(int, Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDayColumns()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.TimelineSceneBuilder(InputApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.getTimelineContainer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderBottomUnits()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderTopUnits()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderUnderlay()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.reset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.Result.Result(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.getBounds(Iterable&lt;BarChartActivity&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Connector(Vector, Vector, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.Vector(Point, Dimension)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getHProjection()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.reaches(Point)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStyleName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.DependencySceneBuilder(Canvas, Canvas, TaskApi&lt;T, D&gt;, ChartApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.drawDependencies(Collection&lt;Connector&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData(D, List&lt;Connector&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.Style.Style(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.StyleApplier(TaskApi&lt;T, A&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.applyStyle(Shape)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.setTask(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.TaskActivitySceneBuilder(TaskApi&lt;T, A&gt;, ChartApi, Canvas, TaskLabelSceneBuilder&lt;T&gt;, Style)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getBoundingRectangle(int, BarChartActivity&lt;T&gt;, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRectangleHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRowHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityEarlierThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityLaterThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processRegularActivity(int, A, OffsetList, List&lt;Polygon&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.renderActivities(int, List&lt;A&gt;, OffsetList)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.TaskLabelSceneBuilder(TaskApi&lt;T&gt;, InputApi, Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.calculateRowHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createDownSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createLeftSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createRightSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createUpSideText(Polygon)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getFontHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getPrimitiveContainer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getTaskLabel(T, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyDown()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyUp()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextDown()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextUp()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.renderLabels(List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.stripVerticalLabelSpace(Rectangle)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.CachingTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(TimeUnit, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getCachedText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getTextCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.format(Offset)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.MonthTextFormatter(LocaleApi, String, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.initFormats(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.QuarterTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.TimeFormatters(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.getFormatter(TimeUnit, Position)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.setLocaleApi(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getFitCount(Label[], int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getLabels(int, TextMetrics)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.WeekTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createBottomText()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTopText()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.getTextCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.YearTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String, Predicate&lt;? extends Object&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.find(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getColumnStubs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getNameKey()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getSortComparator()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getStub()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getValueClass()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.isEditable(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setIsEditablePredicate(Predicate&lt;T&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setLocaleApi(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setSortComparator(Comparator&lt;?&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.ChangeValueEvent(Object, Object, Object, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getNewValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getOldValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getTriggerID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.determineColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.getColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.isValidColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.isChecked()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.toggle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String, Double)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, T[])" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getAvailableValues()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getSelectedValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.objectToString(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.reloadValues(List&lt;T&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.setSelectedValue(T)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.stringToObject(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFileOption.DefaultFileOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.DefaultFontOption(String, FontSpec, List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getFontFamilies()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getSizeLabels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String, Integer)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String, BigDecimal)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.FontSpec(String, Size)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.Size(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.getFactor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.asString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getFamily()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getSize()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String, T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.I18N.setI18N(I18N)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.Entry(ChangeValueListener, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.compareTo(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.add(ChangeValueListener, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.fire(ChangeValueEvent)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addPropertyChangeListener(PropertyChangeListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.fireChangeValueEvent(ChangeValueEvent)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getInitialValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getPropertyChangeSupport()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.hasUi()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.i18n(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isChanged()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isScreened()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isWritable()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.lock()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.removePropertyChangeListener(PropertyChangeListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.rollback()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setHasUi(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setScreened(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setWritable(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.GPOptionGroup(String, GPOption...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.copyFrom(GPOptionGroup)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getI18Nkey(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOption(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.isTitled()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.lock()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.rollback()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setI18Nkey(String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setTitled(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String, Throwable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(Throwable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.ColumnStub(String, String, boolean, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getOrder()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getSort()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.isVisible()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setOrder(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setVisible(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setWidth(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.Immutable.fromList(List&lt;Column&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.newCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.setLocaleApi(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(Date, LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(int, int, int, LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.clone()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.compareTo(GanttCalendar)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.equals(GanttCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDate()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDay()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDisplayValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getMonth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getYear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.module(int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.parseXMLDate(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toXMLString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength(TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.reverse()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.setLength(TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.translate(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.TimeUnitDateFrameableImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.ParameterizedTimeUnitImpl(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.equals(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getAtomCount(TimeUnit)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.isConstructedFrom(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.TimeUnitFunctionOfDateImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.createTimeUnit(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.getAtomCount(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(Composition, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.getAtomCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createAtomTimeUnit(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createDateFrameableTimeUnit(String, TimeUnit, int, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnit(String, TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnitFunctionOfDate(String, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.getComposition(TimeUnitImpl, TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.registerTimeUnit(TimeUnit, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.TimeUnitImpl(String, TimeUnitGraph, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getAtomCount(TimeUnit)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getDirectAtomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.isConstructedFrom(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.TimeUnitPair(TimeUnit, TimeUnit, TimeUnitStack, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getDefaultUnitWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTopTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitStack.Util.findCommonUnit(TimeUnit, TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.FramerImpl(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.clearFields(Calendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.GPTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.encode(TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.findTimeUnit(String)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDateFormats()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDefaultTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeFormat()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeUnitPairs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isDay(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isHour(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isWeek(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.parseDuration(String)" value="12.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.GregorianTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.encode(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.findTimeUnit(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDateFormats()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDefaultTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeFormat()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeUnitPairs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.parseDuration(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.DefaultCalendarFactory.newCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl(ICalendarFactory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(IGanttProject, CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(TaskManager, HumanResourceManager, RoleManager, CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.buildAssignmentSpec(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getAssignments(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getName(Task)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getWebLink(GanttTask)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.i18n(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.save(OutputStream)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeCustomPropertyValues(CSVPrinter, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomProperty&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResourceHeaders(CSVPrinter)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResources(CSVPrinter)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTaskHeaders(CSVPrinter)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTasks(CSVPrinter)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(File, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createCustomProperties(Collection&lt;String&gt;, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createResourceRecordGroup(HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createTaskRecordGroup(TaskManager, HumanResourceManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.doLoad(CSVParser, int, int)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getFieldNames(Enum...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getSkippedLineCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.isEmpty(CSVRecord)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.load()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.setOptions(CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.ImporterFromCsvFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;, Set&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(Level, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(List&lt;Pair&lt;Level, String&gt;&gt;, Level, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.doProcess(CSVRecord)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getCustomFields()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getErrorOutput()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getHeader()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getOrNull(CSVRecord, String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.hasMandatoryFields(CSVRecord)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.isHeader(CSVRecord)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.postProcess()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setErrorOutput(List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.ResourceFields(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceRecords(HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.doProcess(CSVRecord)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.AssignmentColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.apply(Task, HumanResourceManager)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.ResourceColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.apply(Task, HumanResourceManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.getIndexByName(HumanResourceManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.TaskFields(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskRecords(TaskManager, HumanResourceManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.doProcess(CSVRecord)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseAssignmentSpec(CSVRecord)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseDateOrError(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.postProcess()" value="9.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter.main(String[])" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getComponent()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getEvents()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getTitle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setActive(AbstractWizard)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setEvents(List&lt;CalendarEvent&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setFile(File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.IcsFileImporter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getCustomPage()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.isReady()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.readEvents(File)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.setFile(File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(CustomPropertyManager, SortedSet&lt;S&gt;, Class&lt;T&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(HumanResourceManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(TaskManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.ExporterToMsProjectFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createExportJob(File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createProjectWriter()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileExtensions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSelectedFormatExtension()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.proposeFileExtension()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.ImporterFromMsProjectFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.findChangedDates(Map&lt;GanttTask, Date&gt;, Map&lt;Task, Task&gt;, List&lt;Pair&lt;Level, String&gt;&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.LocaleOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.getSelectedLocale()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.setSelectedLocale(Locale)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.ProjectFileExporter(IGanttProject)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertConstraint(TaskDependency)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertFinishTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertLag(TaskDependency)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertPriority(Task)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertStartTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertTaskId(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertValue(CustomProperty)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.copyHours(ProjectCalendarHours, ProjectCalendarHours)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportAssignments(Map&lt;Integer, Task&gt;, Map&lt;Integer, Resource&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomFieldTypes(Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomProperties(CustomPropertyHolder, Map&lt;CustomPropertyDefinition, FieldType&gt;, CustomPropertySetter)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDaysOff(HumanResource, Resource)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDependencies(Map&lt;Integer, Task&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(GPCalendar, ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResource(HumanResource, Map&lt;Integer, Resource&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResources(Map&lt;Integer, Resource&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTask(Task, Task, int, int, Map&lt;Integer, Task&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTasks(Map&lt;Integer, Task&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportWeekends(ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task, double)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getMaxTaskID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getResourceManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.isWorkingDay(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, ColumnList, File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, TaskTreeUIFacade, File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertConstraint(Relation)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataType(FieldType)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataValue(FieldType, Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertPriority(Priority)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertStartTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createPatchedStream(File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createReader(File)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.debugTransformation()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.findDurationFunction(Task, StringBuilder)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.foreignId(Task)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getDurations(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getErrors()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getNativeCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getOriginalStartDates()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomColumn(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomProperties()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCalendar(ProjectFile)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomFields(Task, GanttTask)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomProperties(Resource, HumanResource)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDailyHoliday(ProjectCalendarException, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDayType(ProjectCalendar, Day, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDaysOff(Resource, HumanResource)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDependencies(ProjectFile, Map&lt;Integer, GanttTask&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, Date, Optional&lt;String&gt;, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, int, Optional&lt;String&gt;, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(ProjectCalendarException, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResourceAssignments(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;Integer, HumanResource&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResources(ProjectFile, Map&lt;Integer, HumanResource&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTask(ProjectFile, Task, Task, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTasks(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importWeekends(ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importYearlyHoliday(ProjectCalendarException, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.isCustomField(FieldType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.setPatchMspdi(boolean)" value="1.0"/>
		<VALUE measured="breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="breadthFirstSearch(Task, boolean)" value="1.0"/>
		<VALUE measured="cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="clearOrdering()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.buildDeb(File, File, File)" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.endFileEntry(OutputStream, long)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.main(String[])" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(String, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(long, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.startFileEntry(OutputStream, String, long, long)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Changelog()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Format.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFile()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFormat()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getTargetFilename()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.isDebian()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setDebian(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFile(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFormat(Format)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.addText(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtended()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtendedFormatted()" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getSynopsis()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.setSynopsis(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setEmail(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.toString()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Priority.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.Section()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setDebian(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setEpoch(int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setUpstream(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.toString()" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.add(TarFileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addChangelog(Changelog)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addConfFiles(TarFileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addDescription(Description)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addFileToTar(Tar, File, String, String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addMaintainer(Maintainer)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addVersion(Version)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createDataFile()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createMasterControlFile()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createTempFolder()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFileCheck(File)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolder(File)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolderCheck(File)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.execute()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileMd5(File)" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileNames(FileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.gzip(File, File, int, byte)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.normalizeTargetFolder(TarFileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelog(Changelog)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelogs()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String, String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.scanData()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setArchitecture(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConfig(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConflicts(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDebFilenameProperty(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDepends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setEnhances(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setHomepage(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setMaintainer(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPackage(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostinst(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostrm(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreDepends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreinst(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPrerm(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPriority(Priority)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setProvides(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setRecommends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setReplaces(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSection(Section)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSuggests(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTemplates(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setToDir(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTriggers(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setVersion(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.writeControlFile(File, long)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Comment.Comment()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.GenericName.GenericName()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Icon.Icon()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.LocalizedEntry(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.getValue()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setCountry(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setEncoding(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setLang(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setModifier(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setValue(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.toString()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Name.Name()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Type.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addComment(Comment)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addGenericName(GenericName)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addIcon(Icon)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addName(Name)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.execute()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.init()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setCategories(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setComment(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setExec(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setGenericName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setIcon(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setMimeType(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNoDisplay(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNotShowIn(String)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setOnlyShowIn(String)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setPath(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTerminal(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setToFile(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTryExec(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setType(Type)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setUrl(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateCategories(String)" value="13.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateKeys()" value="13.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.GZipOutputStream(OutputStream, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.close()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.finish()" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.setFileSystem(byte)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.write(byte[], int, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeHeader()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeInt(int, byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeShort(int, byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeTrailer(byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream, boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer, boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.println()" value="1.0"/>
		<VALUE measured="commit()" value="1.0"/>
		<VALUE measured="commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="compare(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="compare(Locale, Locale)" value="1.0"/>
		<VALUE measured="compare(String, String)" value="5.0"/>
		<VALUE measured="compare(Task, Task)" value="1.0"/>
		<VALUE measured="compare(TaskActivity, TaskActivity)" value="5.0"/>
		<VALUE measured="compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="contains(Task)" value="1.0"/>
		<VALUE measured="createAtomUnitBuilder()" value="1.0"/>
		<VALUE measured="createTopAndBottomUnitBuilder()" value="1.0"/>
		<VALUE measured="dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.FeaturesSetup(GanttProject, ChartPanel)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.askToRunExtendAlg()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupButton()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupEvents()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupGui(ChartPanel)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupSliders()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupTitle()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.syncSliders()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.updateSliders()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.TaskChange()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.fire()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.onCalendarChange()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectClosed()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectCreated()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectModified()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectOpened()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectSaved()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.reset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.setListener(ChangeListener)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskModelReset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskModelReset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.MyEntry(Component, Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getKey()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getValue()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.setValue(Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getComponent()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getSlider(String)" value="2.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.removeSlider(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.formatProgress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.getComponent()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.progress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.round(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.setProgress(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.set_slide_progress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.text()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.Statistics(TaskManager)" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.calcParameters()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getCompletedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getDelayedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getTotalTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getUncompletedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.Feature2Tests()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.calcFiveDaysAgo()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.genTaskNumber()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testCompleted()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testDelayed()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testUncompleted()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.MockingManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addOneDay(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addTaskListener(TaskListener)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.clear()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createCompletedTask(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createConstraint(Type)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(long)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.deleteTask(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.emptyClone()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.encode(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getAlgorithmCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendar()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendarListener()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyGraph()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectCompletion()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectLength()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectListener()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectStart()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getRootTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTask(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCopyNamePrefixOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCount()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.isZeroMilestones()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.newTaskBuilder()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.processCriticalPath(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.registerTask(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.setZeroMilestones(Boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.shift(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.taskCommitYesNo(TaskMutator, String, String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.MockingTask(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.addNotes(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.applyThirdDateConstraint()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutator()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutatorFixingDuration()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.delete()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getActivities()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignmentCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignments()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAttachments()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getColor()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCost()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCustomValues()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependencies()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependant()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependee()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDisplayEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDuration()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getExpand()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getName()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNestedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNotes()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getPriority()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getShape()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getStart()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getSupertask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskID()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskInfo()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThird()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isCritical()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isMilestone()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isProjectTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isSupertask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task, int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setColor(Color)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCritical(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setExpand(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setName(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setNotes(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setPriority(Priority)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDate(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDateConstraint(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setWebLink(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.shift(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.translateDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.unpluggedClone()" value="1.0"/>
		<VALUE measured="format(Offset)" value="1.0"/>
		<VALUE measured="format(TimeUnit, Date)" value="1.0"/>
		<VALUE measured="get()" value="1.0"/>
		<VALUE measured="getColor(Task)" value="1.0"/>
		<VALUE measured="getContainer(Task)" value="1.0"/>
		<VALUE measured="getDeepNestedTasks(Task)" value="1.0"/>
		<VALUE measured="getDepth(Task)" value="1.0"/>
		<VALUE measured="getDescription()" value="1.0"/>
		<VALUE measured="getDirectoryName()" value="1.0"/>
		<VALUE measured="getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="getNextSibling(Task)" value="1.0"/>
		<VALUE measured="getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="getPassword()" value="1.0"/>
		<VALUE measured="getPreviousSibling(Task)" value="1.0"/>
		<VALUE measured="getRootTask()" value="1.0"/>
		<VALUE measured="getServerName()" value="1.0"/>
		<VALUE measured="getShapePaint(Task)" value="2.0"/>
		<VALUE measured="getSizeLabels()" value="1.0"/>
		<VALUE measured="getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="getTextCount()" value="1.0"/>
		<VALUE measured="getUserName()" value="1.0"/>
		<VALUE measured="hasNestedTasks(Task)" value="1.0"/>
		<VALUE measured="hasNotes(Task)" value="1.0"/>
		<VALUE measured="hyperlinkUpdate(HyperlinkEvent)" value="1.0"/>
		<VALUE measured="i18n(String)" value="1.0"/>
		<VALUE measured="isCriticalTask(Task)" value="1.0"/>
		<VALUE measured="isDeletable()" value="1.0"/>
		<VALUE measured="isEmpty()" value="1.0"/>
		<VALUE measured="isFirst(TaskActivity)" value="1.0"/>
		<VALUE measured="isHighlighted(Component, ComponentAdapter)" value="1.0"/>
		<VALUE measured="isLast(TaskActivity)" value="1.0"/>
		<VALUE measured="isMilestone(Task)" value="1.0"/>
		<VALUE measured="isProjectTask(Task)" value="1.0"/>
		<VALUE measured="isVoid(TaskActivity)" value="1.0"/>
		<VALUE measured="layout(JPanel, int)" value="1.0"/>
		<VALUE measured="logDependencyLoop(String, String)" value="1.0"/>
		<VALUE measured="move(Task, Task)" value="1.0"/>
		<VALUE measured="move(Task, Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.AbstractChartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.isDeletable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.installUI(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.paint(Graphics, JComponent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.processMouseMotionEvent(MouseEvent, JLayer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addRenderer(ChartRendererBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.beginScrollViewInteraction(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createMouseHoverLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.finishInteraction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.fireSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getActiveInteraction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getAdapter(Class)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getHeaderHeight(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getRenderedImage(GanttExportSettings)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStyle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.init(IGanttProject, IntegerOption, FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.removeSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scheduleTask(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setActiveInteraction(MouseInteraction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setCursor(Cursor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setDimensions(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTimelineHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.CalendarEventAction(GPCalendar, Date, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addException(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addHoliday(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeException(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeHoliday(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.ChartComponentBase(IGanttProject, UIFacade, ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addRenderer(ChartRendererBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.buildImage(GanttExportSettings, ChartImageVisitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getAdapter(Class)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getJComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionsDialogAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getRenderedImage(GanttExportSettings)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStyle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.init(IGanttProject, IntegerOption, FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.initMouseListeners()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.removeSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDefaultCursor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDimensions(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTimelineHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.ChartTabContentPanel(IGanttProject, UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addChartPanel(Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addTableResizeListeners(Component, Component)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.alignTopPanelHeights(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createChartPanels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createContentComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getLeftPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getRightPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.updateTimelineHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.CustomPropertyClass(String, String, Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.fromJavaClass(Class&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDisplayName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getJavaClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.encodeFieldType(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String, String, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.canSetPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getAttributes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getPropertyClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getTypeAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setDefaultValueAsString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.isMacOs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.setup(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.isCommited()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogBuilder(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.DialogImpl(JDialog, JFrame, NotificationManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.center(Centering)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.hide()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.layout()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.setNotificationOwner(JButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.NotificationViewImpl(JDialog, JButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.setComponent(JComponent, JComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.showBalloon()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.createDialog(Component, Action[], String, NotificationManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.ErrorNotifier(UIFacadeImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.add(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.FacadeInvalidator(TreeModel, List&lt;RowHeightAligner&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.isValid()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesInserted(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesRemoved(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeStructureChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.debug(Logger, String, Object...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(Throwable)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logSystemInformation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(Throwable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readConfiguration(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readLog()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setLogFile(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setUIFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.GPTransferable(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createDocumentFlavor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createTextFlavor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferData(DataFlavor)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferDataFlavors()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.isDataFlavorSupported(DataFlavor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.ColumnImpl(JXTreeTable, TableColumnExt, Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getHeaderFitDimension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getSort()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getStub()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableColumnExt()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setOrder(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.GPTreeTableBase(IGanttProject, UIFacade, CustomPropertyManager, DefaultTreeTableModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.HeaderMouseListener(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.createPopupActions(MouseEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.handlePopupTrigger(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mousePressed(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mouseReleased(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.SortTableHeaderRenderer(JTable, Function&lt;Integer, ColumnImpl&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.TableHeaderUiFacadeImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.add(String, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clearUiColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createColumn(int, Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createDefaultColumns(List&lt;Column&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createStub(Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.deleteColumn(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByID(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByViewIndex(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getField(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getModelIndex(Column)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importColumnList(ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importData(ColumnList)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.insertColumnIntoUi(ColumnImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.renameColumn(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.updateType(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.VscrollAdjustmentListener(TimelineChart, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.adjustmentValueChanged(AdjustmentEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.isScrollable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addAction(Action, KeyStroke)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addActionWithAccelleratorKey(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addNewCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.applyComponentOrientation(ComponentOrientation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumnWidth(ColumnImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellEditor(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellRenderer(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createDefaultEditors()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.deleteCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.doInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editCellAt(int, int, EventObject)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editingStopped(ChangeEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getCellEditor(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getHorizontalScrollBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getManageColumnsAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getScrollPane()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTableHeaderUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getToolTipText(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVerticalScrollBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.initTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.insertWithLeftyScrollBar(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.isStartEditingEvent(KeyEvent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.newTableColumnExt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onCellSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.prepareEditor(TableCellEditor, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processKeyBinding(KeyStroke, KeyEvent, int, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processMouseEvent(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setNewRowAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setRowPropertiesAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setupActionMaps(GPAction...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.wrapEditor(TableCellEditor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.GPTreeTransferHandler(GPTreeTableBase, TaskManager, Supplier&lt;GanttChart&gt;, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.canImport(TransferSupport)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.createTransferable(JComponent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.getSourceActions(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.importData(TransferSupport)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentBuildNumber()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentVersionNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.GanttChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, JComponent, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createButtonPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createSchedulePanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings(boolean, boolean, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getZoomLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isCommandLineMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isExpanded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isOnlySelectedItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setCommandLineMode(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setEndDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setExpandedResources(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setLogo(Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setOnlySelectedItem(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setRowCount(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setZoomLevel(ZoomState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.GanttGraphicArea(GanttProject, GanttTree2, TaskManager, ZoomManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.MouseSupport(ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.findTaskUnderMousePointer(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.getChartItemUnderMousePoint(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createBaselineColorOptions(ChartModelImpl, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createToggleHolidayAction(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaseline()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaselineColorOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChart(GanttExportSettings)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartImplementation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getImplementation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMyChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.repaint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setBaseline(GanttPreviousState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setPreviousStateTasks(List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttOptions(RoleManager, DocumentManager, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.characters(char[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.startElement(String, String, String, Attributes)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(GPOptionGroup...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(Iterable&lt;GPOptionGroup&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptions(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.correct(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.doSave(OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getAutomatic()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getButtonShow()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getCSVOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExport3dBorders()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportComplete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportRelations()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportSettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPDirectory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPPwd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontSpec(Font)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontStyle(Font)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getIconSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getLockDAVMinutes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getOptionsFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getPluginPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getResourceColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getShowStatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getToolBarPosition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUndoNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getVersion()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWorkingDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslFo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.initDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isLoaded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isMaximized()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.load()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.loadRoleSets(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.save()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.savePreferences(Preferences, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoleSets(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoles(RoleSet, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setAutomatic(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setButtonShow(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setDaysOffColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setEarlierPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExport3dBorders(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportComplete(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportName(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportRelations(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPPwd(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUrl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUser(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setIconSize(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLaterPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLockDAVMinutes(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setRedline(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceOverloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceUnderloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setShowStatusBar(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setToolBarPosition(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUIConfiguration(UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUndoNumber(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWeekEndColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowPosition(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowSize(int, int, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWorkingDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslDir(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslFo(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.BaselineSaver.save(File, List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.GanttPreviousState(String, List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTasks(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTemporaryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.load()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.remove()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.saveFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.GanttPreviousStateTask(int, GanttCalendar, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.hasNested()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.isMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.GanttProject(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newParser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newSaver()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.addMouseListenerToAllContainer(Component[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.changeWorkingDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.createToolbar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.fitBounds(GraphicsConfiguration, Rectangle)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getArea()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getBaselines()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCopyAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptionsGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getPasteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourcePanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getStopEditingMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskContainment()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getToolTip(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getViewIndex()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.initOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.isModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.main(String[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.newProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.open(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.openStartupDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.printProject()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.quitApplication()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refreshProjectInformation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAdded(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAssignmentsChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourcesRemoved(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreBounds()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveAsProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setApplicationQuitCallback(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setAskForSave(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setProjectName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.tryImportDocument(Document)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.GanttProjectBase()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.RowHeightAligner(TreeTableContainer, ChartModelBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.optionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createContentPane(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectModified(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProjectUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getResourceCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getRssFeedChecker()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getSearchUi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getStatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTabs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUiFacadeImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getViewManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.removeProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showNotificationDialog(NotificationChannel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showOptionDialog(int, String, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.GanttProjectImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.TaskManagerConfigImpl(HumanResourceManager, GPCalendarCalc, GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getProjectDocumentURL()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.addProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getBaselines()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getResourceCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskContainment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.isModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.newTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.open(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.removeProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.repaintResourcePanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setProjectName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.GanttResourcePanel(GanttProject, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.addToolbarActions(ToolbarBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.clearSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.copySelection(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createPopupMenu(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createTreeTable(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.cutSelection(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveDownAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveUpAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPeople()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPopupMenuPoint(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getProjectEventListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResources()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRowHeightAligner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTreeActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.handlePopupTrigger(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.nbPeople()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.newHuman(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAdded(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAssignmentsChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourcesRemoved(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.saveSelectionToClipboard(ClipboardContents, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setSelected(HumanResource, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setTaskPropertiesAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.startDefaultEditing(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.updateContextActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.GanttSplash()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(Graphics2D, String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.frameInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(String, GanttCalendar, long, TaskManagerImpl, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(TaskManagerImpl, TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.setLength(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTree2(GanttProject, TaskManager, TaskSelectionManager, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.GanttTreeDropListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragExit(DropTargetEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragOver(DropTargetDragEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.drop(DropTargetDropEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.isHighlighted(Component, ComponentAdapter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeCollapsed(TreeExpansionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeExpanded(TreeExpansionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addObjectWithExpand(Object, MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addToolbarActions(ToolbarBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.applyPreservingExpansionState(Task, Predicate&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.convertNodesListToItemList(List&lt;DefaultMutableTreeTableNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createDirtyfier(GanttProjectBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createPopupMenu(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createTreeTable(IGanttProject, Runnable, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.expandRefresh(TreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getAllTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getJTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getParentNode(DefaultMutableTreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getPopupMenuActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRoot()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRowHeightAligner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTreeActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleNodes(VisibleNodesFilter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.handlePopupTrigger(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.initRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onTaskSelectionChanged(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setEditingTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setGraphicArea(ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelected(Task, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelectionPaths(TreePath[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.startDefaultEditing(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.GanttTreeTable(IGanttProject, UIFacade, GanttTreeTableModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.ModelListener.tableChanged(TableModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.centerViewOnSelectedCell()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.doInit()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.editSelectedTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.onProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.BeginDateComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.EndDateComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.GanttTreeTableModel(TaskManager, CustomPropertyManager, UIFacade, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnAdded(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMarginChanged(ChangeEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMoved(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnRemoved(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnSelectionChanged(ListSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnClass(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnName(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getCustomProperty(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getHierarchicalColumn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getValueAt(Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.isCellEditable(Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setCustomPropertyValue(Object, Object, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValue(Object, Object, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValueAt(Object, Object, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getPluginManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.registerTaskSelectionManager(TaskSelectionManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.OSXAdapter(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleAbout(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleOpenFile(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handlePreferences(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleQuit(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.registerMacOSXApplication(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.setupSystemProperties()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.PluginOptionsHandler(PluginPreferencesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.PluginPreferencesImpl(Preferences, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.absolutePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.childrenNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.createChild(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.flush()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.get(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getBoolean(String, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getByteArray(String, byte[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getDouble(String, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getFloat(String, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getInt(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getLong(String, long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.keys()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.name()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.node(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.nodeExists(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.parent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.put(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putBoolean(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putByteArray(String, byte[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putDouble(String, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putFloat(String, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putInt(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putLong(String, long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.remove(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.removeNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.sync()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IEclipsePreferences, IPreferenceFilter[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IExportedPreferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, IPreferenceFilter[], OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, OutputStream, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.get(String, String, Preferences[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getBoolean(String, String, boolean, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getByteArray(String, String, byte[], IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDefaultLookupOrder(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDouble(String, String, double, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getFloat(String, String, float, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getInt(String, String, int, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLong(String, String, long, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLookupOrder(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getString(String, String, String, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.importPreferences(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.matches(IEclipsePreferences, IPreferenceFilter[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.readPreferences(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.setDefaultLookupOrder(String, String, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos(String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.ResourceChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.createButtonPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.ResourceDefaultColumn(Column, Class&lt;?&gt;, String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.find(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getColumnStubs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getStub()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getValueClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.isEditable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.ResourceChartSelection(IGanttProject, GanttResourcePanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.exportIntoSystemClipboard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.lostOwnership(Clipboard, Transferable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceLoadGraphicArea(GanttProject, ZoomManager, ResourceTreeUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.ResourcechartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getImplementation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.isExpanded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.ResourceTreeImageGenerator(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.calculateDimension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.createImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.isAssignmentVisible(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.printResources(Graphics, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.ResourceTreeTable(IGanttProject, ResourceTreeTableModel, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.buildPath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionDown()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionUp()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.doInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.downResource()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getSelectedNodes()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getToolTipText(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isExpanded(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isVisible(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.newTableColumnExt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.onProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.swapAssignents(AssignmentNode, AssignmentNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.upResource()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.ResourceTreeTableModel(HumanResourceManager, TaskManager, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.SelectionKeeper(TreeSelectionModel, DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.restoreSelection()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.addResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildAssignmentsSubtree(ResourceNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.changePeople(List&lt;HumanResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.decreaseCustomPropertyIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResources(HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getAllResouces()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnClass(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnName(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getCustomProperty(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForAssigment(ResourceAssignment)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getValueAt(Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.isCellEditable(Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveDown(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveUp(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceAssignmentsChanged(Iterable&lt;HumanResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceChanged(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setSelectionModel(TreeSelectionModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setValueAt(Object, Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.updateResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.useNextIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.ShowHideColumnsDialog(UIFacade, ColumnList, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.TaskContainmentHierarchyFacadeImpl(GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.areUnrelated(Task, Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getContainer(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDeepNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDepth(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNextSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getPreviousSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.hasNestedTasks(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sort(Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sortHelper(Task, Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.TaskModelModificationListener(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.TaskTreeImageGenerator(GanttTree2, UIConfiguration, Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.createImage(List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.isVisible(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paintTask(Graphics, PaintState, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.printTasks(Graphics2D, List&lt;DefaultMutableTreeNode&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.TaskTreeImageGeneratorExt(GanttTree2, UIConfiguration, Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintIcon(Graphics, ImageIcon, PaintState, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintString(Graphics, TextMetrics, String, PaintState, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintTask(Graphics, PaintState, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.TreeTableCellEditorImpl(DefaultCellEditor, JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.addCellEditorListener(CellEditorListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.cancelCellEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createOnFocusGained(JTextComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createSelectAllCommand(JTextComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createUnselectAllCommand(JTextComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.isCellEditable(EventObject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.removeCellEditorListener(CellEditorListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.shouldSelectCell(EventObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.stopCellEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesInserted(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesRemoved(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeStructureChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.CollapseAllAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.ExpandAllAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.ExpandCollapseAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.TreeTableContainer(Pair&lt;TreeTableClass, TreeTableModelClass&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.applyPreservingExpansionState(ModelObject, Predicate&lt;ModelObject&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.collapseAll(TreePath)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.commitIfEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.expandAll(TreePath)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getDeleteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNewAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNode(ModelObject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getPropertiesAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getSelectedNodes()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isExpanded(ModelObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isVisible(ModelObject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.makeVisible(ModelObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setArtefactActions(GPAction, GPAction, GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setExpanded(ModelObject, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode, Predicate&lt;Pair&lt;MutableTreeTableNode, MutableTreeTableNode&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode, List&lt;MutableTreeTableNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.createPath(TreeNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getLevel(TreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeNode, TreeNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeNode, TreeNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.removeAllChildren(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.LafOption(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.objectToString(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.UIFacadeImpl(JFrame, GanttStatusBar, NotificationManagerImpl, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOptions(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.buildMessage(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job, IProgressMonitor, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createProgressGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.doSetLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getAppFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getChartFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDefaultMonitor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getExceptionReport(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getFontFamilies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLogo()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getSizeLabels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.i18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.onViewLog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.resetErrorLog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setLookAndFeel(GanttLookAndFeelInfo)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showConfirmationDialog(String, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showNotificationDialog(NotificationChannel, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showOptionDialog(int, String, Action[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showYesNoConfirmationDialog(String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateComponentTreeUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateFonts()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.ArtefactAction(String, IconSize, ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionStateChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactDeleteAction.ArtefactDeleteAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactNewAction.ArtefactNewAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactPropertiesAction.ArtefactPropertiesAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.BaselineDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.CalculateCriticalPathAction(TaskManager, UIConfiguration, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.isOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.setOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.IconSize(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.asString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.calledFromAppleScreenMenu(ActionEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createIcon(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createVoidAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getAllKeyStrokes(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getCustomIconPath()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getFontawesomeLabel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getI18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIcon(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStrokeText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.parseKeyStroke(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.setFontAwesomeLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateIcon(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateTooltip()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.isDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.setDefault(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.ShowChannelAction(NotificationManager, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.channelCleared()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationAdded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationRead(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.updateState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.ViewToggleAction(Chart, GPViewManager, GPView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.CopyAction(GPViewManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.CutAction(GPViewManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.EditMenu(IGanttProject, UIFacade, GPViewManager, SearchUi, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getRedoAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getUndoAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, IconSize, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteExternalDocument(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteInternalFlavor(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoableEditHappened(UndoableEditEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.RefreshViewAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.SearchDialogAction(SearchUi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.SettingsDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoableEditHappened(UndoableEditEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.AboutAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.HelpMenu(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.RecoverLastProjectAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.recover(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.runAction(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.ViewLogAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.createMenu()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.CloudProjectActionBase(String, UIFacade, DocumentManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.showURLDialog(IGanttProject, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.ExitAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.NewProjectAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.OpenMRUDocumentAction(int, String, IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.getLocalizedName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.OpenURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.openRemoteProject(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.PrintAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.ProjectExportAction(UIFacade, IGanttProject, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.ProjectImportAction(UIFacade, GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.ProjectMenu(GanttProject, JMenu, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getNewProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getOpenProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getPrintAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getSaveProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.ProjectPreviewAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.ProjectPropertiesAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.SaveProjectAsAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.SaveURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.saveProjectRemotely(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.AssignmentDeleteAction(AssignmentContext, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.deleteAssignments(ResourceAssignment[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager, ResourceContext, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.addStateChangedListener(ActionStateChangedListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.hasResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.ResourceActionSet(ResourceContext, AssignmentContext, GanttProject, UIFacade, ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getAssignmentDelete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceDeleteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveDownAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveUpAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceNewAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourcePropertiesAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceSendMailAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.deleteResources(HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.ResourceImportAction(HumanResourceManager, TaskManager, RoleManager, GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getResourcesFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.ResourceMoveDownAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.ResourceMoveUpAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.updateAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.ResourceSendMailAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.ScrollTimeIntervalAction(String, int, TaskManager, ChartModel, ScrollingManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.createTimeInterval()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.ScrollToEndAction(IGanttProject, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.ScrollToSelectionAction(UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.selectionChanged(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.userInputConsumerChanged(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.ScrollToStartAction(IGanttProject, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.ScrollToTodayAction(TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.IndentTargetFunctionFactory(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.OutdentTargetFunctionFactory(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.addStateChangedListener(ActionStateChangedListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.askUserPermission(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.forwardScheduling()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTreeFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.selectionChanged(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.userInputConsumerChanged(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.askUserPermission(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.TaskIndentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.indent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, IndentApplyFxn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.TaskLinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.TaskMoveDownAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.TaskMoveEnabledPredicate(TaskManager, Function&lt;Collection&lt;Task&gt;, Function&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.apply(List&lt;Task&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.TaskMoveUpAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.updateAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.TaskUnindentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.unindent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, UnindentApplyFxn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.TaskUnlinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.isEnabled(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.ViewChartOptionsDialogAction(ChartComponentBase, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.createDialogComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.ViewCycleAction(GPViewManager, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.GPViewImpl(Chart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.ViewMenu(IGanttProject, GPViewManager, IntegerOption, FontOption, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.ZoomActionSet(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomInAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomOutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.ZoomInAction(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.ZoomOutAction(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.application.MainApplication.run(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, GPCalendar, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, List&lt;CalendarEvent&gt;, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.ColorEditor(UIFacade, FocusSetter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.moveFocusToTable(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.DateCellRendererImpl(DateFormat)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.Column(Class&lt;?&gt;, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getColumnClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.TableModelImpl(List&lt;CalendarEvent&gt;, Runnable, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.delete(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValue(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValueAt(int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isRecurring()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.setValueAt(Object, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createDateValidatorComponents(String, DateFormat...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createNonRecurringComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createRecurringComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createTableComponent(TableModelImpl, DateFormat, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getEvents()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getI18NedEventType(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.recurring(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar, List&lt;CalendarEvent&gt;, TableModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.CalendarTagHandler(GPCalendarCalc, HolidayTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.GPCalendarProvider(List&lt;GPCalendar&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getCalendars()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendar(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendars()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl(ChartModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.paint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ChartModelBase(TaskManager, TimeUnitStack, UIConfiguration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.OptionEventDispatcher.optionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.ScrollingSessionImpl(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.scrollTo(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.shiftOffsets(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addOptionChangeListener(GPOptionChangeListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addRenderer(SceneBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createOffsetBuilderFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createScrollingSession(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.fireOptionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartItemWithCoordinates(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnitOffsets()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getHorizontalOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getMilestones()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAnchorDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOptionEventDispatcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getPainter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getProjectConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTopLineHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit(Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVerticalOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVisibleLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.paint(Graphics)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBaseFont(FontSpec)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomTimeUnit(TimeUnit)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomUnitWidth(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBounds(Dimension)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setChartUIConfiguration(ChartUIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHeaderHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHorizontalOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setRowHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTimelineTasks(Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopTimeUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopUnit(TimeUnit)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setVerticalOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setupCopy(ChartModelBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.ChartModelImpl(TaskManager, TimeUnitStack, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskBoundaryItem(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskProgressItem(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getBaseline()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartItemWithCoordinates(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getGraphicPrimitive(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskContainment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.isExplicitlyHidden(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setBaseline(List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setExplicitlyHiddenTasks(Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ChartModelResource(TaskManager, HumanResourceManager, TimeUnitStack, UIConfiguration, ResourceChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.ResourceLoadOption(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getVisibleResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.ChartOptionGroup(String, GPOption[], OptionEventDispatcher)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModelBase, Canvas)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.build()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getPrimitiveContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.ChartPropertiesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.addValue(Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.loadPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValues(Iterable&lt;Entry&lt;String, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.updateValue(Entry&lt;String, String&gt;, Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartUIConfiguration(UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBaseFontSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBottomUnitGridColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartFont()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartStylesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getDayOffColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getEarlierPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderBorderColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHolidayTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor1()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor2()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getLaterPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getMargin()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPublicHolidayTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceNormalLoadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceOverloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceUnderLoadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderFont()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekEndColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekendAlphaValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWorkingTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getYOffSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isCriticalPathOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isRedlineOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setBaseFont(Font, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setHeaderHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setRowHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setYOffSet(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.ChartViewState(TimelineChart, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getCurrentZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getTopTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollTo(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer(int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.changePoint2(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.getDraw()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.setDraw(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.ProjectCalendarDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.onCalendarEditCommited(ProjectCalendarOptionPageProvider)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.ResourceLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoadRenderer(ChartModelResource, ResourceChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.beforeProcessingTimeFrames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.buildTasksLoadsRectangles(List&lt;Load&gt;, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.calculateGap(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createLoadText(Rectangle, Load)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(List&lt;Offset&gt;, Date, Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getDefaultOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoadDetails(LoadDistribution, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(List&lt;Load&gt;, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(Load, Load, List&lt;Offset&gt;, int, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.SimpleRenderedImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.copyData(WritableRaster)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getColorModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData(Rectangle)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumXTiles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumYTiles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getProperty(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSampleModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridXOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridYOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.ColouredRectanglePainter(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.paint(Rectangle)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.StyledPainterImpl(ChartUIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Line)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Polygon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Rectangle)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Text)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(TextGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.prePaint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.setGraphics(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.TaskActivityPart(TaskActivity, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.TaskInteractionHintRenderer(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.paint(Graphics2D)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.BarChartConnectorImpl(Task, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEndVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStartVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.TaskActivityChartApi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBarHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getChartStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getViewportWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getWeekendOpacityOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskRendererImpl2(ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.VerticalPartitioning(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.build(TaskContainmentHierarchyFacade)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.createTaskActivitySceneBuilder(Canvas, ChartApi, Style)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRectangleHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getTaskRectangles(Task, ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderActivities(int, Task, List&lt;TaskActivity&gt;, OffsetList, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderBaseline(Task, int, OffsetList)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderDependencies()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderLabels(List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderProgressBar(List&lt;Polygon&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderTasksAboveAndBelowViewport(List&lt;Task&gt;, List&lt;Task&gt;, OffsetList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderVisibleTasks(List&lt;Task&gt;, OffsetList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnBounds(List&lt;TaskActivity&gt;, Date, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnViewportBounds(List&lt;TaskActivity&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.LabelTextSelector(Task, Text)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.createMaxWidthLabel(TextMetrics, String, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.getLabels(TextMetrics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.TimelineLabelRendererImpl(ChartModelApi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.createTimelineLabel(int, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.getLabelLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.render()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(JXTreeTable, int, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.ChartDimensions(GanttExportSettings, GPTreeTableBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getFullWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getLogoHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTableHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTreeWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.setChartWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.ChartImageBuilder(GanttExportSettings, ChartModelBase, GPTreeTableBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.buildImage(ChartImageVisitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.RenderedChartImage(ChartModel, BufferedImage, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getChart(int, int, int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getTile(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getWholeImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.ClipboardContents(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.build()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.copy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.cut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIncomingDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIntraDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getOutgoingDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.isCut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.ClipboardTaskProcessor(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.canMove(Task, ClipboardContents)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAndInsert(Task, Task, Task, Map&lt;Task, Task&gt;, ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAssignments(ClipboardContents, Map&lt;Task, Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyDependencies(ClipboardContents, Map&lt;Task, Task&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, Task, ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsSibling(Task, ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTaskCopyNameOption(StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateAssignments(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateExternalDeps(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.GanttChartController(IGanttProject, UIFacade, ChartModelImpl, ChartComponentBase, GanttTree2, ChartViewState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskEndInteraction(MouseEvent, TaskBoundaryChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginDrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginMoveTaskInteractions(MouseEvent, List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.buildImage(GanttExportSettings, ChartImageVisitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.findTaskUnderPointer(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getChartItemUnderMousePoint(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.hideTooltip()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paste(ChartSelection)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.showTooltip(int, int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.GanttChartSelection(IGanttProject, TreeTableContainer&lt;Task, GanttTreeTable, GanttTreeTableModel&gt;, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.buildClipboardContents()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.exportTasksIntoSystemClipboard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.lostOwnership(Clipboard, Transferable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.paste(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.MouseListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.handleEvent(ChartItem, MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mouseClicked(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mousePressed(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDragTasks(MouseEvent, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDrawDependency(MouseEvent, ChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.MouseMotionListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.findCalendarEvent(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.mouseMoved(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.CalendarChartItem(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.getDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.ChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.TaskBoundaryChartItem(Task, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.isStartBoundary()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskNotesChartItem.TaskNotesChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.TaskProgressChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem.TaskRegularAreaChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TimelineLabelChartItem.TimelineLabelChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.ChangeTaskBoundaryInteraction(Date, Task, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.doFinish(TaskMutator)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.finish(TaskMutator)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.updateTooltip(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.ChangeTaskEndInteraction(TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.getNotesText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.ChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem, TimelineFacade, TaskChartModelFacade, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.doFinish(TaskMutator)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.ChangeTaskProgressRuler(Task, TaskChartModelFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.getProgress(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.ChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.getNotesText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.DrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem, TimelineFacade, ChartModelFacade, UIFacade, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.MouseInteractionBase(Date, TimelineFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getChartDateGrid()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getLengthDiff(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.MouseListenerBase(UIFacade, ChartComponentBase, AbstractChartImplementation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseEntered(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mousePressed(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseReleased(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.showPopupMenu(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.startScrollView(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.MouseMotionListenerBase(UIFacade, AbstractChartImplementation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.mouseDragged(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.MouseWheelListenerBase(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomOut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.isRotationUp(MouseWheelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.mouseWheelMoved(MouseWheelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.MoveTaskInteractions(MouseEvent, List&lt;Task&gt;, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.doFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.ScrollViewInteraction(MouseEvent, TimelineFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.TimelineFacadeImpl(ChartModelBase, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createScrollingSession(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createTimeInterval(TimeUnit, Date, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getDateAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getEndDateAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.GPToolbar(JPanel, List&lt;TestGanttRolloverButton&gt;, int, boolean, IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.getToolbar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resizeToolbar(List&lt;? extends JComponent&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.setButtonSizeScaling(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.updateButtons()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.HighlightOnMouseOver(AbstractButton, Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseClicked(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseEntered(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.NavigationPanel(IGanttProject, TimelineChart, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.PanelBorder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.updateUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.ButtonBuilder(TestGanttRolloverButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.add()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.withAutoRepeat(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ToolbarBuilder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(TestGanttRolloverButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addComboBox(Action[], Action)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addGap()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addPanel(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addWhitespace()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.build()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.button(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBackground(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBorder(Border)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withDpiOption(IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withGapFactory(Supplier&lt;Component&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withLafOption(GPOption&lt;String&gt;, Function&lt;String, Float&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withSquareButtons()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.ZoomingPanel(UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.Item.Item(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.addItem(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.getItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.RssFeedChecker(GPTimeUnitStack, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssProposalCommand()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssReadCommand()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getUiOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.markLastCheck()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.onYes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.run()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.setOptionsVersion(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.wasToday(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.addItem(RssFeed, Node, Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.compareCategory(String, String, String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.getXPath(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.isApplicableToVersion(Node, String, String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.parse(InputStream, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.setUserInfo(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.DocumentCreator(IGanttProject, UIFacade, ParserFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.StringOptionImpl(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addListener(DocumentMRUListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.changeWorkingDirectory(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.clearRecentDocuments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createAutosaveCleanup()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createTemporaryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getAutosaveZipFs()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getFTPOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getLastAutosaveDocument(Document)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getNetworkOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getOptionGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getProxyDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getRecentDocuments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getResourceVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getTempDir()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWebDavStorageUi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectoryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.newAutosaveDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentManager.FTPOptions.FTPOptions(String, GPOption&lt;?&gt;[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentStorageUi.Components.Components(JComponent, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.DocumentsMRU(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.add(String, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.addListener(DocumentMRUListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.fireMRUListChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.iterator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.FileDocument(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canCreate(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canOverwrite()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getLastAccessTimestamp()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.open()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.FtpDocument(String, StringOption, StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.NetworkOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.canEnableTestAction(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.FailureState.enter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.OnlyShowWeekendsTagHandler(GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.ParsingState(SuccessState, FailureState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.enter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.getDefaultDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.setDefaultDocument(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.PortfolioTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ProxyDocument(DocumentCreator, Document, IGanttProject, UIFacade, ColumnList, ColumnList, ParserFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.SuccessState.enter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolioImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.ReadOnlyProxyDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.decorate(JComponent, JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.setCollection(WebDavResource, List&lt;WebDavResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.GanttURLChooser(IGanttProject, UIFacade, ListOption&lt;WebDavServerDescriptor&gt;, WebDavUri, StringOption, StringOption, IntegerOption, ...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.ReloadWorker(WebDavResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.doInBackground()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.done()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.readChildren(WebDavResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.addEmptyRow(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.buildUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createOpenDocumentUi(OkAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createSaveDocumentUi(OkAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createUsernamePasswordPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.dispose()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.findSavedServer(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getLockTimeout()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPathOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getSelectedResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.onSelectionChanged(WebDavResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.reloadFilesTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setProgressBar(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setSelectionListener(SelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setWebDavActionsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.showError(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryApplyUrl(WebDavUri)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryEnterCollection(JXList, FilesTableModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.updateUsernameAndPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(String, String, String, StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(WebDavResource, String, String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.acquireLock()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canWrite()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getHTTPError(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getOutputStream()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getWebdavResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.releaseLock()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.HttpDocumentOutputStream(HttpDocument)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.Key(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory(String, String, StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.clearCache()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.createResource(WebDavUri)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getHost(WebDavUri)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getProxyDetails(StringOption)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.setCredentials(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Host, MiltonResourceFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Resource, MiltonResourceFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.assertExists()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.exists()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getChildResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getHost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getLockOwners()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getOptionalImpl()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getParent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getWebDavUri()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isLocked()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isWritable()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.lock(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.unlock()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.write(byte[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.WebDavOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getRootUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.setRootUrl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.EnumerationOptionImpl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.objectToString(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.reload()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.ServerListOption(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.addValue(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValue(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValues(Iterable&lt;WebDavServerDescriptor&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.updateValue(WebDavServerDescriptor, WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.WebDavStorageImpl(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createChooser(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createNoLockAction(String, GanttURLChooser, DocumentReceiver)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.findServer(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLastWebDavDocumentOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLegacyLastWebDAVDocumentOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getProxyOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getServersOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavLockTimeoutOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavReleaseLockOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.open(Document, DocumentReceiver)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.save(Document, DocumentReceiver)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildChild(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildParent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildRootUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.CommandLineExportApplication()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.export(Args)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getArguments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getCommandLineFlags()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.ConsoleUIFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showNotificationDialog(NotificationChannel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showOptionDialog(int, String, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.DeprecatedProjectExportData.DeprecatedProjectExportData(IGanttProject, String, Chart, Chart, GanttExportSettings, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFileWizardImpl(UIFacade, IGanttProject, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFinalizationJobImpl.run(File[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getExporter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getPublishInWebOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setExporter(Exporter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setUrl(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.ExporterJob(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportRangeOptionGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportSettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getCommandLineKeys()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeEndOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeStartOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.run(File, ExportFinalizationJob)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.ExporterChooserPage(List&lt;Exporter&gt;, State)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createCVSExportJob(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileExtensions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.proposeFileExtension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.ExporterToImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.FileTypeOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getAvailableValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.proposeFileExtension()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createImageExportJob(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileExtensions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.proposeFileExtension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.FileChooserPage(State, IGanttProject, WizardImpl, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createFileFilter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getFileChooserTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getOptionGroups()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.loadPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedFileChange(File)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedUrlChange(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.proposeOutputFile(IGanttProject, Exporter)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(Task, int, StringBuffer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.detach()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.loginAndChangedir(FTPOptions)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.put(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.WebPublisher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.createTransferJob(Ftp, File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.run(File[], FTPOptions)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.ExtensionBasedFileFilter(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.accept(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getExtension(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.matches(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.GanttXMLFileFilter.GanttXMLFileFilter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.AbstractPagesDialog(String, UIFacade, List&lt;ListItem&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem.ListItem(boolean, String, String, Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.isPageVisible(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.AbstractTableAndActionsComponent(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addSelectionListener(SelectionListener&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createDefaultTableAndActions(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createIsEnabledFunction(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.fireSelectionChanged(List&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getActionsComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getAddResourceAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getDeleteItemAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getValue(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.onSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setActionOrientation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelection(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelectionMode(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ActionUtil.setupAutoRepeat(JButton, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.DateInterval(Date, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromModelDates(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromVisibleDates(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getVisibleEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateIntervalListEditor(DateIntervalModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.add(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.canRemove(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.format(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getIntervals()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getMaxIntervalLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.remove(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.update()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.updateActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container, Centering)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.ComboItem(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.EditableList(List&lt;T&gt;, List&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.TableAndActionsImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onAddEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onDeleteEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getValueAt(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.isCellEditable(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.setValueAt(Object, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.applyValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createDefaultComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createPrototype(Object)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getActionsComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObjects()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getStringValue(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableAndActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableCellRendererComponent(DefaultTableCellRenderer, T, boolean, boolean, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.initComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.isEditable(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.reloadValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setUndefinedValueLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setupEditor(List&lt;T&gt;, JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.FileChooserPageBase(WizardImpl, Preferences, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.UrlFetcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.fetch()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.onFetchComplete(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.reschedule()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatus(IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatusLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setUrl(URL)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getDefaultFileName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getSelectedUrl()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.loadPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedFileChange(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedUrlChange(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.reportMalformedUrl(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setOptionsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setSelectedFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setStatus(JLabel, IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.buildComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColors()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColorsOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setRecentColors(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.GPlainDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.insertString(int, String, AttributeSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setPattern(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setValidCharacters(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(AbstractFormatter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setFocus()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setPattern(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setValidCharacters(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogInfo.GanttDialogInfo(Frame, int, int, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.GanttDialogPerson(CustomPropertyManager, UIFacade, HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.applyChanges()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.constructDaysOffPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.findRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.loadFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.okButtonActionPerformed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.result()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.GanttDialogProperties(GanttTask[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.show(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.GanttImagePanel(Image, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.setScale(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(LookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.GanttLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.addLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getDefaultInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getGanttLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByClass(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInstalledLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.GanttStatusBar(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.ProgressBarDialog(IProgressMonitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.dialogInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.done()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.getLabelText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setProgress(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setSubTask(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.start(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.ProgressMonitorImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.beginTask(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.done()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.internalWorked(double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.isCanceled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setCanceled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setTaskName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.subTask(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.worked(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.createProgressMonitor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setNotificationManager(NotificationManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.GanttTabbedPane()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Component, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, String, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.getSelectedUserObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.GanttTaskPropertiesBean(GanttTask[], IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addEmptyRow(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.applySettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.canBeProjectTask(Task, TaskContainmentHierarchyFacade)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCheckBox()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCustomColumnPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructEarliestBegin(Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructGeneralPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructNotesPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructPredecessorsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructResourcesPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getNotes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPercentComplete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getTaskName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThird()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isMilestone()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTaskOrContainsProjectTask(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setSelectedTaskProperties()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setThird(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.storeOriginalValues(GanttTask)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.ListAndFieldsPanel(EditableList&lt;T&gt;, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.NotificationChannel(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addNotifications(Collection&lt;NotificationItem&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getDefaultNotification()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getNormalColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getUnreadCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isPulsing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.saveNormalColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setButton(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setDefaultNotification(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setPulsing(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setRead(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.NotificationComponent(NotificationChannel, AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(NotificationItem, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(String, String, HyperlinkListener, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.channelCleared()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createBackwardAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createClearAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createForwardAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createHtmlPane(String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationAdded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationRead(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.processItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.updateEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.NotificationItem(String, String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.isRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.setRead(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.NotificationManagerImpl(AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.addNotifications(NotificationChannel, Collection&lt;NotificationItem&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.getChannelButtons()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.hideNotification()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.setAnimationView(AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showNotification(NotificationChannel)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showPending()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.ProjectMRUMenu(IGanttProject, UIFacade, ProjectUIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.mruListChanged(Collection&lt;String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.ProjectOpenDiagnosticImpl(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addModifiedTask(Task, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addReason(Task, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildEndDateChangeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildStartDateChangeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.info(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.showDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.run(String, ShowDialogCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.setOpenLinksInBrowser(WebEngine)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiSwing.run(String, ShowDialogCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.ProjectOpenStrategy(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.adjustTasks(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.checkLegacyMilestones()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.tryPatchMilestones(IGanttProject, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step2.checkEarliestStartConstraints()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.processTasks(List&lt;Runnable&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.runUiTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.getMilestonesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.openFileAsIs(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ProjectUIFacadeImpl(UIFacade, DocumentManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.afterSaveProject(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.beforeClose()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.createProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ensureProjectSaved(IGanttProject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.formatWriteStatusMessage(Document, IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(Document, IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectAs(IGanttProject)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryLock(IGanttProject, Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTrySave(IGanttProject, Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryWrite(IGanttProject, Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.showNewProjectWizard(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.RecentColorsOption(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.addValue(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValue(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValues(Iterable&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.updateValue(Color, Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseEntered(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIcon(Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setScale(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setTextHidden(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setupFontAwesome()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.TextFieldAndFileChooserComponent(UIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getSelectedURL()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getWorkingDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFile(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileFilter(FileFilter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileSelectionMode(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.showFileChooser()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.tryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.RedlineOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.UIConfiguration(Color, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getAppFontSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getChartFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDayOffColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getEarlierPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getLaterPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getProjectBoundariesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getRedlineOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceOverloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceUnderloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekEndColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekendAlphaRenderingOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isCriticalPathOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isRedlineOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setChartFontOption(FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setCriticalPathOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDayOffColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDpiOption(IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setEarlierPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setLaterPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setRedlineOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceOverloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceUnderloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setWeekEndColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.DatePickerEditCommiter(JXDatePicker, JFormattedTextField, DateValidator, ValueValidator&lt;Date&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.attachOnFocusLost(ActionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.resetValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.tryCommit()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.aroundProjectStart(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.dateInRange(Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.GPDateCellEditor(IGanttProject, boolean, ValueValidator&lt;Date&gt;, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getActionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.stopCellEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.MultiscreenFitResult.MultiscreenFitResult(double, double, GraphicsConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.attachValidator(JTextField, ValueValidator&lt;T&gt;, GPOption&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.autoFitColumnWidth(JTable, TableColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.border(JComponent, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.clearErrorLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.contentPaneBorder(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createButtonBar(JButton[], JButton[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker(DateFormat...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createHtmlPane(String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createStringDateValidator(DateValidator, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTitle(JComponent, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTooltiplessJMenu(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTopAndCenter(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.formatPathForLabel(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeLabel(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeScale(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeYShift(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getHeaderDimension(JTable, TableColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getUiProperty(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getValidFieldColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.initJavaFx(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.isFontawesomeSizePreferred()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.multiscreenFit(Rectangle)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorComponent(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorRenderer(Supplier&lt;Integer&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newDateCellEditor(IGanttProject, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.pushAction(JComponent, boolean, KeyStroke, GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.registerActions(JComponent, boolean, GPAction...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setBackgroundTree(JComponent, Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ActionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ValueValidator&lt;Date&gt;, ActionListener)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupErrorLabel(JLabel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupHighlighters(JXTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.tryParse(DateFormat, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.walkComponentTree(JComponent, Predicate&lt;JComponent&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ViewLogDialog.show(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.AboutDialog2(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtml(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createPages()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createSummaryPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createTranslationsPage()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.i18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.onOk()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.BooleanOptionAction(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.CSVSettingsPanel(UIFacade, CSVOptions)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.ExportFieldsTableModel(List&lt;BooleanOption&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnClass(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getValueAt(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.setValueAt(Object, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.applyChanges(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createResourcePropertiesTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createSeparatorSettingsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskExportFieldsPanel(TableModel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskPropertiesTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getCsvOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getFixed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getSeparat()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getTextSeparat()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.Item(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSelectedItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.geti18nedValues(EnumerationOption, GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.onValueChange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.setSelectedItem(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.ExportCsvOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], GPOptionGroup[], int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], JComponent[], int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setSelected(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.updateSelectionUI(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.GanttChartOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.GeneralOptionPanel(UIFacade, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.askForApplyChanges()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.InterfaceOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.checkLocale(Locale)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getExtDir()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.OptionPageProviderBase(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getCanonicalPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getPageID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.wrapContentComponent(JComponent, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.OptionPageProviderPanel(OptionPageProvider, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.BooleanOptionRadioUi(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getNoButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getYesButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.I18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getAdvancedActionTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionGroupLabelKey(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionLabelKey(GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageDescriptionKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageLabelKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageTitleKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionValueLabelKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorButtonText(ColorOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorChooserTitle(ColorOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionGroupLabel(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(GPOptionGroup, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.hasValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder(Component, LayoutApi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPage(GPOptionGroup[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPlanePage(GPOptionGroup[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanComponent(GPOptionGroup, BooleanOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanOptionRadioUi(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createButtonComponent(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createColorComponent(ColorOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createDateComponent(DateOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, Supplier&lt;EnumerationOptionComboBoxModel&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFileComponent(FileOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFontComponent(FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup, GPOption&lt;?&gt;...)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createLabeledComponent(GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionComponent(GPOptionGroup, GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createRadioButtonBooleanComponent(GPOptionGroup, BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStandaloneOptionPanel(GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStringComponent(StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createValidatingComponent(GPOption&lt;T&gt;, ValueValidator&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createWaitIndicatorComponent(DefaultBooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getI18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getTrailingLabel(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getValidFieldColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.isCheckboxOption(GPOptionGroup, GPOption&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.needsLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setI18N(I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setOptionKeyPrefix(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setUiFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.updateTextField(JTextField, DocumentListener, ChangeValueEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.ProjectBasicOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.ProjectCalendarOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.buildPageComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.moveProject(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.updateMoveOptions(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.ProjectRolesOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.buildPageComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.ProjectSettingsPanel(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.applyChanges(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.ResourceChartOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.SettingsDialog2(IGanttProject, UIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getListItems(List&lt;OptionPageProvider&gt;, String, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getPages(String, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.onOk()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int, int, Container, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, Function&lt;Integer, Integer&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(Container, int, int, int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.printSizes(Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.TopPanel.create(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.WeekendsSettingsPanel(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.applyChanges(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model.CustomPropertyDefaultValueAdapter.createDefaultValueOption(CustomPropertyClass, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.I18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.formatRoleForTooltip(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getDayNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getNewProjectWizardWindowTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectDomainPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectWeekendPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRoleSetDisplayName(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipFooter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipHeader(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard.createNewProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.NewProjectWizardWindow(IGanttProject, UIFacade, I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addProjectNamePage(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addRoleSetPage(RoleSet[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addWeekendConfigurationPage(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.ProjectNamePage(IGanttProject, I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.RoleSetListModel(RoleSet[], I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.createTooltipText(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getCellRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.isTheOnlyEnabled(RoleSet)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.toggle(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetPage(RoleSet[], I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.CalendarOption(GPCalendar, List&lt;GPCalendar&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.objectToString(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.CheckBoxAction(GPCalendar, int, String, ButtonModel, Supplier&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendConfigurationPage(GPCalendarCalc, I18N, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.WeekendSchedulingOption(SchedulingEnum)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.objectToString(SchedulingEnum)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.append(List&lt;T&gt;, T...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createCalendarOption(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createWeekendCheckBoxes(GPCalendar, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.fillCustomCalendar(List&lt;CalendarEvent&gt;, GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.updateBasedOnLabel(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.WizardImpl(UIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPageComponent(WizardPage, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.adjustButtonState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.backPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getCurrentPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.nextPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onCancelPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePageComponent(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.ScrollingManagerImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.addScrollingListener(ScrollingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.removeScrollingListener(ScrollingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollTo(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.ColumnManagerPanel(CustomPropertyManager, ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.DefaultValueOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.setValue(Boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.IsVisibleOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.findColumn(CustomPropertyDefinition)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisible(CustomPropertyDefinition, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisibleFields(ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.NameOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.PropertyClassOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.getCustomPropertyClass(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.objectToString(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.resetValue(String, boolean, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.setUIControls(CardLayout, JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.commitCustomPropertyEdit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createComponent()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createDefaultFieldDefinitions(ColumnList, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomPropertyDefinition&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.getFieldsComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.isEditable(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setDefaultValuePanelEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setSelectedDefinition(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.createTableAndActions(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupComboBoxEditor(TableColumn, Object[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupTableUI(JXTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.CustomColumnTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getValueAt(int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.reload()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.setValueAt(Object, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnsPanel(CustomPropertyManager, UIFacade, CustomPropertyHolder, ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.DependencyTableModel(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.MyColumn(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getCaption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getTableColumn(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.isEditable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.TaskComboItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.createDependency(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.delete(int[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getValueAt(int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.setValueAt(Object, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.updateDependency(Object, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.Column(String, Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getColumnClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.ResourcesTableModel(ResourceAssignmentCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.createAssignment(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.delete(int[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getResourcesAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getValueAt(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.setValueAt(Object, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.updateAssignment(Object, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.TaskAllocationsPanel(Task, HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.createCostPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.init(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpPredecessorComboColumn(TableColumn, JTable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.TaskScheduleDatesPanel(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.adjustLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.changeLength(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLabel(String, BooleanOption, JComponent, GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLockAction(String, BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.fireDurationChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.insertInto(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setEnd(GanttCalendar, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setStart(GanttCalendar, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setUnpluggedClone(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setupFields(boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.showPopup(List&lt;Action&gt;, JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.swapLocks(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.ViewHolder(ViewManagerImpl, GanttTabbedPane, GPView, Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.selectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.ViewManagerImpl(IGanttProject, UIFacade, GanttTabbedPane, GPUndoManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activateNextView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activatePrevView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.createView(GPView, Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCopyAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getPasteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getProjectEventListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedArtefacts()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.toggleVisible(GPView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.updateActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.setComponent(JComponent, JComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.ContentPaneBuilder(GanttTabbedPane, GanttStatusBar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.build(Component, Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.getAnimationHost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.ZoomEvent(ZoomManager, ZoomState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.getNewZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomManager(TimeUnitStack)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getPersistentName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getTimeUnitPair()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.addZoomListener(ZoomListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomOut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.fireZoomingChanged(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.removeZoomListener(ZoomListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.setZoomState(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomOut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.BufferProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newParser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newSaver()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.FileChooserPage(UIFacade, Importer, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createFileFilter(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createOptions(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.setFile(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.ImportFileWizardImpl(UIFacade, IGanttProject, GanttOptions)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.getImporters()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.ImporterBase(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getCustomPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileTypeDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getSecondaryOptions()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(UIFacade, List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.ImporterChooserPage(List&lt;Importer&gt;, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.onSelectImporter(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.setActive(AbstractWizard)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createFileChooser(GanttOptions)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createImporter(FileFilter)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.ImporterFromGanttFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.TaskFieldImpl(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getSort()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setOrder(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.add(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getField(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.importData(ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.createBufferProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getDocument(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.importBufferProject(IGanttProject, BufferProject, UIFacade, MergeResourcesOption, ImportCalendarOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(File, IGanttProject, BufferProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.ImporterFromTxtFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.save(IGanttProject, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.saveAssignment(TransformerHandler, ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.CSVOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createResourceExportOption(ResourceDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(TaskDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getBomOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getResourceOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getSeparatedTextChars()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getTaskOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.getShortDayName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.save(IGanttProject, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttChartViewSaver.save(ColumnList, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.GanttTXTOpen(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.load(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.DefaultTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.startElement(String, String, String, Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(PrjInfos, UIConfiguration, TaskManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.TimelineTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingFinished()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addParsingListener(ParsingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addTagHandler(TagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.doLoad(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getDefaultTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getTimelineTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject, TaskTreeUIFacade, GanttResourcePanel, GanttGraphicArea, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.save(OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveAssignments(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveCalendar(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveHistory(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveResources(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveRoles(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveTasks(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveVacations(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveViews(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.save(List&lt;GanttPreviousState&gt;, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(GanttPreviousState, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(String, List&lt;GanttPreviousStateTask&gt;, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOption(String, GPOption&lt;?&gt;, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, GPOption&lt;?&gt;...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, Iterable&lt;GPOption&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionMap(Iterable&lt;Entry&lt;String, GPOption&lt;?&gt;&gt;&gt;, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.save(IGanttProject, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomColumnDefinitions(IGanttProject, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomProperties(IGanttProject, HumanResource, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveRates(HumanResource, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, Boolean, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, String, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, int, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.cdataElement(String, String, AttributesImpl, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.createHandler(Result)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyComment(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyElement(String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.endElement(String, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.encodeFieldType(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.save(IGanttProject, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTask(TransformerHandler, GanttTask, CustomPropertyManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperties(TransformerHandler, CustomPropertyManager)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String, String, Map&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.VacationSaver.save(IGanttProject, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.save(UIFacade, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeColumns(ColumnList, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeRecentColors(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeTimelineTasks(UIFacade, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.XmlParser(List&lt;TagHandler&gt;, List&lt;ParsingListener&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.characters(char[], int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endCDATA()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.parse(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startCDATA()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startElement(String, String, String, Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(Properties)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadPath(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadResource(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadStream(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[], StringBuffer, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCommonCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getShortDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.setLocaleImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.Event(GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.GanttLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.applyDateFormatLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.correctLabel(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.createDateFormat(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.fireLanguageChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatDate(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatLanguageAndCountry(Locale)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatShortDate(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatText(String, Object...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatTime(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getAvailableLocales()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCharSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getComponentOrientation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCorrectedLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale(Locale)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDay(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLongDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMediumDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMonth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getRecurringDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getResourceBundle(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDayNames(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String, Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.parseDate(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.removeListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setShortDateFormat(SimpleDateFormat)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption(String, Locale[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.objectToString(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.ShortDateFormatOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.formatDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.getSelectedValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setSelectedLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.clearCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.getCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isMyTag(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isTagStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.setTagStarted(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.startElement(String, String, String, Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.AllocationTagHandler(HumanResourceManager, TaskManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.findRole(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.loadAllocation(Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingFinished()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ColorValueParser.parseString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.CustomPropertiesStructure()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskPropertyID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesTagHandler(ParsingContext, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.loadProperty(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingFinished()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.DefaultWeekTagHandler(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.getShortDayName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.loadCalendar(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.DependencyTagHandler(ParsingContext, TaskManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.GanttDependStructure()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependType(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDifference(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setHardness(Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddressee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddresser(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.loadDependency(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingFinished()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.CalendarEventAttrs(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.HolidayTagHandler(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.loadHoliday(CalendarEventAttrs)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.onCalendarLoaded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.processLastEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.OptionTagHandler(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.addTaskWithLegacyFixedStart(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.getTasksWithLegacyFixedStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.isStackEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.peekTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.popTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.pushTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler(List&lt;GanttPreviousState&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.loadPreviousTask(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(String, String, String, Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.ResourceTagHandler(HumanResourceManager, RoleManager, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.findRole(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomProperty(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomPropertyDefinition(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadRate(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadResource(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingFinished()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.RoleTagHandler(RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.clearRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.findRoleSet(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.loadRoles(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.TaskDisplayColumnsTagHandler(String, String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createLegacyHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createPilsenHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.loadTaskDisplay(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.TaskPropertiesTagHandler(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.loadTaskProperty(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.TaskTagHandler(TaskManager, ParsingContext, TaskTreeUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.loadTask(Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingFinished()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.VacationTagHandler(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.loadResource(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.ViewTagHandler(String, UIFacade, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.loadViewState(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getCharts()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExporters()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExtensions(String, Class&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.GanttPrintable(RenderedImage, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.print(Graphics, PageFormat, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintManager.printChart(Chart, GanttExportSettings)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.PagePreview(int, PageFormat, Printable, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.clearCache()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMaximumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMinimumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.setScale(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.doLayout()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMaximumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMinimumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getPreferredSize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PrintPreview(IGanttProject, UIFacade, Chart, Date, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.StatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel0(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel1(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText0(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText1(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changePageOrientation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changeScale()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.createPages()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.onChangingDates()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.print()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.run(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.updateSourceImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.AssignmentNode(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getRoleForAssigment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getStandardField(ResourceDefaultColumn)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setRoleForAssigment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setStandardField(ResourceDefaultColumn, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(String, int, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.ResourceAssignmentImpl(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addCustomProperty(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addDaysOff(GanttDaysOff)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.createAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireResourceChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomProperties()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDaysOff()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getLoadDistribution()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getMail()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getPhone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getStandardPayRate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.removeAllAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.resetLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setId(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setMail(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setPhone(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setStandardPayRate(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.swapAssignments(ResourceAssignment, ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.unpluggedClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withEmail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withRole(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withStandardRate(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.add(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.addView(ResourceView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.create(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.down(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireAssignmentsChanged(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireCleanup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceAdded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceChanged(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourcesRemoved(HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getById(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResourcesArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getValueAsString(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.importData(HumanResourceManager, HumanResourceMerger)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newHumanResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newResourceBuilder()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.save(OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.up(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceMerger.MergeResourcesOption.MergeResourcesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.Load(Date, Date, float, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.isResourceUnavailable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.LoadDistribution(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(Date, Date, float, List&lt;Load&gt;, Task)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getDaysOff()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getSeparatedTaskLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getTasksLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processActivity(TaskActivity, float)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDayOff(GanttDaysOff)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDaysOff(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.OverwritingMerger(EnumerationOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildEmailCache(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildNameCache(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.findNative(HumanResource, HumanResourceManager)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(HumanResource, HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(Map&lt;HumanResource, HumanResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.ResourceNode(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getDefaultRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getEMail()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getPhone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getStandardField(ResourceDefaultColumn)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.removeAllChildren()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setDefaultRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setEMail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setStandardField(ResourceDefaultColumn, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.toString()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.ResourceTableNode(Object, Set&lt;ResourceDefaultColumn&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.isEditable(ResourceDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.RoleImpl(int, String, RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getPersistentID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.RoleEvent(RoleManager, RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.getChangedRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.RoleManagerImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.addRoleListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.changeRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.fireRolesChanged(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getDefaultRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getEnabledRoles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectLevelRoles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSet(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.importData(RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.removeRoleListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.RolePersistentID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.asString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleSetID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.RoleSetImpl(String, RoleManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.changeRole(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.deleteRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.findRole(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getRoles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.importData(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.MySearchResult.MySearchResult(HumanResource, ResourceSearchService)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.ResourceSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.search(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.SearchDialog(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.createSearchBox(SearchCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getResultViewDataModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.gotoSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.processResults(List&lt;SearchResult&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.runSearch(String, SearchCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.SearchResult(String, String, String, SearchObjectType, SearchService&lt;?, SearchObjectType&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getLabel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getOrigin()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSnippet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.SearchServiceBase(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.init(IGanttProject, TreeUiFacade&lt;SO&gt;, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.isNotEmptyAndContains(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.select(List&lt;SR&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.PopupSearchCallback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.accept(List&lt;SearchResult&lt;?&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.dismissPopup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.onSelect(JPopupMenu, List&lt;SearchResult&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.runSearch()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.setSearchBox(JTextField)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.SearchUiImpl(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.getSearchField()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.requestFocus()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.MySearchResult.MySearchResult(Task, TaskSearchService)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.TaskSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.search(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.JPaintCombo(Paint[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.getSelectedPaint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.PaintCellRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.BlankLineNode.BlankLineNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(String, CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColumn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getOldName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.CustomColumn(CustomColumnsManager, String, CustomPropertyClass, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.canSetPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getAttributes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getPropertyClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getTypeAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValueAsString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setId(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.CustomColumnsManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addListener(CustomPropertyListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addNewCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.deleteDefinition(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getCustomPropertyDefinition(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getDefinitions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.importData(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.CustomColumnsStorage(CustomColumnsManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumnsListener(CustomPropertyListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.changeLanguage(GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.createId()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.findByName(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireCustomColumnsChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnByID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColums()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.importData(CustomColumnsStorage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.removeCustomColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomColumnsValues(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.addCustomProperty(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.clone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomProperties()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomPropertyDefinition(CustomPropertyManager, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValueAsString(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.hasOwnValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.removeCustomColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.setValue(CustomPropertyDefinition, Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getColName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.CustomPropertyListenerImpl(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.removeCustomPropertyValues(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(HumanResource, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(ResourceAssignment, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(ResourceAssignmentCollectionImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(TaskImpl, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.ResourceAssignmentImpl(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.addAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.deleteAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.ResourceAssignmentStub(HumanResource, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.auxAddAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.copy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.deleteAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getCoordinator()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.importData(ResourceAssignmentCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.removeAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.Priority(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.fromPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getI18nKey()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getIconPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getLowerString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPriority(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.TaskActivitiesAlgorithm(GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.recalculateActivities(Task, List&lt;TaskActivity&gt;, Date, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getCalculatedValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getManualValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.isCalculated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setCalculated(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(Cost)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setOldValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorException.MutatorException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.addNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.cachePrecomputedShift(Task, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getActivities()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getPrecomputedShift(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getThird()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCritical(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setDuration(TimeDuration)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setExpand(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setIsolationLevel(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setStart(GanttCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setThird(GanttCalendar, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.enable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.fireEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.enable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.fireEvent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, TaskImpl, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.addNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.adjustNestedTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.applyThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.areEventsEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.calculateEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.colorDefined()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutator()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutatorFixingDuration()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.enableEvents(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getActivities()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignmentCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAttachments()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCustomValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependant()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDisplayEnd()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDuration()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getExpand()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNestedTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNotes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getShape()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThird()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isCritical()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isLegacyMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isProjectTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isUnplugged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities(GPCalendarCalc, Task, List&lt;TaskActivity&gt;, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCritical(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setExpand(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDate(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDateConstraint(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shapeDefined()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shiftDate(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDurationValue(TimeDuration)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.unpluggedClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.Access.newInstance(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCompletion(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCost(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withEndDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withExpansionState(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withId(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withLegacyMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withParent(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrevSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrototype(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeFactoryImpl.createFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.addDeepNestedTasks(Task, ArrayList&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.areUnrelated(Task, Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.compareDocumentOrder(Task, Task)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getContainer(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDeepNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDepth(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNextSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getPreviousSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTaskIndex(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.hasNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.sort(Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskManagerImpl(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.TaskMap(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.removeTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.setDirty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.size()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.TaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.addTaskListener(TaskListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.areEventsEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createConstraint(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(String)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.deleteTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.emptyClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.encode(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findClosestWorkingTime(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findTimeUnit(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyAdded(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyChanged(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyRemoved(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskAdded(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskModelReset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskProgressChanged(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskPropertiesChanged(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskRemoved(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskScheduleChanged(Task, GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAlgorithmCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAndIncrementId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendarListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyGraph()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getHierarchyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getMaxId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectCompletion()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectLength()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCopyNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(Task, Task, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;, Map&lt;Task, Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isRegistered(TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isZeroMilestones()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.newTaskBuilder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.onTaskMoved(TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.processCriticalPath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.registerTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.resetCriticalPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setEventsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setZeroMilestones(Boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.shift(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.taskCommitYesNo(TaskMutator, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.tasksToActivities(Task[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.TaskNode(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.applyThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getTaskInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getUserObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.TaskProperties(TimeUnitStack)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatCoordinators(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatDate(GanttCalendar, StringBuffer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatResources(Collection&lt;ResourceAssignment&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.getProperty(Task, String)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependencies(Iterable&lt;String&gt;, Task, Function&lt;Integer, Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependency(String, Task, Function&lt;Integer, Task&gt;, Map&lt;Integer, Supplier&lt;TaskDependency&gt;&gt;)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.TaskSelectionManager(Supplier&lt;TaskManager&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addSelectionListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireUserInputConsumerChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getEarliestStart()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getLatestEnd()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getSelectedTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.isTaskSelected(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeSelectionListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setSelectedTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setUserInputConsumer(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskView.getTimelineTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskSchedule(Task, TaskContainmentHierarchyFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskScheduleBottomUp(Set&lt;Task&gt;, TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.run(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.adjustNestedTasks(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Collection&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.getDiagnostic()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setDiagnostic(Diagnostic)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.AlgorithmCollection(TaskManagerImpl, FindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm, ChartBoundsAlgorithm, CriticalPathAlgorithm, ...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getAdjustTaskBoundsAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getCriticalPathAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getExtendUncompletedTaskAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getFindPossibleDependeesAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getProjectBoundsAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskCompletionPercentageAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskScheduleAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getScheduler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getShiftTaskTreeAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmException.AlgorithmException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CostAlgorithmImpl.getCalculatedCost(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.CriticalPathAlgorithmImpl(TaskManager, GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Date, Date, Date, Date, int, Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.collectDependees(Task, Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.isCritical()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.Processor(Map&lt;Task, Node&gt;, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.calculateLatestDates(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.enqueueDependees(LinkedList&lt;Node&gt;, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Map&lt;Task, Node&gt;, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Node, Node, TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.hasMoreInput()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.processQueue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.createTaskNodeMap(Task[], Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.getCriticalTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;, Logger)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.ExplicitDependencyImpl(TaskDependency, Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(GraphData, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.addToLevel(int, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.checkLayerValidity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.createEmptyLayers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.getLayer(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.removeFromLevel(int, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.withTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.ImplicitInheritedDependency(DependencyEdge, Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.ImplicitSubSuperTaskDependency(Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.Node(Task, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addIncoming(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addOutgoing(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.demoteLayer(GraphData)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getIncoming()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getOutgoing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.promoteLayer(GraphData)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeIncoming(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeOutgoing(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.revertData()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(Node, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(NodeData)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addIncoming(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addOutgoing(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getIncoming()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getOutgoing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeIncoming(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeOutgoing(DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.revert()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.setLevel(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.isRunning()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.start()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.touch(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addDependency(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addEdge(DependencyEdge)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addInheritedDependencies(DependencyEdge, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.buildLoop(Map&lt;Task, DependencyEdge&gt;, DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.checkLayerValidity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.findExplicitDependency(TaskDependency, Node, Node)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.fireGraphChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLayer(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLogger()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getNode(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.isAncestor(Node, Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.move(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeDependency(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeEdge(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeImplicitDependencies(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.rollbackTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.setLogger(Logger)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.startTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.ExtendUncompletedTaskAlgorithm(DependencyGraph, WeekendCalendarImpl, SchedulerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.couldRun()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.defineEndOfNextWorkingDay(WeekendCalendarImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.doRun()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.extendUncompletedTasks(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.modifyTaskEndToNextWorkingEnd(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskAfterNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskBeforeNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskStartsBeforeNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.FindPossibleDependeesAlgorithmImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.processTask(Task[], Task, ArrayList&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.Result.Result(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.getBounds(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentage(Task, TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentageBottomUp(Task, TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.RecalculateTaskScheduleAlgorithm(AdjustTaskBoundsAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(TaskDependency[], int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilConstraints(TaskDependency)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isRunning()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.modifyTaskStart(Task, GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Collection&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.traverse(TaskContainmentHierarchyFacade, Task, Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(Collection&lt;T&gt;, Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(T[], Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.SchedulerImpl(DependencyGraph, Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.doRun()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.getTaskModelListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskEnd(Task, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskStart(Task, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.schedule(Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.ShiftTaskTreeAlgorithm(TaskManagerImpl, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(List&lt;Task&gt;, TimeDuration, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(Task, TimeDuration, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.shiftTask(Task, TimeDuration, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortByStartDate(List&lt;TaskActivity&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortTasksByStartDate(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.LoopDetector(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey.RangeSearchFromKey(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchToKey.RangeSearchToKey(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, TaskDependencyImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.compareTo(SearchKey)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.Hardness(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.getIdentifier()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.parse(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.MutationInfo(TaskDependency, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.deleteDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.TaskDependencyCollectionImpl(Factory, EventDispatcher)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency, Set&lt;Task&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.addDependency(TaskDependency)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.canCreateDependency(Task, Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.delete(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.deleteDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.doClear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.fireChanged(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDefaultHardness()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependant(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependee(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.DefaultCollision(GanttCalendar, int, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getAcceptableStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getVariation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.isActive()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromReadablePersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getReadablePersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint, Hardness, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getActivityBinding()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependant()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDifference()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEndVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getHardness()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStartVector()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setConstraint(TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setDifference(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setHardness(Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.TaskDependencySliceAsDependant(Task, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.TaskDependencySliceAsDependee(Task, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.TaskDependencySliceImpl(Task, TaskDependencyCollection, Function&lt;Task, TaskDependencySlice&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependency(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependencyCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.hasLinks(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.ConstraintImpl(Type, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.addDelay(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.clone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.setTaskDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(GanttCalendar, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.DependencyActivityBindingImpl(TaskActivity, TaskActivity, Date[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getAlignedBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependantActivity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependeeActivity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.FinishFinishConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getCollision()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.FinishStartConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getCollision()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.StartFinishConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getCollision()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.StartStartConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getCollision()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.TaskDependencyEvent(TaskDependencyCollection, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.TaskHierarchyEvent(Object, Task, Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getNewContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getOldContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskModelReset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.TaskPropertyEvent(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.TaskScheduleEvent(Task, GanttCalendar, GanttCalendar, GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewFinishDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldFinishDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.TaskHierarchyItem(Task, TaskHierarchyItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.addNestedItem(TaskHierarchyItem, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getContainerItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNestedItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNextSiblingItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.createItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.getRootItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.UndoManagerImpl(IGanttProject, ParserFactory, DocumentManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.addUndoableEditListener(GPUndoListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canRedo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canUndo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.die()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoableEditHappened(UndoableEditImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getRedoPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getUndoPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.redo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.removeUndoableEditListener(GPUndoListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undoableEdit(String, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.UndoableEditImpl(String, Runnable, UndoManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canRedo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canUndo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.getPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.redo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.restoreDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.saveFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undoRedoExceptionHandler(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.connectStringArray(String[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayURL(String)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithDesktopApi(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithJnlpApi(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.getPlatform()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.replaceToken(String[], String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[], String[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.determineColor(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.getColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.DateUtils.parseDate(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendExtension(File, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendSuffixBeforeExtension(File, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getExtension(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getFilenameWithoutExtension(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.replaceExtension(File, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MathUtil.signum(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.append(StringBuilder, int, int, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.toString(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.PropertiesUtil.loadProperties(Properties, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getDisplayNames(Object[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getTruncatedString(String, int, FontMetrics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.isEmptyOrNull(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padLeft(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padRight(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.Pair(F, S)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.create(F, S)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.first()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.second()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.AbstractFileChooserPage(UIFacade, Preferences, String, FileFilter, GPOptionGroup[], boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.UrlFetcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.fetch()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.onFetchComplete(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.reschedule()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatus(IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatusLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setUrl(URL)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileStatus(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getSelectedUrl()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getWizard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.loadPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.onSelectedFileChange(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.reportMalformedUrl(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setActive(AbstractWizard)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setOptionsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.showStatus(JLabel, IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.AbstractWizard(UIFacade, String, WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.addPageComponent(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.adjustButtonState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.backPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getCurrentPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.isExistingNextPage(WizardPage)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.nextPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setNextPage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setOkAction(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.wrapePageComponent(String, JComponent)" value="1.0"/>
		<VALUE measured="objectToString(CheckOption)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.check(StringTokenizer, String)" value="2.0"/>
		<VALUE measured="org.w3c.util.DateParser.getCalendar(String)" value="16.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDate(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoHours(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoMillis(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.main(String[])" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.parse(String)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(String)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.twoDigit(int)" value="2.0"/>
		<VALUE measured="org.w3c.util.InvalidDateException.InvalidDateException(String)" value="1.0"/>
		<VALUE measured="paint(Rectangle)" value="1.0"/>
		<VALUE measured="run()" value="1.0"/>
		<VALUE measured="setValue(Date)" value="1.0"/>
		<VALUE measured="setValue(Double)" value="1.0"/>
		<VALUE measured="sort(Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="stringToObject(String)" value="1.0"/>
		<VALUE measured="taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskModelReset()" value="1.0"/>
		<VALUE measured="taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="toString()" value="1.0"/>
	</METRIC>
	<METRIC category="Method" name="Design complexity" abbreviation="iv(G)">
		<VALUE measured="accept(File)" value="1.0"/>
		<VALUE measured="actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="apply(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="apply(Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="apply(MutableTreeTableNode)" value="2.0"/>
		<VALUE measured="apply(Object)" value="1.0"/>
		<VALUE measured="apply(Polygon)" value="1.0"/>
		<VALUE measured="apply(ResourceAssignment)" value="1.0"/>
		<VALUE measured="apply(Task)" value="1.0"/>
		<VALUE measured="apply(Task, HumanResourceManager)" value="1.0"/>
		<VALUE measured="apply(Type)" value="1.0"/>
		<VALUE measured="applyComponentOrientation(ComponentOrientation)" value="1.0"/>
		<VALUE measured="areUnrelated(Task, Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.copy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.findClosestWorkingTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getBaseCalendarID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getDayMask(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getEvent(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getOnlyShowWeekends()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getPublicHolidays()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getWeekDayType(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setBaseCalendarID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setOnlyShowWeekends(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setWeekDayType(int, DayType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.CalendarActivityImpl(Date, Date, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.isWorkingTime()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.CalendarEvent(Date, boolean, Type, String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.equals(Object)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getTitle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getType()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.newEvent(Date, boolean, Type, String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.addListener(GPCalendarListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.doFindClosest(Date, DateFrameable, MoveDirection, DayType, Date)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.fireCalendarChanged()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setName(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.shiftDate(Date, TimeDuration)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.create(GanttDaysOff)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.equals(GanttDaysOff)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getFinish()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(Date)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(GanttCalendar)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOffInWeek(Date)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption(Values)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.Values.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.copy()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.findClosestWorkingTime(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, Date)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getBaseCalendarID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getDayMask(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getEvent(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getOnlyShowWeekends()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getPublicHolidays()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getRecurringDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekDayType(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekendDaysCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isPublicHoliDay(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isWeekend(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.reset()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setBaseCalendarID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setOnlyShowWeekends(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setWeekDayType(int, DayType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.ForwardTimeWalker(GPCalendarCalc, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.getTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.walk(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.WorkingUnitCounter(GPCalendarCalc, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.getNonWorkingTime()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.isMoving()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processNonWorkingTime(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processWorkingTime(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.run(Date, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.Arrow(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.setVisible(boolean)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.Line(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getArrow()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.setArrow(Arrow)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.Polygon(int...)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getRightX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getTopY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.Rectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.getBackgroundPaint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.setBackgroundPaint(Paint)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.addStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getBackgroundColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getForegroundColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getModelObject()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getOpacity()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyles()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.hasStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.isVisible()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setBackgroundColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setForegroundColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setModelObject(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setOpacity(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setVisible(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, String, SpatialIndex&lt;Text&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector, SpatialIndex&lt;Text&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getFont()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getHAlignment()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLabels(TextMetrics)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getMaxLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getTextSelector()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getVAlignment()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.index(Label)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setAlignment(HAlignment, VAlignment)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setFont(Font)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setMaxLength(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setSelector(TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.TextGroup(int, int, int, String...)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.addText(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getColor(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getFont(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLine(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLineCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getTotalHeight(FontChooser, List&lt;Integer&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.setFonts(FontChooser)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.bind(Shape, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.clear()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createDetachedRectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLayers(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLine(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createPolygon(int...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createRectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createTextGroup(int, int, int, String...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayer(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayers()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int, int, int)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.newLayer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.paint(Painter)" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.setOffset(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.Rect(T, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.put(T, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.values()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.FontChooser(Properties, TextMetrics, Supplier&lt;Font&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.decreaseBaseFontSize()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getFont(String)" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginBottom(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginTop(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getTextHeight(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.Offset(TimeUnit, Date, Date, Date, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.createFullyClosed(TimeUnit, Date, Date, Date, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.debugPrint(List&lt;Offset&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.equals(Object)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getDayMask()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetAnchor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetPixels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getStartPixels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.shift(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.Factory()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.preBuild()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withAtomicUnitWidth(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withCalendar(GPCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndOffset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withOffsetStepFunction(Function&lt;TimeUnit, Float&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withRightMargin(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withStartDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withViewportStartDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withWeekendDecreaseFactor(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.FactoryImpl.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.OffsetBuilderImpl(Factory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.calculateNextStep(OffsetStep, TimeUnit, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructBottomOffsets(List&lt;Offset&gt;, int)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, List&lt;Offset&gt;, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, OffsetList)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructTopOffsets(TimeUnit, List&lt;Offset&gt;, List&lt;Offset&gt;, int, int)" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getBottomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getChartWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getConcreteUnit(TimeUnit, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getDefaultUnitWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getOffsetStep(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getTopUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getEndPx()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getStartPx()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.setStartPx(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.shift(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByEndDate.compare(Date, int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByPixels.compare(Integer, int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByStartDate.compare(Date, int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.findOffset(Type, ComparatorBy&lt;Type&gt;, int, int, List&lt;Offset&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.getBounds(Date, Date, List&lt;Offset&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupDateByPixels(int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetBy(Date, List&lt;Offset&gt;, ComparatorBy&lt;Date&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByEndDate(Date, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByStartDate(Date, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.OffsetManager(OffsetBuilderFactory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.alignOffsets(OffsetList)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.constructOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getAtomUnitOffsets()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getBottomUnitOffsets()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getTopUnitOffsets()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.reset()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.AlphaRenderingOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.getValueAsFloat()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.updateIndex()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.LineRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.renderLine(Line)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.PolygonRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.render(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.RectangleRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.render(Rectangle)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorderEdge(Graphics2D, Border, int, int, int, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorders(Graphics2D, Borders, int, int, int, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint, Color, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[])" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[], Color, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.createTexture(int, int, int[], Color, Color)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.equals(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getArray()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getBackground()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getForeground()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getarray()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.toString()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.BackgroundImage(Paint, Image)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.getPaint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.parse(String)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color, BasicStroke)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getStroke()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.parse(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border, Border, Border, Border)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getBottom()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getLeft()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getRight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getTop()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.isHomogeneous()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.withColor(Color)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.Color(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.get()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.parse(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.Padding(Collection&lt;Integer&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getBottom()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getLeft()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getRight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getTop()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.parse(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Style(Properties, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundColor(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundImage()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundPaint(Rectangle)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBorder(Shape)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getForegroundColor(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getOpacity(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getPadding()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getStyle(Properties, String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getVisibility(Shape)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.parseStroke(String[])" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.State(FontRenderContext, Font)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.TextLengthCalculatorImpl(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getState()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(Font, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(Graphics2D, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.TextPainter(Properties, Supplier&lt;Font&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(Text)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(TextGroup)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(int, int, HAlignment, VAlignment, Text, Label, Style)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paintTextLine(TextGroup, int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder(Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getCanvas()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.reset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.setHeight(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.BottomUnitSceneBuilder(Canvas, InputApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.build()" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getLineTopPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderLabel(TextGroup, int, Date, Offset, TimeFormatter)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderScaleMark(Offset, Offset)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.DayGridSceneBuilder(InputApi, Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.applyRectangleStyle(Rectangle, Offset)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.build()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineBottomPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineTopPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.isProjectBoundariesOptionOn()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderLine(Date, String, int, ComparatorBy&lt;Date&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDay(int, Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDayColumns()" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.TimelineSceneBuilder(InputApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.getTimelineContainer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderBottomUnits()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderTopUnits()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderUnderlay()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.reset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.Result.Result(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.getBounds(Iterable&lt;BarChartActivity&lt;?&gt;&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Connector(Vector, Vector, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.Vector(Point, Dimension)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getHProjection()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.reaches(Point)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStyleName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.DependencySceneBuilder(Canvas, Canvas, TaskApi&lt;T, D&gt;, ChartApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.drawDependencies(Collection&lt;Connector&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData()" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData(D, List&lt;Connector&gt;)" value="12.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.Style.Style(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.StyleApplier(TaskApi&lt;T, A&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.applyStyle(Shape)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.setTask(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.TaskActivitySceneBuilder(TaskApi&lt;T, A&gt;, ChartApi, Canvas, TaskLabelSceneBuilder&lt;T&gt;, Style)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getBoundingRectangle(int, BarChartActivity&lt;T&gt;, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRectangleHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRowHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityEarlierThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityLaterThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processRegularActivity(int, A, OffsetList, List&lt;Polygon&gt;)" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.renderActivities(int, List&lt;A&gt;, OffsetList)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.TaskLabelSceneBuilder(TaskApi&lt;T&gt;, InputApi, Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.calculateRowHeight()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createDownSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createLeftSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createRightSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createUpSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getFontHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getPrimitiveContainer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getTaskLabel(T, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyDown()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyUp()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextDown()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextUp()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.renderLabels(List&lt;Polygon&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.stripVerticalLabelSpace(Rectangle)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.CachingTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(TimeUnit, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getCachedText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getTextCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.format(Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.MonthTextFormatter(LocaleApi, String, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.initFormats(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.QuarterTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.TimeFormatters(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.getFormatter(TimeUnit, Position)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.setLocaleApi(LocaleApi)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getFitCount(Label[], int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getLabels(int, TextMetrics)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.WeekTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createBottomText()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTopText()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.getTextCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.YearTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String, Predicate&lt;? extends Object&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.find(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getColumnStubs()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getName()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getNameKey()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getSortComparator()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getStub()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getValueClass()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.isEditable(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setIsEditablePredicate(Predicate&lt;T&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setLocaleApi(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setSortComparator(Comparator&lt;?&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.ChangeValueEvent(Object, Object, Object, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getNewValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getOldValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getTriggerID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.determineColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.getColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.isValidColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.isChecked()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.toggle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String, Double)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, T[])" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getAvailableValues()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getSelectedValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.objectToString(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.reloadValues(List&lt;T&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.setSelectedValue(T)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.stringToObject(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFileOption.DefaultFileOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.DefaultFontOption(String, FontSpec, List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getFontFamilies()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getSizeLabels()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String, Integer)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String, BigDecimal)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.FontSpec(String, Size)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.Size(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.getFactor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.asString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getFamily()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getSize()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String, T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.I18N.setI18N(I18N)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.Entry(ChangeValueListener, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.compareTo(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.add(ChangeValueListener, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.fire(ChangeValueEvent)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addPropertyChangeListener(PropertyChangeListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.fireChangeValueEvent(ChangeValueEvent)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getInitialValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getPropertyChangeSupport()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.hasUi()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.i18n(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isChanged()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isScreened()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isWritable()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.lock()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.removePropertyChangeListener(PropertyChangeListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.rollback()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setHasUi(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setScreened(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setWritable(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.GPOptionGroup(String, GPOption...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.commit()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.copyFrom(GPOptionGroup)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getI18Nkey(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOption(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.isTitled()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.lock()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.rollback()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setI18Nkey(String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setTitled(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String, Throwable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(Throwable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.ColumnStub(String, String, boolean, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getOrder()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getSort()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.isVisible()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setOrder(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setVisible(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setWidth(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.Immutable.fromList(List&lt;Column&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.newCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.setLocaleApi(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(Date, LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(int, int, int, LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.clone()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.compareTo(GanttCalendar)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.equals(GanttCalendar)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDate()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDay()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDisplayValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getMonth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getYear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.module(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.parseXMLDate(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toXMLString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength(TimeUnit)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.reverse()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.setLength(TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.translate(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.TimeUnitDateFrameableImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.ParameterizedTimeUnitImpl(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.equals(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getAtomCount(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomCount()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.isConstructedFrom(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.TimeUnitFunctionOfDateImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.createTimeUnit(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.getAtomCount(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(Composition, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.getAtomCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createAtomTimeUnit(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createDateFrameableTimeUnit(String, TimeUnit, int, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnit(String, TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnitFunctionOfDate(String, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.getComposition(TimeUnitImpl, TimeUnit)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.registerTimeUnit(TimeUnit, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.TimeUnitImpl(String, TimeUnitGraph, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.equals(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getAtomCount(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getDirectAtomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.isConstructedFrom(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.TimeUnitPair(TimeUnit, TimeUnit, TimeUnitStack, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getDefaultUnitWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTopTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitStack.Util.findCommonUnit(TimeUnit, TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.FramerImpl(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.clearFields(Calendar)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.GPTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.encode(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.findTimeUnit(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDateFormats()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDefaultTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeFormat()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeUnitPairs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isDay(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isHour(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isWeek(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.parseDuration(String)" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.GregorianTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.encode(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.findTimeUnit(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDateFormats()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDefaultTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeFormat()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeUnitPairs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.parseDuration(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.DefaultCalendarFactory.newCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl(ICalendarFactory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustLeft(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustRight(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.jumpLeft(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(IGanttProject, CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(TaskManager, HumanResourceManager, RoleManager, CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.buildAssignmentSpec(Task)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getAssignments(Task)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getName(Task)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getWebLink(GanttTask)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.i18n(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.save(OutputStream)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeCustomPropertyValues(CSVPrinter, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomProperty&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResourceHeaders(CSVPrinter)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResources(CSVPrinter)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTaskHeaders(CSVPrinter)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTasks(CSVPrinter)" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(File, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup...)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createCustomProperties(Collection&lt;String&gt;, CustomPropertyManager)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createResourceRecordGroup(HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createTaskRecordGroup(TaskManager, HumanResourceManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.doLoad(CSVParser, int, int)" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getFieldNames(Enum...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getSkippedLineCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.isEmpty(CSVRecord)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.load()" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.setOptions(CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.ImporterFromCsvFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.run()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;, Set&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(Level, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(List&lt;Pair&lt;Level, String&gt;&gt;, Level, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.doProcess(CSVRecord)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getCustomFields()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getErrorOutput()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getHeader()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getOrNull(CSVRecord, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.hasMandatoryFields(CSVRecord)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.isHeader(CSVRecord)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.postProcess()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setErrorOutput(List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.ResourceFields(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceRecords(HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.doProcess(CSVRecord)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.AssignmentColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.apply(Task, HumanResourceManager)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.ResourceColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.apply(Task, HumanResourceManager)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.getIndexByName(HumanResourceManager)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.TaskFields(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskRecords(TaskManager, HumanResourceManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.doProcess(CSVRecord)" value="20.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseAssignmentSpec(CSVRecord)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseDateOrError(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.postProcess()" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter.main(String[])" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getComponent()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getEvents()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getTitle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setActive(AbstractWizard)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setEvents(List&lt;CalendarEvent&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setFile(File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.IcsFileImporter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getCustomPage()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.isReady()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.readEvents(File)" value="11.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.run()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.setFile(File)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(CustomPropertyManager, SortedSet&lt;S&gt;, Class&lt;T&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(HumanResourceManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(TaskManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.ExporterToMsProjectFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createExportJob(File)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createProjectWriter()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileExtensions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSecondaryOptions()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSelectedFormatExtension()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.proposeFileExtension()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.ImporterFromMsProjectFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.findChangedDates(Map&lt;GanttTask, Date&gt;, Map&lt;Task, Task&gt;, List&lt;Pair&lt;Level, String&gt;&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.run()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.LocaleOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.getSelectedLocale()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.setSelectedLocale(Locale)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.ProjectFileExporter(IGanttProject)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertConstraint(TaskDependency)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertFinishTime(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertLag(TaskDependency)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertPriority(Task)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertStartTime(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertTaskId(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertValue(CustomProperty)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.copyHours(ProjectCalendarHours, ProjectCalendarHours)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportAssignments(Map&lt;Integer, Task&gt;, Map&lt;Integer, Resource&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomFieldTypes(Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomProperties(CustomPropertyHolder, Map&lt;CustomPropertyDefinition, FieldType&gt;, CustomPropertySetter)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDaysOff(HumanResource, Resource)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDependencies(Map&lt;Integer, Task&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(GPCalendar, ProjectCalendar)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResource(HumanResource, Map&lt;Integer, Resource&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResources(Map&lt;Integer, Resource&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTask(Task, Task, int, int, Map&lt;Integer, Task&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTasks(Map&lt;Integer, Task&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportWeekends(ProjectCalendar)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task, double)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getMaxTaskID()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getResourceManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.isWorkingDay(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, ColumnList, File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, TaskTreeUIFacade, File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertConstraint(Relation)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataType(FieldType)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataValue(FieldType, Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertPriority(Priority)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertStartTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createPatchedStream(File)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createReader(File)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.debugTransformation()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.findDurationFunction(Task, StringBuilder)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.foreignId(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getDurations(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getErrors()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getNativeCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getOriginalStartDates()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomColumn(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomProperties()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCalendar(ProjectFile)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomFields(Task, GanttTask)" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomProperties(Resource, HumanResource)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDailyHoliday(ProjectCalendarException, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDayType(ProjectCalendar, Day, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDaysOff(Resource, HumanResource)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDependencies(ProjectFile, Map&lt;Integer, GanttTask&gt;)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, Date, Optional&lt;String&gt;, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, int, Optional&lt;String&gt;, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(ProjectCalendarException, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResourceAssignments(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;Integer, HumanResource&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResources(ProjectFile, Map&lt;Integer, HumanResource&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTask(ProjectFile, Task, Task, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="17.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTasks(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importWeekends(ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importYearlyHoliday(ProjectCalendarException, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.isCustomField(FieldType)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.run()" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.setPatchMspdi(boolean)" value="1.0"/>
		<VALUE measured="breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="breadthFirstSearch(Task, boolean)" value="1.0"/>
		<VALUE measured="cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="clearOrdering()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.buildDeb(File, File, File)" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.endFileEntry(OutputStream, long)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.main(String[])" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(String, int)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(long, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.startFileEntry(OutputStream, String, long, long)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Changelog()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Format.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFile()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFormat()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getTargetFilename()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.isDebian()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setDebian(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFile(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFormat(Format)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.addText(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtended()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtendedFormatted()" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getSynopsis()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.setSynopsis(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setEmail(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.toString()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Priority.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.Section()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setDebian(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setEpoch(int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setUpstream(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.toString()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.add(TarFileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addChangelog(Changelog)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addConfFiles(TarFileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addDescription(Description)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addFileToTar(Tar, File, String, String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addMaintainer(Maintainer)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addVersion(Version)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createDataFile()" value="8.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createMasterControlFile()" value="9.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createTempFolder()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFileCheck(File)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolder(File)" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolderCheck(File)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.execute()" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileMd5(File)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileNames(FileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.gzip(File, File, int, byte)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.normalizeTargetFolder(TarFileSet)" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelog(Changelog)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelogs()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String, String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.scanData()" value="10.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setArchitecture(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConfig(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConflicts(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDebFilenameProperty(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDepends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setEnhances(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setHomepage(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setMaintainer(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPackage(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostinst(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostrm(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreDepends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreinst(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPrerm(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPriority(Priority)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setProvides(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setRecommends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setReplaces(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSection(Section)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSuggests(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTemplates(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setToDir(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTriggers(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setVersion(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.writeControlFile(File, long)" value="13.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Comment.Comment()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.GenericName.GenericName()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Icon.Icon()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.LocalizedEntry(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.getValue()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setCountry(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setEncoding(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setLang(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setModifier(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setValue(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.toString()" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Name.Name()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Type.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addComment(Comment)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addGenericName(GenericName)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addIcon(Icon)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addName(Name)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.execute()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.init()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setCategories(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setComment(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setExec(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setGenericName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setIcon(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setMimeType(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNoDisplay(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNotShowIn(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setOnlyShowIn(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setPath(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTerminal(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setToFile(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTryExec(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setType(Type)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setUrl(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateCategories(String)" value="8.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateKeys()" value="8.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.GZipOutputStream(OutputStream, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.close()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.finish()" value="7.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.setFileSystem(byte)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.write(byte[], int, int)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeHeader()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeInt(int, byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeShort(int, byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeTrailer(byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream, boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer, boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.println()" value="1.0"/>
		<VALUE measured="commit()" value="1.0"/>
		<VALUE measured="commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="compare(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="compare(Locale, Locale)" value="1.0"/>
		<VALUE measured="compare(String, String)" value="4.0"/>
		<VALUE measured="compare(Task, Task)" value="1.0"/>
		<VALUE measured="compare(TaskActivity, TaskActivity)" value="6.0"/>
		<VALUE measured="compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="contains(Task)" value="1.0"/>
		<VALUE measured="createAtomUnitBuilder()" value="1.0"/>
		<VALUE measured="createTopAndBottomUnitBuilder()" value="1.0"/>
		<VALUE measured="dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.FeaturesSetup(GanttProject, ChartPanel)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.askToRunExtendAlg()" value="4.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupButton()" value="2.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupEvents()" value="4.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupGui(ChartPanel)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupSliders()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupTitle()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.syncSliders()" value="2.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.updateSliders()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.TaskChange()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.fire()" value="2.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.onCalendarChange()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectClosed()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectCreated()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectModified()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectOpened()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectSaved()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.reset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.setListener(ChangeListener)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskModelReset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskModelReset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.MyEntry(Component, Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getKey()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getValue()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.setValue(Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getComponent()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getSlider(String)" value="2.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.removeSlider(String)" value="2.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.formatProgress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.getComponent()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.progress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.round(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.setProgress(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.set_slide_progress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.text()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.Statistics(TaskManager)" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.calcParameters()" value="3.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getCompletedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getDelayedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getTotalTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getUncompletedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.Feature2Tests()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.calcFiveDaysAgo()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.genTaskNumber()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testCompleted()" value="3.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testDelayed()" value="3.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testUncompleted()" value="3.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.MockingManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addOneDay(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addTaskListener(TaskListener)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.clear()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createCompletedTask(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createConstraint(Type)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(long)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.deleteTask(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.emptyClone()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.encode(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getAlgorithmCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendar()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendarListener()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyGraph()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectCompletion()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectLength()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectListener()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectStart()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getRootTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTask(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCopyNamePrefixOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCount()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.isZeroMilestones()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.newTaskBuilder()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.processCriticalPath(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.registerTask(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.setZeroMilestones(Boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.shift(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.taskCommitYesNo(TaskMutator, String, String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.MockingTask(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.addNotes(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.applyThirdDateConstraint()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutator()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutatorFixingDuration()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.delete()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getActivities()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignmentCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignments()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAttachments()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getColor()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCost()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCustomValues()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependencies()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependant()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependee()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDisplayEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDuration()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getExpand()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getName()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNestedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNotes()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getPriority()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getShape()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getStart()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getSupertask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskID()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskInfo()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThird()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isCritical()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isMilestone()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isProjectTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isSupertask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task, int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setColor(Color)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCritical(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setExpand(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setName(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setNotes(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setPriority(Priority)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDate(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDateConstraint(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setWebLink(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.shift(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.translateDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.unpluggedClone()" value="1.0"/>
		<VALUE measured="format(Offset)" value="1.0"/>
		<VALUE measured="format(TimeUnit, Date)" value="1.0"/>
		<VALUE measured="get()" value="1.0"/>
		<VALUE measured="getColor(Task)" value="1.0"/>
		<VALUE measured="getContainer(Task)" value="1.0"/>
		<VALUE measured="getDeepNestedTasks(Task)" value="1.0"/>
		<VALUE measured="getDepth(Task)" value="1.0"/>
		<VALUE measured="getDescription()" value="1.0"/>
		<VALUE measured="getDirectoryName()" value="1.0"/>
		<VALUE measured="getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="getNextSibling(Task)" value="1.0"/>
		<VALUE measured="getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="getPassword()" value="1.0"/>
		<VALUE measured="getPreviousSibling(Task)" value="1.0"/>
		<VALUE measured="getRootTask()" value="1.0"/>
		<VALUE measured="getServerName()" value="1.0"/>
		<VALUE measured="getShapePaint(Task)" value="1.0"/>
		<VALUE measured="getSizeLabels()" value="1.0"/>
		<VALUE measured="getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="getTextCount()" value="1.0"/>
		<VALUE measured="getUserName()" value="1.0"/>
		<VALUE measured="hasNestedTasks(Task)" value="1.0"/>
		<VALUE measured="hasNotes(Task)" value="1.0"/>
		<VALUE measured="hyperlinkUpdate(HyperlinkEvent)" value="2.0"/>
		<VALUE measured="i18n(String)" value="1.0"/>
		<VALUE measured="isCriticalTask(Task)" value="2.0"/>
		<VALUE measured="isDeletable()" value="1.0"/>
		<VALUE measured="isEmpty()" value="1.0"/>
		<VALUE measured="isFirst(TaskActivity)" value="1.0"/>
		<VALUE measured="isHighlighted(Component, ComponentAdapter)" value="1.0"/>
		<VALUE measured="isLast(TaskActivity)" value="1.0"/>
		<VALUE measured="isMilestone(Task)" value="1.0"/>
		<VALUE measured="isProjectTask(Task)" value="1.0"/>
		<VALUE measured="isVoid(TaskActivity)" value="1.0"/>
		<VALUE measured="layout(JPanel, int)" value="1.0"/>
		<VALUE measured="logDependencyLoop(String, String)" value="1.0"/>
		<VALUE measured="move(Task, Task)" value="1.0"/>
		<VALUE measured="move(Task, Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.AbstractChartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.isDeletable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startCopyClipboardTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startMoveClipboardTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.installUI(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.paint(Graphics, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.processMouseMotionEvent(MouseEvent, JLayer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addRenderer(ChartRendererBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.beginScrollViewInteraction(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createMouseHoverLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.finishInteraction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.fireSelectionChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getActiveInteraction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getAdapter(Class)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getHeaderHeight(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getRenderedImage(GanttExportSettings)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStyle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.init(IGanttProject, IntegerOption, FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.removeSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scheduleTask(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setActiveInteraction(MouseInteraction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setCursor(Cursor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setDimensions(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTimelineHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.CalendarEventAction(GPCalendar, Date, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addException(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addHoliday(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeException(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeHoliday(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.ChartComponentBase(IGanttProject, UIFacade, ZoomManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addRenderer(ChartRendererBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.buildImage(GanttExportSettings, ChartImageVisitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getAdapter(Class)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getJComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionsDialogAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getRenderedImage(GanttExportSettings)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStyle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.init(IGanttProject, IntegerOption, FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.initMouseListeners()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.removeSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDefaultCursor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDimensions(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTimelineHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.ChartTabContentPanel(IGanttProject, UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addChartPanel(Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addTableResizeListeners(Component, Component)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.alignTopPanelHeights(JComponent, JComponent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createChartPanels()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createContentComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getLeftPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getRightPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.updateTimelineHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.CustomPropertyClass(String, String, Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.fromJavaClass(Class&lt;?&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDisplayName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getJavaClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(String, String)" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.encodeFieldType(Class&lt;?&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String, String, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.canSetPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getAttributes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getPropertyClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getTypeAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.hashCode()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setDefaultValueAsString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.isMacOs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.setup(GanttProject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.isCommited()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogBuilder(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.DialogImpl(JDialog, JFrame, NotificationManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.center(Centering)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.hide()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.layout()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.setNotificationOwner(JButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.NotificationViewImpl(JDialog, JButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.close()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isVisible()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.setComponent(JComponent, JComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.showBalloon()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.createDialog(Component, Action[], String, NotificationManager)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.ErrorNotifier(UIFacadeImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.add(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.FacadeInvalidator(TreeModel, List&lt;RowHeightAligner&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.isValid()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectOpened()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesInserted(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesRemoved(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeStructureChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.debug(Logger, String, Object...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(Throwable)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logSystemInformation()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readConfiguration(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readLog()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setLogFile(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setUIFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.GPTransferable(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createDocumentFlavor()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createTextFlavor()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferData(DataFlavor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferDataFlavors()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.isDataFlavorSupported(DataFlavor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.ColumnImpl(JXTreeTable, TableColumnExt, Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getHeaderFitDimension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getSort()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getStub()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableColumnExt()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setOrder(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setVisible(boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.GPTreeTableBase(IGanttProject, UIFacade, CustomPropertyManager, DefaultTreeTableModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.HeaderMouseListener(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.createPopupActions(MouseEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.handlePopupTrigger(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mousePressed(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mouseReleased(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.SortTableHeaderRenderer(JTable, Function&lt;Integer, ColumnImpl&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.TableHeaderUiFacadeImpl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.add(String, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clear()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clearUiColumns()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createColumn(int, Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createDefaultColumns(List&lt;Column&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createStub(Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.deleteColumn(CustomPropertyDefinition)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByID(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByViewIndex(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getField(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getModelIndex(Column)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importColumnList(ColumnList)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importData(ColumnList)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.insertColumnIntoUi(ColumnImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.renameColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.updateType(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.VscrollAdjustmentListener(TimelineChart, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.adjustmentValueChanged(AdjustmentEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.isScrollable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addAction(Action, KeyStroke)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addActionWithAccelleratorKey(GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addNewCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.applyComponentOrientation(ComponentOrientation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumnWidth(ColumnImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumns()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellEditor(Class&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellRenderer(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createDefaultEditors()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.customPropertyChange(CustomPropertyEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.deleteCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.doInit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editCellAt(int, int, EventObject)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editingStopped(ChangeEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getCellEditor(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getHorizontalScrollBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getManageColumnsAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getScrollPane()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTableHeaderUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getToolTipText(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVerticalScrollBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.initTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.insertWithLeftyScrollBar(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.isStartEditingEvent(KeyEvent, boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.newTableColumnExt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onCellSelectionChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.prepareEditor(TableCellEditor, int, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processKeyBinding(KeyStroke, KeyEvent, int, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processMouseEvent(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setNewRowAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setRowPropertiesAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setupActionMaps(GPAction...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.wrapEditor(TableCellEditor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.GPTreeTransferHandler(GPTreeTableBase, TaskManager, Supplier&lt;GanttChart&gt;, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.canImport(TransferSupport)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.createTransferable(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.getSourceActions(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.importData(TransferSupport)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentBuildNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentVersionNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.GanttChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, JComponent, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createButtonPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createSchedulePanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings(boolean, boolean, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getZoomLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isCommandLineMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isExpanded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isOnlySelectedItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setCommandLineMode(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setEndDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setExpandedResources(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setLogo(Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setOnlySelectedItem(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setRowCount(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setVisibleTasks(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setZoomLevel(ZoomState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.GanttGraphicArea(GanttProject, GanttTree2, TaskManager, ZoomManager, GPUndoManager)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.MouseSupport(ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.findTaskUnderMousePointer(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.getChartItemUnderMousePoint(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createBaselineColorOptions(ChartModelImpl, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createToggleHolidayAction(int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaseline()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaselineColorOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChart(GanttExportSettings)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartImplementation()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getImplementation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMyChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.repaint()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setBaseline(GanttPreviousState)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setPreviousStateTasks(List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttOptions(RoleManager, DocumentManager, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.characters(char[], int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.endElement(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.startElement(String, String, String, Attributes)" value="78.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(GPOptionGroup...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(Iterable&lt;GPOptionGroup&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptions(GPOptionGroup)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.correct(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.doSave(OutputStream)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getAutomatic()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getButtonShow()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getCSVOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExport3dBorders()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportComplete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportRelations()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportSettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPDirectory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPPwd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontSpec(Font)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontStyle(Font)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getIconSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getLockDAVMinutes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getOptionsFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getPluginPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getResourceColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getShowStatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getToolBarPosition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUndoNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getVersion()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWorkingDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslFo()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.initDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isLoaded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isMaximized()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.load()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.loadRoleSets(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.save()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.savePreferences(Preferences, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoleSets(TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoles(RoleSet, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setAutomatic(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setButtonShow(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setDaysOffColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setEarlierPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExport3dBorders(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportComplete(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportName(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportRelations(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPPwd(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUrl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUser(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setIconSize(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLaterPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLockDAVMinutes(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setRedline(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceOverloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceUnderloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setShowStatusBar(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setToolBarPosition(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUIConfiguration(UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUndoNumber(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWeekEndColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowPosition(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowSize(int, int, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWorkingDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslDir(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslFo(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.BaselineSaver.save(File, List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.GanttPreviousState(String, List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTasks(TaskManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTemporaryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.load()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.remove()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.saveFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.GanttPreviousStateTask(int, GanttCalendar, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.hasNested()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.isMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.GanttProject(boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newParser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newSaver()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.addMouseListenerToAllContainer(Component[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.changeWorkingDirectory(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.close()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.createToolbar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.fitBounds(GraphicsConfiguration, Rectangle)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getArea()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getBaselines()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCopyAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptionsGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getHumanResourceManager()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getPasteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourcePanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getRoleManager()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getStopEditingMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskContainment()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getToolTip(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTree()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.initOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.isModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.main(String[])" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.newProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.open(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.openStartupDocument(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.printProject()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.quitApplication()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refresh()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refreshProjectInformation()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAdded(ResourceEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAssignmentsChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourcesRemoved(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreBounds()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveAsProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setApplicationQuitCallback(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setAskForSave(boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified(boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setProjectName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setViewIndex(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.tryImportDocument(Document)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.GanttProjectBase()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.RowHeightAligner(TreeTableContainer, ChartModelBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.optionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createContentPane(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectClosed()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectCreated()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectModified(boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectOpened()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProjectUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getResourceCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getRssFeedChecker()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getSearchUi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getStatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTabs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUiFacadeImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getViewManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.removeProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showNotificationDialog(NotificationChannel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showOptionDialog(int, String, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.GanttProjectImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.TaskManagerConfigImpl(HumanResourceManager, GPCalendarCalc, GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getProjectDocumentURL()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.addProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getBaselines()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getResourceCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskContainment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.isModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.newTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.open(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.removeProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.repaintResourcePanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setProjectName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.GanttResourcePanel(GanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.addToolbarActions(ToolbarBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.clearSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.copySelection(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createPopupMenu(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createTreeTable(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.cutSelection(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveDownAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveUpAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPeople()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPopupMenuPoint(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getProjectEventListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceAssignments()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResources()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRowHeightAligner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTreeActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.handlePopupTrigger(MouseEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.nbPeople()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.newHuman(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAdded(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAssignmentsChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourcesRemoved(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.saveSelectionToClipboard(ClipboardContents, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setSelected(HumanResource, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setTaskPropertiesAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.startDefaultEditing(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.updateContextActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.GanttSplash()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(Graphics2D, String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.frameInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(String, GanttCalendar, long, TaskManagerImpl, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(TaskManagerImpl, TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.setLength(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTree2(GanttProject, TaskManager, TaskSelectionManager, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.GanttTreeDropListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragExit(DropTargetEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragOver(DropTargetDragEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.drop(DropTargetDropEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.isHighlighted(Component, ComponentAdapter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeCollapsed(TreeExpansionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeExpanded(TreeExpansionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addObjectWithExpand(Object, MutableTreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addToolbarActions(ToolbarBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.applyPreservingExpansionState(Task, Predicate&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.convertNodesListToItemList(List&lt;DefaultMutableTreeTableNode&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createDirtyfier(GanttProjectBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createPopupMenu(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createTreeTable(IGanttProject, Runnable, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.expandRefresh(TreeTableNode)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getAllTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getJTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getParentNode(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getPopupMenuActions()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRoot()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRowHeightAligner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTreeActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleNodes(VisibleNodesFilter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.handlePopupTrigger(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.init()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.initRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onTaskSelectionChanged(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setEditingTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setGraphicArea(ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelected(Task, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelectionPaths(TreePath[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.startDefaultEditing(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.GanttTreeTable(IGanttProject, UIFacade, GanttTreeTableModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.ModelListener.tableChanged(TableModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.centerViewOnSelectedCell()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.doInit()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.editSelectedTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.onProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.BeginDateComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.EndDateComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.GanttTreeTableModel(TaskManager, CustomPropertyManager, UIFacade, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnAdded(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMarginChanged(ChangeEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMoved(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnRemoved(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnSelectionChanged(ListSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnClass(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnName(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getCustomProperty(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getHierarchicalColumn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getValueAt(Object, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.isCellEditable(Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setCustomPropertyValue(Object, Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValue(Object, Object, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValueAt(Object, Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getPluginManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.registerTaskSelectionManager(TaskSelectionManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.OSXAdapter(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleAbout(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleOpenFile(ApplicationEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handlePreferences(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleQuit(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.registerMacOSXApplication(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.setupSystemProperties()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.PluginOptionsHandler(PluginPreferencesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.PluginPreferencesImpl(Preferences, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.absolutePath()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.childrenNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.createChild(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.flush()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.get(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getBoolean(String, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getByteArray(String, byte[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getDouble(String, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getFloat(String, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getInt(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getLong(String, long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.keys()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.name()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.node(String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.nodeExists(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.parent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.put(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putBoolean(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putByteArray(String, byte[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putDouble(String, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putFloat(String, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putInt(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putLong(String, long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.remove(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.removeNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.sync()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IEclipsePreferences, IPreferenceFilter[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IExportedPreferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, IPreferenceFilter[], OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, OutputStream, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.get(String, String, Preferences[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getBoolean(String, String, boolean, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getByteArray(String, String, byte[], IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDefaultLookupOrder(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDouble(String, String, double, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getFloat(String, String, float, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getInt(String, String, int, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLong(String, String, long, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLookupOrder(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getString(String, String, String, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.importPreferences(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.matches(IEclipsePreferences, IPreferenceFilter[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.readPreferences(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.setDefaultLookupOrder(String, String, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos(String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.ResourceChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.createButtonPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.ResourceDefaultColumn(Column, Class&lt;?&gt;, String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.find(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getColumnStubs()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getStub()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getValueClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.isEditable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.ResourceChartSelection(IGanttProject, GanttResourcePanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.exportIntoSystemClipboard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.lostOwnership(Clipboard, Transferable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceLoadGraphicArea(GanttProject, ZoomManager, ResourceTreeUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.ResourcechartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.getSelection()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paintChart(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paste(ChartSelection)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getImplementation()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseListener()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseMotionListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.isExpanded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.ResourceTreeImageGenerator(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.calculateDimension()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.createImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.isAssignmentVisible(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.printResources(Graphics, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.ResourceTreeTable(IGanttProject, ResourceTreeTableModel, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.buildPath(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionDown()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionUp()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.doInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.downResource()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getSelectedNodes()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getToolTipText(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isExpanded(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isVisible(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.newTableColumnExt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.onProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.swapAssignents(AssignmentNode, AssignmentNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.upResource()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.ResourceTreeTableModel(HumanResourceManager, TaskManager, CustomPropertyManager)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.SelectionKeeper(TreeSelectionModel, DefaultMutableTreeTableNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.restoreSelection()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.addResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildAssignmentsSubtree(ResourceNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildTree()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.changePeople(List&lt;HumanResource&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.decreaseCustomPropertyIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResources(HumanResource[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getAllResouces()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnClass(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnName(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getCustomProperty(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForAssigment(ResourceAssignment)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getValueAt(Object, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.isCellEditable(Object, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveDown(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveUp(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceAssignmentsChanged(Iterable&lt;HumanResource&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceChanged(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setSelectionModel(TreeSelectionModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setValueAt(Object, Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.updateResources()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.useNextIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.ShowHideColumnsDialog(UIFacade, ColumnList, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.TaskContainmentHierarchyFacadeImpl(GanttTree2)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.areUnrelated(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getContainer(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDeepNestedTasks(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDepth(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNestedTasks(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNextSibling(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getOutlinePath(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getPreviousSibling(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.hasNestedTasks(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sort(Comparator&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sortHelper(Task, Comparator&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.TaskModelModificationListener(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.TaskTreeImageGenerator(GanttTree2, UIConfiguration, Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.createImage(List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.isVisible(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paintTask(Graphics, PaintState, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.printTasks(Graphics2D, List&lt;DefaultMutableTreeNode&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.TaskTreeImageGeneratorExt(GanttTree2, UIConfiguration, Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintIcon(Graphics, ImageIcon, PaintState, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintString(Graphics, TextMetrics, String, PaintState, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintTask(Graphics, PaintState, Task)" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.TreeTableCellEditorImpl(DefaultCellEditor, JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.addCellEditorListener(CellEditorListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.cancelCellEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createOnFocusGained(JTextComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createSelectAllCommand(JTextComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createUnselectAllCommand(JTextComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.isCellEditable(EventObject)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.removeCellEditorListener(CellEditorListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.shouldSelectCell(EventObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.stopCellEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesInserted(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesRemoved(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeStructureChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.CollapseAllAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.ExpandAllAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.ExpandCollapseAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.TreeTableContainer(Pair&lt;TreeTableClass, TreeTableModelClass&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.applyPreservingExpansionState(ModelObject, Predicate&lt;ModelObject&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.collapseAll(TreePath)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.commitIfEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.expandAll(TreePath)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getDeleteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNewAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNode(ModelObject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getPropertiesAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getSelectedNodes()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isExpanded(ModelObject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isVisible(ModelObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.makeVisible(ModelObject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setArtefactActions(GPAction, GPAction, GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setExpanded(ModelObject, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode, Predicate&lt;Pair&lt;MutableTreeTableNode, MutableTreeTableNode&gt;&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode, List&lt;MutableTreeTableNode&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.createPath(TreeNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getLevel(TreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeNode, TreeNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeNode, TreeNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.removeAllChildren(MutableTreeTableNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.LafOption(UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.objectToString(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.UIFacadeImpl(JFrame, GanttStatusBar, NotificationManagerImpl, IGanttProject, UIFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOptions(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.buildMessage(Throwable)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job, IProgressMonitor, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createProgressGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.doSetLookAndFeel(GanttLookAndFeelInfo)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getAppFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getChartFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDefaultMonitor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getExceptionReport(Throwable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getFontFamilies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLogo()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getSizeLabels()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.i18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.onViewLog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.resetErrorLog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setLookAndFeel(GanttLookAndFeelInfo)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showNotificationDialog(NotificationChannel, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showOptionDialog(int, String, Action[])" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateComponentTreeUI()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateFonts()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.ArtefactAction(String, IconSize, ActiveActionProvider, Action[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionStateChanged()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactDeleteAction.ArtefactDeleteAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactNewAction.ArtefactNewAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactPropertiesAction.ArtefactPropertiesAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.BaselineDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.actionPerformed(ActionEvent)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.CalculateCriticalPathAction(TaskManager, UIConfiguration, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.isOn()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.setOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.IconSize(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.asString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.calledFromAppleScreenMenu(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createIcon(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createVoidAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getAllKeyStrokes(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getCustomIconPath()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getFontawesomeLabel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getI18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIcon(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStrokeText(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.parseKeyStroke(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.setFontAwesomeLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateAction()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateIcon(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateName()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateTooltip()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.isDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.setDefault(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.ShowChannelAction(NotificationManager, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.channelCleared()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.getLocalizedName()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationAdded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationRead(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.updateState()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.ViewToggleAction(Chart, GPViewManager, GPView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.CopyAction(GPViewManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.CutAction(GPViewManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.EditMenu(IGanttProject, UIFacade, GPViewManager, SearchUi, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getRedoAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getUndoAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, IconSize, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteExternalDocument(InputStream)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteInternalFlavor(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getLocalizedName()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoableEditHappened(UndoableEditEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.RefreshViewAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.SearchDialogAction(SearchUi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.SettingsDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getLocalizedName()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoableEditHappened(UndoableEditEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.AboutAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.HelpMenu(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.RecoverLastProjectAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.recover(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.runAction(Document)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.ViewLogAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.createMenu()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.CloudProjectActionBase(String, UIFacade, DocumentManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.showURLDialog(IGanttProject, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.ExitAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.NewProjectAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.OpenMRUDocumentAction(int, String, IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.OpenURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.openRemoteProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.PrintAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.ProjectExportAction(UIFacade, IGanttProject, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.ProjectImportAction(UIFacade, GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.ProjectMenu(GanttProject, JMenu, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getNewProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getOpenProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getPrintAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getSaveProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.ProjectPreviewAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.ProjectPropertiesAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.SaveProjectAsAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.SaveURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.saveProjectRemotely(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.AssignmentDeleteAction(AssignmentContext, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.deleteAssignments(ResourceAssignment[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager, ResourceContext, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.addStateChangedListener(ActionStateChangedListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.hasResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.ResourceActionSet(ResourceContext, AssignmentContext, GanttProject, UIFacade, ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getActions()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getAssignmentDelete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceDeleteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveDownAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveUpAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceNewAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourcePropertiesAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceSendMailAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.deleteResources(HumanResource[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.ResourceImportAction(HumanResourceManager, TaskManager, RoleManager, GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getResourcesFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.ResourceMoveDownAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.ResourceMoveUpAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.updateAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.ResourceSendMailAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.valueChanged(TreeSelectionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.ScrollTimeIntervalAction(String, int, TaskManager, ChartModel, ScrollingManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.createTimeInterval()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.ScrollToEndAction(IGanttProject, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.ScrollToSelectionAction(UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.selectionChanged(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.userInputConsumerChanged(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.ScrollToStartAction(IGanttProject, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.ScrollToTodayAction(TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.IndentTargetFunctionFactory(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.OutdentTargetFunctionFactory(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.addStateChangedListener(ActionStateChangedListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.askUserPermission(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.forwardScheduling()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTreeFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.selectionChanged(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.userInputConsumerChanged(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.askUserPermission(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.run(List&lt;Task&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.TaskIndentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.indent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, IndentApplyFxn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.TaskLinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.isEnabled(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.run(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.TaskMoveDownAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.isEnabled(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.TaskMoveEnabledPredicate(TaskManager, Function&lt;Collection&lt;Task&gt;, Function&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.apply(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.TaskMoveUpAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.isEnabled(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.updateAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.TaskUnindentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.unindent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, UnindentApplyFxn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.TaskUnlinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.isEnabled(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.ViewChartOptionsDialogAction(ChartComponentBase, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.createDialogComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.rollback()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.ViewCycleAction(GPViewManager, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.GPViewImpl(Chart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.ViewMenu(IGanttProject, GPViewManager, IntegerOption, FontOption, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.ZoomActionSet(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomInAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomOutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.ZoomInAction(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.ZoomOutAction(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.application.MainApplication.run(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, GPCalendar, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, List&lt;CalendarEvent&gt;, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.ColorEditor(UIFacade, FocusSetter)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.moveFocusToTable(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.DateCellRendererImpl(DateFormat)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.Column(Class&lt;?&gt;, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getColumnClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.TableModelImpl(List&lt;CalendarEvent&gt;, Runnable, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.delete(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValue(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValueAt(int, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isCellEditable(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isRecurring()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.setValueAt(Object, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createDateValidatorComponents(String, DateFormat...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createNonRecurringComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createRecurringComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createTableComponent(TableModelImpl, DateFormat, UIFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getEvents()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getI18NedEventType(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.recurring(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar, List&lt;CalendarEvent&gt;, TableModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.CalendarTagHandler(GPCalendarCalc, HolidayTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.GPCalendarProvider(List&lt;GPCalendar&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getCalendars()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getInstance()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendar(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendars()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl(ChartModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.paint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ChartModelBase(TaskManager, TimeUnitStack, UIConfiguration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.OptionEventDispatcher.optionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.ScrollingSessionImpl(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.finish()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.scrollTo(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.shiftOffsets(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addOptionChangeListener(GPOptionChangeListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addRenderer(SceneBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createOffsetBuilderFactory()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createScrollingSession(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.fireOptionsChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartItemWithCoordinates(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnitOffsets()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getEndDate()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getHorizontalOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getMilestones()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAnchorDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAt(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOptionEventDispatcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getPainter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getProjectConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTopLineHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVerticalOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVisibleLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.paint(Graphics)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBaseFont(FontSpec)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomTimeUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBounds(Dimension)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setChartUIConfiguration(ChartUIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHeaderHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHorizontalOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setRowHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setStartDate(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTimelineTasks(Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopTimeUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setVerticalOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setupCopy(ChartModelBase)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.ChartModelImpl(TaskManager, TimeUnitStack, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskBoundaryItem(int, int)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskProgressItem(int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getBaseline()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartItemWithCoordinates(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getGraphicPrimitive(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskContainment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getVisibleTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.isExplicitlyHidden(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setBaseline(List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setExplicitlyHiddenTasks(Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ChartModelResource(TaskManager, HumanResourceManager, TimeUnitStack, UIConfiguration, ResourceChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.ResourceLoadOption(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getVisibleResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.ChartOptionGroup(String, GPOption[], OptionEventDispatcher)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModelBase, Canvas)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.build()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getPrimitiveContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.ChartPropertiesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.addValue(Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValues(Iterable&lt;Entry&lt;String, String&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.updateValue(Entry&lt;String, String&gt;, Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartUIConfiguration(UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBaseFontSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBottomUnitGridColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartFont()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartStylesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getDayOffColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getEarlierPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderBorderColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHolidayTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor1()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor2()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getLaterPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getMargin()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPublicHolidayTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceNormalLoadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceOverloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceUnderLoadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderFont()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekEndColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekendAlphaValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWorkingTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getYOffSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isCriticalPathOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isRedlineOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setBaseFont(Font, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setHeaderHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setRowHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setYOffSet(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.ChartViewState(TimelineChart, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getCurrentZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getTopTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollTo(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.zoomChanged(ZoomEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer(int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.changePoint2(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.getDraw()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.paint(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.setDraw(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.ProjectCalendarDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.onCalendarEditCommited(ProjectCalendarOptionPageProvider)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.ResourceLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoadRenderer(ChartModelResource, ResourceChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.beforeProcessingTimeFrames()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.buildTasksLoadsRectangles(List&lt;Load&gt;, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.calculateGap(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createLoadText(Rectangle, Load)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(List&lt;Offset&gt;, Date, Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getDefaultOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.render()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoadDetails(LoadDistribution, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(List&lt;Load&gt;, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(Load, Load, List&lt;Offset&gt;, int, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.SimpleRenderedImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.copyData(WritableRaster)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getColorModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData(Rectangle)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumXTiles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumYTiles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getProperty(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSampleModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridXOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridYOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.ColouredRectanglePainter(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.paint(Rectangle)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.StyledPainterImpl(ChartUIConfiguration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Line)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Polygon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Rectangle)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Text)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(TextGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.prePaint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.setGraphics(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.TaskActivityPart(TaskActivity, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.equals(Object)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isFirst()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isLast()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.TaskInteractionHintRenderer(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.paint(Graphics2D)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.BarChartConnectorImpl(Task, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEndVector()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStartVector()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.TaskActivityChartApi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBarHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getChartStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getViewportWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getWeekendOpacityOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskRendererImpl2(ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.VerticalPartitioning(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.build(TaskContainmentHierarchyFacade)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.createTaskActivitySceneBuilder(Canvas, ChartApi, Style)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRectangleHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getTaskRectangles(Task, ChartModelImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderActivities(int, Task, List&lt;TaskActivity&gt;, OffsetList, boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderBaseline(Task, int, OffsetList)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderDependencies()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderLabels(List&lt;Polygon&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderProgressBar(List&lt;Polygon&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderTasksAboveAndBelowViewport(List&lt;Task&gt;, List&lt;Task&gt;, OffsetList)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderVisibleTasks(List&lt;Task&gt;, OffsetList)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnBounds(List&lt;TaskActivity&gt;, Date, Date)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnViewportBounds(List&lt;TaskActivity&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.LabelTextSelector(Task, Text)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.createMaxWidthLabel(TextMetrics, String, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.getLabels(TextMetrics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.TimelineLabelRendererImpl(ChartModelApi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.createTimelineLabel(int, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.getLabelLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.render()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(JXTreeTable, int, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.ChartDimensions(GanttExportSettings, GPTreeTableBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getFullWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getLogoHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTableHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTreeWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.setChartWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.ChartImageBuilder(GanttExportSettings, ChartModelBase, GPTreeTableBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.buildImage(ChartImageVisitor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.RenderedChartImage(ChartModel, BufferedImage, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getChart(int, int, int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getTile(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getWholeImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.ClipboardContents(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.build()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.copy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.cut()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIncomingDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIntraDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getOutgoingDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.isCut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.ClipboardTaskProcessor(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.canMove(Task, ClipboardContents)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAndInsert(Task, Task, Task, Map&lt;Task, Task&gt;, ClipboardContents)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAssignments(ClipboardContents, Map&lt;Task, Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyDependencies(ClipboardContents, Map&lt;Task, Task&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, Task, ClipboardContents)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsSibling(Task, ClipboardContents)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTaskCopyNameOption(StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateAssignments(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateExternalDeps(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.GanttChartController(IGanttProject, UIFacade, ChartModelImpl, ChartComponentBase, GanttTree2, ChartViewState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskEndInteraction(MouseEvent, TaskBoundaryChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginDrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginMoveTaskInteractions(MouseEvent, List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.buildImage(GanttExportSettings, ChartImageVisitor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.findTaskUnderPointer(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getChartItemUnderMousePoint(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.hideTooltip()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paintChart(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paste(ChartSelection)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.showTooltip(int, int, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.GanttChartSelection(IGanttProject, TreeTableContainer&lt;Task, GanttTreeTable, GanttTreeTableModel&gt;, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.buildClipboardContents()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.exportTasksIntoSystemClipboard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.lostOwnership(Clipboard, Transferable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.paste(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.MouseListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.handleEvent(ChartItem, MouseEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mouseClicked(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mousePressed(MouseEvent)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDragTasks(MouseEvent, Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDrawDependency(MouseEvent, ChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.MouseMotionListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.findCalendarEvent(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.mouseMoved(MouseEvent)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.CalendarChartItem(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.getDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.ChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.TaskBoundaryChartItem(Task, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.isStartBoundary()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskNotesChartItem.TaskNotesChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.TaskProgressChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem.TaskRegularAreaChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TimelineLabelChartItem.TimelineLabelChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.ChangeTaskBoundaryInteraction(Date, Task, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.doFinish(TaskMutator)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.finish(TaskMutator)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.paint(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.updateTooltip(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.ChangeTaskEndInteraction(TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.getNotesText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.ChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem, TimelineFacade, TaskChartModelFacade, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.doFinish(TaskMutator)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.paint(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.ChangeTaskProgressRuler(Task, TaskChartModelFacade)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.getProgress(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.ChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.apply(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.getNotesText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.DrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem, TimelineFacade, ChartModelFacade, UIFacade, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.finish()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.MouseInteractionBase(Date, TimelineFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getChartDateGrid()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getLengthDiff(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.MouseListenerBase(UIFacade, ChartComponentBase, AbstractChartImplementation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseEntered(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mousePressed(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseReleased(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.showPopupMenu(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.startScrollView(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.MouseMotionListenerBase(UIFacade, AbstractChartImplementation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.mouseDragged(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.MouseWheelListenerBase(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomIn()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomOut()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.isRotationUp(MouseWheelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.mouseWheelMoved(MouseWheelEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.MoveTaskInteractions(MouseEvent, List&lt;Task&gt;, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.apply(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.doFinish()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.finish()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.ScrollViewInteraction(MouseEvent, TimelineFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.apply(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.TimelineFacadeImpl(ChartModelBase, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createScrollingSession(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createTimeInterval(TimeUnit, Date, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getDateAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getEndDateAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.GPToolbar(JPanel, List&lt;TestGanttRolloverButton&gt;, int, boolean, IntegerOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.getToolbar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resizeToolbar(List&lt;? extends JComponent&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.setButtonSizeScaling(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.updateButtons()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.HighlightOnMouseOver(AbstractButton, Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseClicked(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseEntered(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.NavigationPanel(IGanttProject, TimelineChart, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.PanelBorder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.updateUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.ButtonBuilder(TestGanttRolloverButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.add()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.withAutoRepeat(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ToolbarBuilder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(TestGanttRolloverButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addComboBox(Action[], Action)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addGap()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addPanel(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addWhitespace()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.build()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.button(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBackground(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBorder(Border)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withDpiOption(IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withGapFactory(Supplier&lt;Component&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withLafOption(GPOption&lt;String&gt;, Function&lt;String, Float&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withSquareButtons()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.ZoomingPanel(UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.Item.Item(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.addItem(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.getItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.RssFeedChecker(GPTimeUnitStack, UIFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssProposalCommand()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssReadCommand()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getUiOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.markLastCheck()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.onYes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.run()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.setOptionsVersion(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.wasToday(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.addItem(RssFeed, Node, Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.compareCategory(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.getXPath(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.isApplicableToVersion(Node, String, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.parse(InputStream, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.setUserInfo(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.DocumentCreator(IGanttProject, UIFacade, ParserFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.StringOptionImpl(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addListener(DocumentMRUListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.changeWorkingDirectory(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.clearRecentDocuments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createAutosaveCleanup()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String, String, String)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createTemporaryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getAutosaveZipFs()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getFTPOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getLastAutosaveDocument(Document)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getNetworkOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getOptionGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getProxyDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getRecentDocuments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getResourceVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getTempDir()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWebDavStorageUi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectoryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.newAutosaveDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentManager.FTPOptions.FTPOptions(String, GPOption&lt;?&gt;[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentStorageUi.Components.Components(JComponent, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.DocumentsMRU(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.add(String, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.addListener(DocumentMRUListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.fireMRUListChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.iterator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.FileDocument(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canCreate(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canOverwrite()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canWrite()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getLastAccessTimestamp()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.open()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.FtpDocument(String, StringOption, StringOption)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.NetworkOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.buildPageComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.canEnableTestAction(GPOptionGroup)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.FailureState.enter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.OnlyShowWeekendsTagHandler(GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.ParsingState(SuccessState, FailureState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.enter()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.getDefaultDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.setDefaultDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.PortfolioTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.startElement(String, String, String, Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ProxyDocument(DocumentCreator, Document, IGanttProject, UIFacade, ColumnList, ColumnList, ParserFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.SuccessState.enter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFilePath()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolioImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.write()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.ReadOnlyProxyDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.decorate(JComponent, JComponent, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getSize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.setCollection(WebDavResource, List&lt;WebDavResource&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.GanttURLChooser(IGanttProject, UIFacade, ListOption&lt;WebDavServerDescriptor&gt;, WebDavUri, StringOption, StringOption, IntegerOption, ...)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.ReloadWorker(WebDavResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.doInBackground()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.done()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.readChildren(WebDavResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.addEmptyRow(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.buildUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createComponent()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createOpenDocumentUi(OkAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createSaveDocumentUi(OkAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createUsernamePasswordPanel()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.dispose()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.findSavedServer(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getLockTimeout()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPathOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getSelectedResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.onSelectionChanged(WebDavResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.reloadFilesTable()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setProgressBar(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setSelectionListener(SelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setWebDavActionsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.showError(Exception)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryApplyUrl(WebDavUri)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryEnterCollection(JXList, FilesTableModel)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.updateUsernameAndPassword()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(String, String, String, StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(WebDavResource, String, String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.acquireLock()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canRead()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canWrite()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getHTTPError(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getWebdavResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.releaseLock()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.HttpDocumentOutputStream(HttpDocument)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.Key(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory(String, String, StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.clearCache()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.createResource(WebDavUri)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getHost(WebDavUri)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getProxyDetails(StringOption)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.setCredentials(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Host, MiltonResourceFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Resource, MiltonResourceFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.assertExists()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.delete()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.exists()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getChildResources()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getHost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getInputStream()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getLockOwners()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getOptionalImpl()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getParent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getWebDavUri()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isLocked()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isWritable()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.lock(int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.unlock()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.write(byte[])" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.WebDavOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.buildPageComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getRootUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.setRootUrl(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.EnumerationOptionImpl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.objectToString(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.reload()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.ServerListOption(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.addValue(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getPersistentValue()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.loadPersistentValue(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValue(WebDavServerDescriptor)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValues(Iterable&lt;WebDavServerDescriptor&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.updateValue(WebDavServerDescriptor, WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.WebDavStorageImpl(IGanttProject, UIFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createChooser(Document)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createNoLockAction(String, GanttURLChooser, DocumentReceiver)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.findServer(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLastWebDavDocumentOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLegacyLastWebDAVDocumentOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getProxyOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getServersOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavLockTimeoutOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavReleaseLockOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.open(Document, DocumentReceiver)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.save(Document, DocumentReceiver)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildChild(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildParent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildRootUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.CommandLineExportApplication()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.export(Args)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getArguments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getCommandLineFlags()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.ConsoleUIFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showNotificationDialog(NotificationChannel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showOptionDialog(int, String, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.DeprecatedProjectExportData.DeprecatedProjectExportData(IGanttProject, String, Chart, Chart, GanttExportSettings, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFileWizardImpl(UIFacade, IGanttProject, Preferences)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFinalizationJobImpl.run(File[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getExporter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getPublishInWebOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setExporter(Exporter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setUrl(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.canFinish()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.onOkPressed()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.ExporterJob(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportRangeOptionGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportSettings()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getCommandLineKeys()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeEndOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeStartOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.run(File, ExportFinalizationJob)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.ExporterChooserPage(List&lt;Exporter&gt;, State)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.setActive(boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createCVSExportJob(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileExtensions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.proposeFileExtension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.ExporterToImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.FileTypeOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getAvailableValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.proposeFileExtension()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createImageExportJob(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileExtensions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.proposeFileExtension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.FileChooserPage(State, IGanttProject, WizardImpl, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createFileFilter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createSecondaryOptionsPanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getFileChooserTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getOptionGroups()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.loadPreferences()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedFileChange(File)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedUrlChange(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.proposeOutputFile(IGanttProject, Exporter)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(Task, int, StringBuffer)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.detach()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.loginAndChangedir(FTPOptions)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.put(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.WebPublisher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.createTransferJob(Ftp, File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.run(File[], FTPOptions)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.ExtensionBasedFileFilter(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.accept(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getExtension(File)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.matches(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.GanttXMLFileFilter.GanttXMLFileFilter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.AbstractPagesDialog(String, UIFacade, List&lt;ListItem&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem.ListItem(boolean, String, String, Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.getComponent()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.isPageVisible(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.AbstractTableAndActionsComponent(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addSelectionListener(SelectionListener&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createDefaultTableAndActions(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createIsEnabledFunction(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.fireSelectionChanged(List&lt;T&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getActionsComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getAddResourceAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getDeleteItemAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getValue(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.onSelectionChanged()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setActionOrientation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelection(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelectionMode(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ActionUtil.setupAutoRepeat(JButton, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.DateInterval(Date, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromModelDates(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromVisibleDates(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getVisibleEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateIntervalListEditor(DateIntervalModel)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.add(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.canRemove(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.format(DateInterval)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getIntervals()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getMaxIntervalLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.remove(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.update()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.updateActions()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container, Centering)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.ComboItem(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.EditableList(List&lt;T&gt;, List&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.TableAndActionsImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onAddEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onDeleteEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getValueAt(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.setValueAt(Object, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.applyValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createDefaultComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createPrototype(Object)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getActionsComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObject()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObjects()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getStringValue(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableAndActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableCellRendererComponent(DefaultTableCellRenderer, T, boolean, boolean, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.initComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.isEditable(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.reloadValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setUndefinedValueLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setupEditor(List&lt;T&gt;, JTable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.stopEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.FileChooserPageBase(WizardImpl, Preferences, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.UrlFetcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.fetch()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.onFetchComplete(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.reschedule()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatus(IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatusLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setUrl(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getDefaultFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getSelectedUrl()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.loadPreferences()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedFileChange(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedUrlChange(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.reportMalformedUrl(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setActive(boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setOptionsEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setSelectedFile(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setStatus(JLabel, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.buildComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColors()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColorsOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setRecentColors(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.GPlainDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.insertString(int, String, AttributeSet)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setPattern(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setValidCharacters(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(AbstractFormatter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setFocus()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setPattern(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setValidCharacters(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogInfo.GanttDialogInfo(Frame, int, int, String, String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.GanttDialogPerson(CustomPropertyManager, UIFacade, HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.applyChanges()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.constructDaysOffPanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.findRole(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.loadFields()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.okButtonActionPerformed()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.result()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.setVisible(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.GanttDialogProperties(GanttTask[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.show(IGanttProject, UIFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.GanttImagePanel(Image, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.setScale(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(LookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.GanttLookAndFeels()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.addLookAndFeel(GanttLookAndFeelInfo)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getDefaultInfo()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getGanttLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByClass(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInstalledLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.GanttStatusBar(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.ProgressBarDialog(IProgressMonitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.dialogInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.done()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.getLabelText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setProgress(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setSubTask(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.start(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.ProgressMonitorImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.beginTask(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.done()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.internalWorked(double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.isCanceled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setCanceled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setTaskName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.subTask(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.worked(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.createProgressMonitor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setNotificationManager(NotificationManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.GanttTabbedPane()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Component, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, String, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.getSelectedUserObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.GanttTaskPropertiesBean(GanttTask[], IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addEmptyRow(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.applySettings()" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.canBeProjectTask(Task, TaskContainmentHierarchyFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCheckBox()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCustomColumnPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructEarliestBegin(Container)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructGeneralPanel()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructNotesPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructPredecessorsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructResourcesPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getNotes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPercentComplete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getTaskName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThird()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getWebLink()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.init()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTaskOrContainsProjectTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setSelectedTaskProperties()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setThird(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.storeOriginalValues(GanttTask)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.ListAndFieldsPanel(EditableList&lt;T&gt;, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.NotificationChannel(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addNotifications(Collection&lt;NotificationItem&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getDefaultNotification()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getNormalColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getUnreadCount()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isPulsing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.saveNormalColor()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setButton(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setDefaultNotification(NotificationItem)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setPulsing(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setRead(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.NotificationComponent(NotificationChannel, AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(NotificationItem, NotificationChannel)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(String, String, HyperlinkListener, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.channelCleared()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createBackwardAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createClearAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createForwardAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createHtmlPane(String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationAdded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationRead(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.processItems()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.updateEnabled()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.NotificationItem(String, String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.isRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.setRead(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.NotificationManagerImpl(AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.addNotifications(NotificationChannel, Collection&lt;NotificationItem&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.getChannelButtons()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.hideNotification()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.setAnimationView(AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showNotification(NotificationChannel)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showPending()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.show()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.ProjectMRUMenu(IGanttProject, UIFacade, ProjectUIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.mruListChanged(Collection&lt;String&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.ProjectOpenDiagnosticImpl(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addModifiedTask(Task, Date, Date)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addReason(Task, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildEndDateChangeTable()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildStartDateChangeTable()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.info(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.showDialog()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.run(String, ShowDialogCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.setOpenLinksInBrowser(WebEngine)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiSwing.run(String, ShowDialogCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.ProjectOpenStrategy(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.adjustTasks(TaskManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.checkLegacyMilestones()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.tryPatchMilestones(IGanttProject, TaskManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step2.checkEarliestStartConstraints()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.processTasks(List&lt;Runnable&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.runUiTasks()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.close()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.getMilestonesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.openFileAsIs(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ProjectUIFacadeImpl(UIFacade, DocumentManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.afterSaveProject(IGanttProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.beforeClose()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.createProject(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ensureProjectSaved(IGanttProject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.formatWriteStatusMessage(Document, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(Document, IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(IGanttProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectAs(IGanttProject)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryLock(IGanttProject, Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTrySave(IGanttProject, Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryWrite(IGanttProject, Document)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.showNewProjectWizard(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.RecentColorsOption(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.addValue(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValue(Color)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValues(Iterable&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.updateValue(Color, Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseEntered(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Action)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.getPreferredSize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.paintComponent(Graphics)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIcon(Icon)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setScale(float)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setText(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setTextHidden(boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setupFontAwesome()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.TextFieldAndFileChooserComponent(UIFacade, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getSelectedURL()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getWorkingDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFile(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileFilter(FileFilter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileSelectionMode(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.showFileChooser()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.tryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.RedlineOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.UIConfiguration(Color, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getAppFontSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getChartFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDayOffColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getEarlierPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getLaterPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getProjectBoundariesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getRedlineOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceOverloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceUnderloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekEndColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekendAlphaRenderingOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isCriticalPathOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isRedlineOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setChartFontOption(FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setCriticalPathOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDayOffColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDpiOption(IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setEarlierPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setLaterPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setRedlineOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceOverloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceUnderloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setWeekEndColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.DatePickerEditCommiter(JXDatePicker, JFormattedTextField, DateValidator, ValueValidator&lt;Date&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.attachOnFocusLost(ActionListener)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.resetValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.tryCommit()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.aroundProjectStart(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.dateInRange(Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.GPDateCellEditor(IGanttProject, boolean, ValueValidator&lt;Date&gt;, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getActionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.stopCellEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.MultiscreenFitResult.MultiscreenFitResult(double, double, GraphicsConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.attachValidator(JTextField, ValueValidator&lt;T&gt;, GPOption&lt;T&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.autoFitColumnWidth(JTable, TableColumn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.border(JComponent, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.clearErrorLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.contentPaneBorder(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createButtonBar(JButton[], JButton[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker(DateFormat...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createHtmlPane(String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createStringDateValidator(DateValidator, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTitle(JComponent, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTooltiplessJMenu(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTopAndCenter(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.formatPathForLabel(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeLabel(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeScale(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeYShift(GPAction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getHeaderDimension(JTable, TableColumn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getUiProperty(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getValidFieldColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.initJavaFx(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.isFontawesomeSizePreferred()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.multiscreenFit(Rectangle)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorComponent(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorRenderer(Supplier&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newDateCellEditor(IGanttProject, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.pushAction(JComponent, boolean, KeyStroke, GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.registerActions(JComponent, boolean, GPAction...)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setBackgroundTree(JComponent, Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ActionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ValueValidator&lt;Date&gt;, ActionListener)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupErrorLabel(JLabel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupHighlighters(JXTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.tryParse(DateFormat, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.walkComponentTree(JComponent, Predicate&lt;JComponent&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ViewLogDialog.show(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.AboutDialog2(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtml(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createPages()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createSummaryPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createTranslationsPage()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.i18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.onOk()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.BooleanOptionAction(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.CSVSettingsPanel(UIFacade, CSVOptions)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.ExportFieldsTableModel(List&lt;BooleanOption&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getValueAt(int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.setValueAt(Object, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.applyChanges(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createResourcePropertiesTableModel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createSeparatorSettingsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskExportFieldsPanel(TableModel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskPropertiesTableModel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getCsvOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getFixed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getSeparat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getTextSeparat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.initialize()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, String[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.Item(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSelectedItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.geti18nedValues(EnumerationOption, GPOptionGroup)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.onValueChange()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.setSelectedItem(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.ExportCsvOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], GPOptionGroup[], int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], JComponent[], int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setSelected(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.updateSelectionUI(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.GanttChartOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.GeneralOptionPanel(UIFacade, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.askForApplyChanges()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.InterfaceOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.checkLocale(Locale)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getExtDir()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.init(IGanttProject, UIFacade)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.OptionPageProviderBase(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getCanonicalPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getPageID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.wrapContentComponent(JComponent, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.OptionPageProviderPanel(OptionPageProvider, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.initialize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.BooleanOptionRadioUi(BooleanOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getNoButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getYesButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.I18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getAdvancedActionTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionGroupLabelKey(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionLabelKey(GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageDescriptionKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageLabelKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageTitleKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionValueLabelKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorButtonText(ColorOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorChooserTitle(ColorOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionGroupLabel(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(GPOptionGroup, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.hasValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder(Component, LayoutApi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPage(GPOptionGroup[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPlanePage(GPOptionGroup[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanComponent(GPOptionGroup, BooleanOption)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanOptionRadioUi(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createButtonComponent(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createColorComponent(ColorOption)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createDateComponent(DateOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, Supplier&lt;EnumerationOptionComboBoxModel&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFileComponent(FileOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFontComponent(FontOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup, GPOption&lt;?&gt;...)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createLabeledComponent(GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionComponent(GPOptionGroup, GPOption&lt;?&gt;)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createRadioButtonBooleanComponent(GPOptionGroup, BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStandaloneOptionPanel(GPOption&lt;?&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStringComponent(StringOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createValidatingComponent(GPOption&lt;T&gt;, ValueValidator&lt;T&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createWaitIndicatorComponent(DefaultBooleanOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getI18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getTrailingLabel(BooleanOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getValidFieldColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.isCheckboxOption(GPOptionGroup, GPOption&lt;?&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.needsLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setI18N(I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setOptionKeyPrefix(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setUiFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.updateTextField(JTextField, DocumentListener, ChangeValueEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.ProjectBasicOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.ProjectCalendarOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.buildPageComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.moveProject(TimeDuration)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.updateMoveOptions(TimeDuration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.ProjectRolesOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.ProjectSettingsPanel(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.applyChanges(boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.ResourceChartOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.SettingsDialog2(IGanttProject, UIFacade, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getListItems(List&lt;OptionPageProvider&gt;, String, IGanttProject, UIFacade)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getPages(String, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.onOk()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int, int, Container, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, Function&lt;Integer, Integer&gt;)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(Container, int, int, int, int, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.printSizes(Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.TopPanel.create(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.WeekendsSettingsPanel(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.applyChanges(boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.initialize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model.CustomPropertyDefaultValueAdapter.createDefaultValueOption(CustomPropertyClass, CustomPropertyDefinition)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.I18N()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.formatRoleForTooltip(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getDayNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getNewProjectWizardWindowTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectDomainPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectWeekendPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRoleSetDisplayName(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipFooter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipHeader(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard.createNewProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.NewProjectWizardWindow(IGanttProject, UIFacade, I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addProjectNamePage(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addRoleSetPage(RoleSet[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addWeekendConfigurationPage(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.ProjectNamePage(IGanttProject, I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.RoleSetListModel(RoleSet[], I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.createTooltipText(RoleSet)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getCellRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.isTheOnlyEnabled(RoleSet)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.toggle(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetPage(RoleSet[], I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.CalendarOption(GPCalendar, List&lt;GPCalendar&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.objectToString(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.CheckBoxAction(GPCalendar, int, String, ButtonModel, Supplier&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendConfigurationPage(GPCalendarCalc, I18N, UIFacade)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.WeekendSchedulingOption(SchedulingEnum)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.objectToString(SchedulingEnum)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.append(List&lt;T&gt;, T...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createCalendarOption(GPCalendar)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createWeekendCheckBoxes(GPCalendar, String[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.fillCustomCalendar(List&lt;CalendarEvent&gt;, GPCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.updateBasedOnLabel(GPCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.WizardImpl(UIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPageComponent(WizardPage, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.adjustButtonState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.backPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getCurrentPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.nextPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onCancelPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePageComponent(WizardPage)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.show()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.ScrollingManagerImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.addScrollingListener(ScrollingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.removeScrollingListener(ScrollingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(TimeDuration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollTo(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.ColumnManagerPanel(CustomPropertyManager, ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.DefaultValueOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.commit()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.setValue(Boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.IsVisibleOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.findColumn(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisible(CustomPropertyDefinition, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisibleFields(ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.NameOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.PropertyClassOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.commit()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.getCustomPropertyClass(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.objectToString(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.resetValue(String, boolean, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.setUIControls(CardLayout, JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.commitCustomPropertyEdit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createComponent()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createDefaultFieldDefinitions(ColumnList, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomPropertyDefinition&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.getFieldsComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.isEditable(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setDefaultValuePanelEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setSelectedDefinition(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.createTableAndActions(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupComboBoxEditor(TableColumn, Object[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupTableUI(JXTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.CustomColumnTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getValueAt(int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.reload()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.setValueAt(Object, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnsPanel(CustomPropertyManager, UIFacade, CustomPropertyHolder, ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.DependencyTableModel(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.MyColumn(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getCaption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getTableColumn(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.isEditable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.TaskComboItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.createDependency(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.delete(int[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getValueAt(int, int)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.isCellEditable(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.setValueAt(Object, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.updateDependency(Object, int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.Column(String, Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getColumnClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.ResourcesTableModel(ResourceAssignmentCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.createAssignment(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.delete(int[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getResourcesAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getValueAt(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isCellEditable(int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.setValueAt(Object, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.updateAssignment(Object, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.TaskAllocationsPanel(Task, HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.commit()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.createCostPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.init(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpPredecessorComboColumn(TableColumn, JTable)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.TaskScheduleDatesPanel(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.adjustLength()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.changeLength(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLabel(String, BooleanOption, JComponent, GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLockAction(String, BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.fireDurationChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.insertInto(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setEnd(GanttCalendar, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setStart(GanttCalendar, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setUnpluggedClone(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setupFields(boolean, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.showPopup(List&lt;Action&gt;, JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.swapLocks(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.ViewHolder(ViewManagerImpl, GanttTabbedPane, GPView, Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.languageChanged(Event)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.selectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setVisible(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.ViewManagerImpl(IGanttProject, UIFacade, GanttTabbedPane, GPUndoManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activateNextView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activatePrevView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.createView(GPView, Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCopyAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getPasteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getProjectEventListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedArtefacts()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.toggleVisible(GPView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.updateActions()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isVisible()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.setComponent(JComponent, JComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.ContentPaneBuilder(GanttTabbedPane, GanttStatusBar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.build(Component, Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.getAnimationHost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.ZoomEvent(ZoomManager, ZoomState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.getNewZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomManager(TimeUnitStack)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getPersistentName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getTimeUnitPair()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.addZoomListener(ZoomListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomOut()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.fireZoomingChanged(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.removeZoomListener(ZoomListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.setZoomState(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomOut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.BufferProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newParser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newSaver()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.FileChooserPage(UIFacade, Importer, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createFileFilter(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createOptions(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.setFile(File)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.ImportFileWizardImpl(UIFacade, IGanttProject, GanttOptions)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.getImporters()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.ImporterBase(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getCustomPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.isReady()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(UIFacade, List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.ImporterChooserPage(List&lt;Importer&gt;, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.onSelectImporter(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.setActive(AbstractWizard)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createFileChooser(GanttOptions)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createImporter(FileFilter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.ImporterFromGanttFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.TaskFieldImpl(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getSort()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setOrder(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.add(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getField(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.importData(ColumnList)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.createBufferProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getDocument(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.importBufferProject(IGanttProject, BufferProject, UIFacade, MergeResourcesOption, ImportCalendarOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(File, IGanttProject, BufferProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.ImporterFromTxtFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.save(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.saveAssignment(TransformerHandler, ResourceAssignment)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.CSVOptions()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createResourceExportOption(ResourceDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(TaskDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getBomOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getResourceOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getSeparatedTextChars()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getTaskOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.getShortDayName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.save(IGanttProject, TransformerHandler)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttChartViewSaver.save(ColumnList, TransformerHandler)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.GanttTXTOpen(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.load(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.DefaultTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.startElement(String, String, String, Attributes)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(PrjInfos, UIConfiguration, TaskManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.TimelineTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onEndElement()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingFinished()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addParsingListener(ParsingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addTagHandler(TagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.doLoad(InputStream)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getDefaultTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getTimelineTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject, TaskTreeUIFacade, GanttResourcePanel, GanttGraphicArea, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.save(OutputStream)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveAssignments(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveCalendar(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveHistory(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveResources(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveRoles(TransformerHandler)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveTasks(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveVacations(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveViews(TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.save(List&lt;GanttPreviousState&gt;, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(GanttPreviousState, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(String, List&lt;GanttPreviousStateTask&gt;, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOption(String, GPOption&lt;?&gt;, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, GPOption&lt;?&gt;...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, Iterable&lt;GPOption&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionMap(Iterable&lt;Entry&lt;String, GPOption&lt;?&gt;&gt;&gt;, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.save(IGanttProject, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomColumnDefinitions(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomProperties(IGanttProject, HumanResource, TransformerHandler)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveRates(HumanResource, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, Boolean, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, String, AttributesImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, int, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.cdataElement(String, String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.createHandler(Result)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyComment(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyElement(String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.endElement(String, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.encodeFieldType(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.save(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTask(TransformerHandler, GanttTask, CustomPropertyManager)" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperties(TransformerHandler, CustomPropertyManager)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String, String, Map&lt;String, String&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.VacationSaver.save(IGanttProject, TransformerHandler)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.save(UIFacade, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeColumns(ColumnList, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeRecentColors(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeTimelineTasks(UIFacade, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.XmlParser(List&lt;TagHandler&gt;, List&lt;ParsingListener&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.characters(char[], int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endCDATA()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endDocument()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.parse(InputStream)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startCDATA()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(Properties)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadPath(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadResource(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadStream(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[], StringBuffer, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCharSet(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCommonCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getShortDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.setLocaleImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.Event(GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.GanttLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.applyDateFormatLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.correctLabel(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.createDateFormat(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.fireLanguageChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatDate(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatLanguageAndCountry(Locale)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatShortDate(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatText(String, Object...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatTime(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getAvailableLocales()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCharSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getComponentOrientation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCorrectedLabel(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDay(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLongDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMediumDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMonth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getRecurringDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getResourceBundle(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDayNames(Locale)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String, Locale)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.parseDate(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.removeListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setShortDateFormat(SimpleDateFormat)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption(String, Locale[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getPersistentValue()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.objectToString(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.ShortDateFormatOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.formatDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.getSelectedValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setSelectedLocale(Locale)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.appendCdata(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.clearCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.getCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isMyTag(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isTagStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.setTagStarted(boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.AllocationTagHandler(HumanResourceManager, TaskManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.findRole(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.loadAllocation(Attributes)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingFinished()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ColorValueParser.parseString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.CustomPropertiesStructure()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskPropertyID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesTagHandler(ParsingContext, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.loadProperty(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingFinished()" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.DefaultWeekTagHandler(GPCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.getShortDayName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.loadCalendar(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.DependencyTagHandler(ParsingContext, TaskManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.GanttDependStructure()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependType(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDifference(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setHardness(Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddressee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddresser(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.loadDependency(Attributes)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingFinished()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.CalendarEventAttrs(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.HolidayTagHandler(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.loadHoliday(CalendarEventAttrs)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.onCalendarLoaded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.processLastEvent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.OptionTagHandler(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onEndElement()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.addTaskWithLegacyFixedStart(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.getTasksWithLegacyFixedStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.isStackEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.peekTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.popTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.pushTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler(List&lt;GanttPreviousState&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.endElement(String, String, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.loadPreviousTask(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.ResourceTagHandler(HumanResourceManager, RoleManager, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.endElement(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.findRole(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomProperty(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomPropertyDefinition(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadRate(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadResource(Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingFinished()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(String, String, String, Attributes)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.RoleTagHandler(RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.clearRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.findRoleSet(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.loadRoles(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.TaskDisplayColumnsTagHandler(String, String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createLegacyHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createPilsenHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.loadTaskDisplay(Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.TaskPropertiesTagHandler(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.loadTaskProperty(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.TaskTagHandler(TaskManager, ParsingContext, TaskTreeUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.endElement(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.loadTask(Attributes)" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingFinished()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.VacationTagHandler(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.loadResource(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.ViewTagHandler(String, UIFacade, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.loadViewState(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getCharts()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExporters()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExtensions(String, Class&lt;T&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.GanttPrintable(RenderedImage, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.print(Graphics, PageFormat, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintManager.printChart(Chart, GanttExportSettings)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.PagePreview(int, PageFormat, Printable, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.clearCache()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMaximumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMinimumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.paintComponent(Graphics)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.setScale(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.doLayout()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMaximumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMinimumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PrintPreview(IGanttProject, UIFacade, Chart, Date, Date)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.StatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel0(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel1(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText0(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText1(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changePageOrientation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changeScale()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.createPages()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.onChangingDates()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.print()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.run(Runnable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.updateSourceImage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.AssignmentNode(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getRoleForAssigment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getStandardField(ResourceDefaultColumn)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setRoleForAssigment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setStandardField(ResourceDefaultColumn, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(String, int, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.ResourceAssignmentImpl(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addCustomProperty(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addDaysOff(GanttDaysOff)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.createAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentsChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireResourceChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomProperties()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDaysOff()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getLoadDistribution()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getMail()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getPhone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getRole()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getStandardPayRate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.removeAllAssignments()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.resetLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setCustomField(CustomPropertyDefinition, Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setId(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setMail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setStandardPayRate(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.swapAssignments(ResourceAssignment, ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.unpluggedClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withEmail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withRole(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withStandardRate(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.add(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.addView(ResourceView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.create(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.down(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireAssignmentsChanged(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireCleanup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceAdded(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceChanged(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourcesRemoved(HumanResource[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getById(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResourcesArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getValueAsString(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.importData(HumanResourceManager, HumanResourceMerger)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newHumanResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newResourceBuilder()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.save(OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.up(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceMerger.MergeResourcesOption.MergeResourcesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.Load(Date, Date, float, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.isResourceUnavailable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.LoadDistribution(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(Date, Date, float, List&lt;Load&gt;, Task)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getDaysOff()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getSeparatedTaskLoads()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getTasksLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processActivity(TaskActivity, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processAssignment(ResourceAssignment)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDayOff(GanttDaysOff)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDaysOff(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.OverwritingMerger(EnumerationOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildEmailCache(HumanResourceManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildNameCache(HumanResourceManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.findNative(HumanResource, HumanResourceManager)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(HumanResource, HumanResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(Map&lt;HumanResource, HumanResource&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.ResourceNode(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getDefaultRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getEMail()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getPhone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getStandardField(ResourceDefaultColumn)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.removeAllChildren()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setDefaultRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setEMail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setStandardField(ResourceDefaultColumn, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.toString()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.ResourceTableNode(Object, Set&lt;ResourceDefaultColumn&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.isEditable(ResourceDefaultColumn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.RoleImpl(int, String, RoleSet)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getPersistentID()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.RoleEvent(RoleManager, RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.getChangedRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.RoleManagerImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.addRoleListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.changeRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.fireRolesChanged(RoleSet)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getDefaultRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getEnabledRoles()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectLevelRoles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRole(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSet(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.importData(RoleManager)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.removeRoleListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.RolePersistentID(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.asString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleSetID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.RoleSetImpl(String, RoleManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.changeRole(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.deleteRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.findRole(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getRoles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.importData(RoleSet)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.MySearchResult.MySearchResult(HumanResource, ResourceSearchService)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.ResourceSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.search(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.SearchDialog(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.createSearchBox(SearchCallback)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getResultViewDataModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.gotoSelection()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.processResults(List&lt;SearchResult&lt;?&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.runSearch(String, SearchCallback)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.SearchResult(String, String, String, SearchObjectType, SearchService&lt;?, SearchObjectType&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getLabel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getOrigin()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSnippet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.SearchServiceBase(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.init(IGanttProject, TreeUiFacade&lt;SO&gt;, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.isNotEmptyAndContains(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.select(List&lt;SR&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.PopupSearchCallback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.accept(List&lt;SearchResult&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.dismissPopup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.onSelect(JPopupMenu, List&lt;SearchResult&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.runSearch()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.setSearchBox(JTextField)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.SearchUiImpl(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.getSearchField()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.requestFocus()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.MySearchResult.MySearchResult(Task, TaskSearchService)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.TaskSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.search(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.JPaintCombo(Paint[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.getSelectedPaint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.PaintCellRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.BlankLineNode.BlankLineNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(String, CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColumn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getOldName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.CustomColumn(CustomColumnsManager, String, CustomPropertyClass, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.canSetPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getAttributes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValueAsString()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getPropertyClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getTypeAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValueAsString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setId(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setPropertyClass(CustomPropertyClass)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.CustomColumnsManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addListener(CustomPropertyListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addNewCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.deleteDefinition(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getCustomPropertyDefinition(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getDefinitions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.importData(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.CustomColumnsStorage(CustomColumnsManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumnsListener(CustomPropertyListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.changeLanguage(GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.createId()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.findByName(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireCustomColumnsChange(CustomPropertyEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnByID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColums()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.importData(CustomColumnsStorage)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.removeCustomColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomColumnsValues(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.addCustomProperty(CustomPropertyDefinition, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.clone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomProperties()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomPropertyDefinition(CustomPropertyManager, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValue(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValueAsString(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.hasOwnValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.removeCustomColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.setValue(CustomPropertyDefinition, Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getColName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.CustomPropertyListenerImpl(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.removeCustomPropertyValues(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(HumanResource, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(ResourceAssignment, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(ResourceAssignmentCollectionImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(TaskImpl, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.ResourceAssignmentImpl(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.addAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.commit()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.deleteAssignment(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.ResourceAssignmentStub(HumanResource, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.auxAddAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.copy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.deleteAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getCoordinator()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.importData(ResourceAssignmentCollection)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.removeAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.Priority(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.fromPersistentValue(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getI18nKey()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getIconPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getLowerString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPriority(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.TaskActivitiesAlgorithm(GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.recalculateActivities(Task, List&lt;TaskActivity&gt;, Date, Date)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getCalculatedValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getManualValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.isCalculated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setCalculated(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(Cost)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setOldValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorException.MutatorException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.addNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.cachePrecomputedShift(Task, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.commit()" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getActivities()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getCompletionPercentage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getPrecomputedShift(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getThird()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCritical(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setDuration(TimeDuration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setExpand(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setIsolationLevel(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setStart(GanttCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setThird(GanttCalendar, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(TimeDuration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(float)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.enable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.fireEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.enable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.fireEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, TaskImpl, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.addNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.adjustNestedTasks()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.applyThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.areEventsEnabled()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.calculateEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.colorDefined()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutatorFixingDuration()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.enableEvents(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getActivities()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignmentCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAttachments()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getColor()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCompletionPercentage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCustomValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependant()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDisplayEnd()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDuration()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getEnd()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getExpand()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNestedTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNotes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getShape()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThird()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isCritical()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isLegacyMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isMilestone()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isProjectTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isUnplugged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities(GPCalendarCalc, Task, List&lt;TaskActivity&gt;, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCompletionPercentage(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCritical(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setExpand(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setMilestone(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setName(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDate(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDateConstraint(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shapeDefined()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(TimeDuration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(float)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shiftDate(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDurationValue(TimeDuration)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.unpluggedClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.Access.newInstance(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCompletion(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCost(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withEndDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withExpansionState(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withId(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withLegacyMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withParent(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrevSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrototype(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeFactoryImpl.createFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.addDeepNestedTasks(Task, ArrayList&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.areUnrelated(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.compareDocumentOrder(Task, Task)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getContainer(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDeepNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDepth(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNextSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getPreviousSibling(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTasksInDocumentOrder()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.hasNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.sort(Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskManagerImpl(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.TaskMap(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.removeTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.setDirty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.size()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.TaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.addTaskListener(TaskListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.areEventsEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createConstraint(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(String)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.deleteTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.emptyClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.encode(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findClosestWorkingTime(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findTimeUnit(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyAdded(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyChanged(TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyRemoved(TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskAdded(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskModelReset()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskProgressChanged(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskPropertiesChanged(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskRemoved(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskScheduleChanged(Task, GanttCalendar, GanttCalendar)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAlgorithmCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAndIncrementId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendarListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyGraph()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getHierarchyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getMaxId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectCompletion()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectLength()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCopyNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(Task, Task, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;, Map&lt;Task, Task&gt;)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isRegistered(TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isZeroMilestones()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.newTaskBuilder()" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.onTaskMoved(TaskImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.processCriticalPath(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.registerTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.resetCriticalPath()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setEventsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setZeroMilestones(Boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.shift(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.taskCommitYesNo(TaskMutator, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.tasksToActivities(Task[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.TaskNode(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.applyThirdDateConstraint()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getTaskInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getUserObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.TaskProperties(TimeUnitStack)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatCoordinators(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatDate(GanttCalendar, StringBuffer)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String, boolean)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatResources(Collection&lt;ResourceAssignment&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.getProperty(Task, String)" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependencies(Iterable&lt;String&gt;, Task, Function&lt;Integer, Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependency(String, Task, Function&lt;Integer, Task&gt;, Map&lt;Integer, Supplier&lt;TaskDependency&gt;&gt;)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.TaskSelectionManager(Supplier&lt;TaskManager&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addSelectionListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireSelectionChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireUserInputConsumerChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getEarliestStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getLatestEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getSelectedTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.isTaskSelected(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeSelectionListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setSelectedTasks(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setUserInputConsumer(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskView.getTimelineTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskSchedule(Task, TaskContainmentHierarchyFacade)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskScheduleBottomUp(Set&lt;Task&gt;, TaskContainmentHierarchyFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.run(Collection&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.adjustNestedTasks(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.getDiagnostic()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setDiagnostic(Diagnostic)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.AlgorithmCollection(TaskManagerImpl, FindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm, ChartBoundsAlgorithm, CriticalPathAlgorithm, ...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getAdjustTaskBoundsAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getCriticalPathAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getExtendUncompletedTaskAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getFindPossibleDependeesAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getProjectBoundsAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskCompletionPercentageAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskScheduleAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getScheduler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getShiftTaskTreeAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmException.AlgorithmException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CostAlgorithmImpl.getCalculatedCost(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.CriticalPathAlgorithmImpl(TaskManager, GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Date, Date, Date, Date, int, Set&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Set&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.collectDependees(Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.isCritical()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.toString()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.Processor(Map&lt;Task, Node&gt;, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.calculateLatestDates(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.enqueueDependees(LinkedList&lt;Node&gt;, Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Map&lt;Task, Node&gt;, Node)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Node, Node, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.hasMoreInput()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.processQueue()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.createTaskNodeMap(Task[], Node)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.getCriticalTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;, Logger)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.ExplicitDependencyImpl(TaskDependency, Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.refresh()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(GraphData, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.addToLevel(int, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.checkLayerValidity()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.createEmptyLayers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.getLayer(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.removeFromLevel(int, Node)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.rollback()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.withTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.ImplicitInheritedDependency(DependencyEdge, Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.ImplicitSubSuperTaskDependency(Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.Node(Task, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addIncoming(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addOutgoing(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.demoteLayer(GraphData)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getIncoming()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getOutgoing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.promoteLayer(GraphData)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeIncoming(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeOutgoing(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.revertData()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(Node, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(NodeData)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addIncoming(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addOutgoing(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getIncoming()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getOutgoing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeIncoming(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeOutgoing(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.revert()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.setLevel(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.isRunning()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.rollback()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.start()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.touch(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addEdge(DependencyEdge)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addInheritedDependencies(DependencyEdge, Node)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.buildLoop(Map&lt;Task, DependencyEdge&gt;, DependencyEdge)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.checkLayerValidity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.findExplicitDependency(TaskDependency, Node, Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.fireGraphChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLayer(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLogger()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getNode(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.isAncestor(Node, Node)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.move(Task, Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeDependency(TaskDependency)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeEdge(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeImplicitDependencies(Node)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeTask(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.rollbackTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.setLogger(Logger)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.startTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.ExtendUncompletedTaskAlgorithm(DependencyGraph, WeekendCalendarImpl, SchedulerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.couldRun()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.defineEndOfNextWorkingDay(WeekendCalendarImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.doRun()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.extendUncompletedTasks(Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.modifyTaskEndToNextWorkingEnd(Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskAfterNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskBeforeNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskStartsBeforeNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.FindPossibleDependeesAlgorithmImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.processTask(Task[], Task, ArrayList&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.Result.Result(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.getBounds(Collection&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentage(Task, TaskContainmentHierarchyFacade)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentageBottomUp(Task, TaskContainmentHierarchyFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.RecalculateTaskScheduleAlgorithm(AdjustTaskBoundsAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(TaskDependency[], int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilConstraints(TaskDependency)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilDependencies()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isRunning()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.modifyTaskStart(Task, GanttCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Collection&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.traverse(TaskContainmentHierarchyFacade, Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(Collection&lt;T&gt;, Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(T[], Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.SchedulerImpl(DependencyGraph, Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.doRun()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.getTaskModelListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskEnd(Task, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskStart(Task, Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.schedule(Node)" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.ShiftTaskTreeAlgorithm(TaskManagerImpl, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(List&lt;Task&gt;, TimeDuration, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(Task, TimeDuration, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.shiftTask(Task, TimeDuration, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortByStartDate(List&lt;TaskActivity&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortTasksByStartDate(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.LoopDetector(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey.RangeSearchFromKey(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchToKey.RangeSearchToKey(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, TaskDependencyImpl)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.compareTo(SearchKey)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.equals(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.Hardness(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.getIdentifier()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.parse(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.MutationInfo(TaskDependency, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.commit()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.deleteDependency(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.TaskDependencyCollectionImpl(Factory, EventDispatcher)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency, Set&lt;Task&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.addDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.canCreateDependency(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.delete(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.deleteDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.doClear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.fireChanged(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDefaultHardness()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependant(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependee(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.DefaultCollision(GanttCalendar, int, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getAcceptableStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getVariation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.isActive()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromReadablePersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getReadablePersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint, Hardness, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getActivityBinding()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependant()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDifference()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEndVector()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getHardness()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStartVector()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setConstraint(TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setDifference(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setHardness(Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.TaskDependencySliceAsDependant(Task, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.TaskDependencySliceAsDependee(Task, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.TaskDependencySliceImpl(Task, TaskDependencyCollection, Function&lt;Task, TaskDependencySlice&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependency(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependencyCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.hasLinks(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.ConstraintImpl(Type, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.addDelay(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.clone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.setTaskDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(Date, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(GanttCalendar, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.DependencyActivityBindingImpl(TaskActivity, TaskActivity, Date[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getAlignedBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependantActivity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependeeActivity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.FinishFinishConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getBackwardCollision(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getCollision()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.FinishStartConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getBackwardCollision(Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getCollision()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.StartFinishConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getBackwardCollision(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getCollision()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.StartStartConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getBackwardCollision(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getCollision()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.TaskDependencyEvent(TaskDependencyCollection, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.TaskHierarchyEvent(Object, Task, Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getNewContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getOldContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskModelReset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.TaskPropertyEvent(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.TaskScheduleEvent(Task, GanttCalendar, GanttCalendar, GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewFinishDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldFinishDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.TaskHierarchyItem(Task, TaskHierarchyItem)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.addNestedItem(TaskHierarchyItem, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getContainerItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNestedItems()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNextSiblingItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.createItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.getRootItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.UndoManagerImpl(IGanttProject, ParserFactory, DocumentManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.addUndoableEditListener(GPUndoListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canRedo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canUndo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.die()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoOrRedoHappened()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoableEditHappened(UndoableEditImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getRedoPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getUndoPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.redo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.removeUndoableEditListener(GPUndoListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undoableEdit(String, Runnable)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.UndoableEditImpl(String, Runnable, UndoManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canRedo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canUndo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.getPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.redo()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.restoreDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.saveFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undo()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undoRedoExceptionHandler(Exception)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.connectStringArray(String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayURL(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithDesktopApi(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithJnlpApi(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.getPlatform()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.replaceToken(String[], String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[], String[])" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.determineColor(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.getColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.DateUtils.parseDate(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendExtension(File, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendSuffixBeforeExtension(File, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getExtension(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getFilenameWithoutExtension(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.replaceExtension(File, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MathUtil.signum(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.append(StringBuilder, int, int, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.toString(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.PropertiesUtil.loadProperties(Properties, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getDisplayNames(Object[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getTruncatedString(String, int, FontMetrics)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.isEmptyOrNull(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padLeft(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padRight(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.Pair(F, S)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.create(F, S)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.first()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.second()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.AbstractFileChooserPage(UIFacade, Preferences, String, FileFilter, GPOptionGroup[], boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.UrlFetcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.fetch()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.onFetchComplete(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.reschedule()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatus(IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatusLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setUrl(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileStatus(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getSelectedUrl()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getWizard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.loadPreferences()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.onSelectedFileChange(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.reportMalformedUrl(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setActive(AbstractWizard)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setOptionsEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.showStatus(JLabel, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.AbstractWizard(UIFacade, String, WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.addPageComponent(WizardPage)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.adjustButtonState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.backPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getCurrentPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.isExistingNextPage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.nextPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setNextPage(WizardPage)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setOkAction(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.wrapePageComponent(String, JComponent)" value="1.0"/>
		<VALUE measured="objectToString(CheckOption)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.check(StringTokenizer, String)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.getCalendar(String)" value="19.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDate(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoHours(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoMillis(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.main(String[])" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.parse(String)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(Date)" value="2.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(String)" value="2.0"/>
		<VALUE measured="org.w3c.util.DateParser.twoDigit(int)" value="2.0"/>
		<VALUE measured="org.w3c.util.InvalidDateException.InvalidDateException(String)" value="1.0"/>
		<VALUE measured="paint(Rectangle)" value="9.0"/>
		<VALUE measured="run()" value="1.0"/>
		<VALUE measured="setValue(Date)" value="1.0"/>
		<VALUE measured="setValue(Double)" value="1.0"/>
		<VALUE measured="sort(Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="stringToObject(String)" value="1.0"/>
		<VALUE measured="taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskModelReset()" value="1.0"/>
		<VALUE measured="taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="toString()" value="1.0"/>
	</METRIC>
	<METRIC category="Method" name="Cyclomatic complexity" abbreviation="v(G)">
		<VALUE measured="accept(File)" value="1.0"/>
		<VALUE measured="actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="apply(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="apply(Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="apply(MutableTreeTableNode)" value="2.0"/>
		<VALUE measured="apply(Object)" value="1.0"/>
		<VALUE measured="apply(Polygon)" value="1.0"/>
		<VALUE measured="apply(ResourceAssignment)" value="1.0"/>
		<VALUE measured="apply(Task)" value="1.0"/>
		<VALUE measured="apply(Task, HumanResourceManager)" value="1.0"/>
		<VALUE measured="apply(Type)" value="1.0"/>
		<VALUE measured="applyComponentOrientation(ComponentOrientation)" value="1.0"/>
		<VALUE measured="areUnrelated(Task, Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.copy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.findClosestWorkingTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getBaseCalendarID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getDayMask(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getEvent(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getOnlyShowWeekends()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getPublicHolidays()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.getWeekDayType(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setBaseCalendarID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setOnlyShowWeekends(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl.setWeekDayType(int, DayType)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.CalendarActivityImpl(Date, Date, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.isWorkingTime()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl.toString()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.CalendarEvent(Date, boolean, Type, String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.equals(Object)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getTitle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.getType()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.newEvent(Date, boolean, Type, String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.addListener(GPCalendarListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.doFindClosest(Date, DateFrameable, MoveDirection, DayType, Date)" value="11.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.findClosest(Date, TimeUnit, MoveDirection, DayType, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.fireCalendarChanged()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getActivities(Date, TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getID()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.setName(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase.shiftDate(Date, TimeDuration)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.GanttDaysOff(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.create(GanttDaysOff)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.equals(GanttDaysOff)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getFinish()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(Date)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOff(GanttCalendar)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.isADayOffInWeek(Date)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.ImportCalendarOption(Values)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.Values.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.WeekendCalendarImpl(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.copy()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.findClosestWorkingTime(Date)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, Date)" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivities(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesBackward(Date, TimeUnit, long)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getActivitiesForward(Date, TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getBaseCalendarID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getDayMask(Date)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getEvent(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getOnlyShowWeekends()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getPublicHolidays()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getRecurringDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekDayType(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.getWeekendDaysCount()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.importCalendar(GPCalendar, ImportCalendarOption)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isPublicHoliDay(Date)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.isWeekend(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.reset()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setBaseCalendarID(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setOnlyShowWeekends(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setPublicHolidays(Collection&lt;CalendarEvent&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl.setWeekDayType(int, DayType)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.ForwardTimeWalker(GPCalendarCalc, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.getTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker.walk(Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.WorkingUnitCounter(GPCalendarCalc, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.getNonWorkingTime()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.isMoving()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processNonWorkingTime(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.processWorkingTime(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter.run(Date, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.Arrow(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Canvas(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.Label(Text, String, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label.setVisible(boolean)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.Line(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getArrow()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getFinishY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.getStartY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line.setArrow(Arrow)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.Polygon(int...)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getMiddleY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getPointsY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getRightX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getTopY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.Rectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.getBackgroundPaint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle.setBackgroundPaint(Paint)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.addStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getBackgroundColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getForegroundColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getModelObject()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getOpacity()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.getStyles()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.hasStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.isVisible()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setBackgroundColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setForegroundColor(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setModelObject(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setOpacity(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setStyle(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape.setVisible(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, String, SpatialIndex&lt;Text&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.Text(int, int, TextSelector, SpatialIndex&lt;Text&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.createLabel(String, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getFont()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getHAlignment()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLabels(TextMetrics)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getMaxLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getTextSelector()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.getVAlignment()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.index(Label)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setAlignment(HAlignment, VAlignment)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setFont(Font)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setMaxLength(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.setSelector(TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.TextGroup(int, int, int, String...)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.addText(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getBottomY(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getColor(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getFont(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLeftX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLine(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getLineCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.getTotalHeight(FontChooser, List&lt;Integer&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup.setFonts(FontChooser)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.bind(Shape, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.clear()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createDetachedRectangle(int, int, int, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLayers(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createLine(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createPolygon(int...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createRectangle(int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createText(int, int, TextSelector)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.createTextGroup(int, int, int, String...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayer(int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getLayers()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.getPrimitive(int, int, int, int)" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.newLayer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.paint(Painter)" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.setOffset(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.Rect(T, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.get(int, int, int, int)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.put(T, int, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.values()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.FontChooser(Properties, TextMetrics, Supplier&lt;Font&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.decreaseBaseFontSize()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getFont(String)" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginBottom(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getMarginTop(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser.getTextHeight(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.Offset(TimeUnit, Date, Date, Date, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.createFullyClosed(TimeUnit, Date, Date, Date, int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.debugPrint(List&lt;Offset&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.equals(Object)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getDayMask()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetAnchor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetPixels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getOffsetUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.getStartPixels()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.shift(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.Factory()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.preBuild()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withAtomicUnitWidth(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withCalendar(GPCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withEndOffset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withOffsetStepFunction(Function&lt;TimeUnit, Float&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withRightMargin(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withStartDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withViewportStartDate(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory.withWeekendDecreaseFactor(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.FactoryImpl.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.OffsetBuilderImpl(Factory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.calculateNextStep(OffsetStep, TimeUnit, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructBottomOffsets(List&lt;Offset&gt;, int)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, List&lt;Offset&gt;, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructOffsets(List&lt;Offset&gt;, OffsetList)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.constructTopOffsets(TimeUnit, List&lt;Offset&gt;, List&lt;Offset&gt;, int, int)" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getBottomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getChartWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getConcreteUnit(TimeUnit, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getDefaultUnitWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getOffsetStep(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.getTopUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.clear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getEndPx()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.getStartPx()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.setStartPx(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList.shift(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByEndDate.compare(Date, int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByPixels.compare(Integer, int, List&lt;Offset&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByStartDate.compare(Date, int, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.findOffset(Type, ComparatorBy&lt;Type&gt;, int, int, List&lt;Offset&gt;)" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.getBounds(Date, Date, List&lt;Offset&gt;)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupDateByPixels(int, List&lt;Offset&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetBy(Date, List&lt;Offset&gt;, ComparatorBy&lt;Date&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByEndDate(Date, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.lookupOffsetByStartDate(Date, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.OffsetManager(OffsetBuilderFactory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.alignOffsets(OffsetList)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.constructOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getAtomUnitOffsets()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getBottomUnitOffsets()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.getTopUnitOffsets()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager.reset()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.AlphaRenderingOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.getValueAsFloat()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption.updateIndex()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.LineRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.renderLine(Line)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.PolygonRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.render(Polygon)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.RectangleRenderer(Properties)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.render(Rectangle)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorderEdge(Graphics2D, Border, int, int, int, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.renderBorders(Graphics2D, Borders, int, int, int, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(ShapePaint, Color, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[])" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.ShapePaint(int, int, int[], Color, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.createTexture(int, int, int[], Color, Color)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.equals(Object)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getArray()" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getBackground()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getForeground()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.getarray()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint.toString()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.BackgroundImage(Paint, Image)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.getPaint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage.parse(String)" value="11.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.Border(Color, BasicStroke)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getColor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.getStroke()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border.parse(String)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Border, Border, Border, Border)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.Borders(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getBottom()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getLeft()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getRight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.getTop()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.isHomogeneous()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders.withColor(Color)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.Color(Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.get()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color.parse(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.Padding(Collection&lt;Integer&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getBottom()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getLeft()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getRight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getTop()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getX()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.getY()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding.parse(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Style(Properties, String)" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundColor(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundImage()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBackgroundPaint(Rectangle)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getBorder(Shape)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getForegroundColor(Shape)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getOpacity(Shape)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getPadding()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getStyle(Properties, String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.getVisibility(Shape)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.parseStroke(String[])" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.State(FontRenderContext, Font)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.equals(Object)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.TextLengthCalculatorImpl(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getState()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(Font, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextHeight(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(Graphics2D, String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.getTextLength(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.TextPainter(Properties, Supplier&lt;Font&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(Text)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(TextGroup)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paint(int, int, HAlignment, VAlignment, Text, Label, Style)" value="11.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.paintTextLine(TextGroup, int)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter.setGraphics(Graphics2D)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.AbstractSceneBuilder(Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getCanvas()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.getHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.reset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder.setHeight(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.BottomUnitSceneBuilder(Canvas, InputApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.build()" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.getLineTopPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderLabel(TextGroup, int, Date, Offset, TimeFormatter)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder.renderScaleMark(Offset, Offset)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.DayGridSceneBuilder(InputApi, Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.applyRectangleStyle(Rectangle, Offset)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.build()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineBottomPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.getLineTopPosition()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.isProjectBoundariesOptionOn()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderLine(Date, String, int, ComparatorBy&lt;Date&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDay(int, Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder.renderNonWorkingDayColumns()" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.TimelineSceneBuilder(InputApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.getTimelineContainer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderBottomUnits()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderTopUnits()" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.renderUnderlay()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder.reset(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.Result.Result(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.getBounds(Iterable&lt;BarChartActivity&lt;?&gt;&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Connector(Vector, Vector, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.Vector(Point, Dimension)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getHProjection()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.getPoint(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.reaches(Point)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getEnd()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStart()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.getStyleName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.DependencySceneBuilder(Canvas, Canvas, TaskApi&lt;T, D&gt;, ChartApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.build()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.drawDependencies(Collection&lt;Connector&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData()" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder.prepareDependencyDrawData(D, List&lt;Connector&gt;)" value="16.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.Style.Style(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.StyleApplier(TaskApi&lt;T, A&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.applyStyle(Shape)" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier.setTask(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.TaskActivitySceneBuilder(TaskApi&lt;T, A&gt;, ChartApi, Canvas, TaskLabelSceneBuilder&lt;T&gt;, Style)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getBoundingRectangle(int, BarChartActivity&lt;T&gt;, List&lt;Offset&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRectangleHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.getRowHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityEarlierThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processActivityLaterThanViewport(int, BarChartActivity&lt;T&gt;, List&lt;Polygon&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.processRegularActivity(int, A, OffsetList, List&lt;Polygon&gt;)" value="15.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.renderActivities(int, List&lt;A&gt;, OffsetList)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.TaskLabelSceneBuilder(TaskApi&lt;T&gt;, InputApi, Canvas)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.calculateRowHeight()" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createDownSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createLeftSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createRightSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.createUpSideText(Polygon)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getFontHeight()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getPrimitiveContainer()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.getTaskLabel(T, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyDown()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isOnlyUp()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextDown()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.isTextUp()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.processText(int, int, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.renderLabels(List&lt;Polygon&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder.stripVerticalLabelSpace(Rectangle)" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.CachingTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(Offset)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.format(TimeUnit, Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getCachedText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.getTextCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter.format(Offset)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.MonthTextFormatter(LocaleApi, String, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.initFormats(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.QuarterTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.TimeFormatters(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.getFormatter(TimeUnit, Position)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters.setLocaleApi(LocaleApi)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.TimeUnitText(String, String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getFitCount(Label[], int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.getLabels(int, TextMetrics)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.WeekTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createBottomText()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.createTopText()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.getTextCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter.setLocale(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.YearTextFormatter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter.createTimeUnitText(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.TaskDefaultColumn(Column, Class&lt;?&gt;, String, Predicate&lt;? extends Object&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.find(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getColumnStubs()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getName()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getNameKey()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getSortComparator()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getStub()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.getValueClass()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.isEditable(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setIsEditablePredicate(Predicate&lt;T&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setLocaleApi(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.setSortComparator(Comparator&lt;?&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.ChangeValueEvent(Object, Object, Object, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getNewValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getOldValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.getTriggerID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.determineColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.getColor(Color)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util.isValidColor(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.DefaultBooleanOption(String, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.getValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.isChecked()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption.toggle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.DefaultColorOption(String, Color)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.DefaultDateOption(String, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.DefaultDoubleOption(String, Double)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.DefaultEnumerationOption(String, T[])" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getAvailableValues()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.getSelectedValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.objectToString(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.reloadValues(List&lt;T&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.setSelectedValue(T)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption.stringToObject(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFileOption.DefaultFileOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.DefaultFontOption(String, FontSpec, List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getFontFamilies()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.getSizeLabels()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.DefaultIntegerOption(String, Integer)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.DefaultMoneyOption(String, BigDecimal)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.DefaultStringOption(String, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.FontSpec(String, Size)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.Size(float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size.getFactor()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.asString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.equals(Object)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getFamily()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.getSize()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.GPAbstractOption(String, T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.I18N.setI18N(I18N)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.Entry(ChangeValueListener, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry.compareTo(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.add(ChangeValueListener, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.fire(ChangeValueEvent)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addChangeValueListener(ChangeValueListener, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.addPropertyChangeListener(PropertyChangeListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.commit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.fireChangeValueEvent(ChangeValueEvent)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getInitialValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getPropertyChangeSupport()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.hasUi()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.i18n(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isChanged()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isScreened()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.isWritable()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.lock()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.removePropertyChangeListener(PropertyChangeListener)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.resetValue(T, boolean, Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.rollback()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setHasUi(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setScreened(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setValue(T, Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.setWritable(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.GPOptionGroup(String, GPOption...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.commit()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.copyFrom(GPOptionGroup)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getI18Nkey(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOption(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.isTitled()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.lock()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.rollback()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setI18Nkey(String, String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup.setTitled(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(String, Throwable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException.ValidationException(Throwable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.ColumnStub(String, String, boolean, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getID()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getOrder()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getSort()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.getWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.isVisible()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setOrder(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setVisible(boolean)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.setWidth(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.Immutable.fromList(List&lt;Column&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.createGanttCalendar(int, int, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.newCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory.setLocaleApi(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(Date, LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.GanttCalendar(int, int, int, LocaleApi)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.clone()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.compareTo(GanttCalendar)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.equals(GanttCalendar)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDate()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDay()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getDisplayValue()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getMonth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.getYear()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.module(int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.parseXMLDate(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar.toXMLString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.TimeDurationImpl(TimeUnit, long)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.equals(Object)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getLength(TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.getValue()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.reverse()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.setLength(TimeUnit, long)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl.translate(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.TimeUnitDateFrameableImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.ParameterizedTimeUnitImpl(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.equals(Object)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getAtomCount(TimeUnit)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomCount()" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getDirectAtomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.isConstructedFrom(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.TimeUnitFunctionOfDateImpl(String, TimeUnitGraph, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.createTimeUnit(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.getAtomCount(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(Composition, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.Composition(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition.getAtomCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createAtomTimeUnit(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createDateFrameableTimeUnit(String, TimeUnit, int, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnit(String, TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.createTimeUnitFunctionOfDate(String, TimeUnit, DateFrameable)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.getComposition(TimeUnitImpl, TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.registerTimeUnit(TimeUnit, int)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.TimeUnitImpl(String, TimeUnitGraph, TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.equals(Object)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getAtomCount(TimeUnit)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getDirectAtomUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.hashCode()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.isConstructedFrom(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.TimeUnitPair(TimeUnit, TimeUnit, TimeUnitStack, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getDefaultUnitWidth()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair.getTopTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitStack.Util.findCommonUnit(TimeUnit, TimeUnit)" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.FramerImpl(int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.adjustRight(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.clearFields(Calendar)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl.jumpLeft(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.GPTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createDuration(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.encode(TimeUnit)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.findTimeUnit(String)" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDateFormats()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getDefaultTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeFormat()" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.getTimeUnitPairs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isDay(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isHour(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.isWeek(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack.parseDuration(String)" value="22.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.GregorianTimeUnitStack()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.createDuration(TimeUnit, int)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.encode(TimeUnit)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.findTimeUnit(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDateFormats()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getDefaultTimeUnit()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getName()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeFormat()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.getTimeUnitPairs()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack.parseDuration(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.DefaultCalendarFactory.newCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl()" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.WeekFramerImpl(ICalendarFactory)" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustLeft(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.adjustRight(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.jumpLeft(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(IGanttProject, CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.GanttCSVExport(TaskManager, HumanResourceManager, RoleManager, CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.buildAssignmentSpec(Task)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getAssignments(Task)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getName(Task)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.getWebLink(GanttTask)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.i18n(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.save(OutputStream)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeCustomPropertyValues(CSVPrinter, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomProperty&gt;)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResourceHeaders(CSVPrinter)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeResources(CSVPrinter)" value="14.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTaskHeaders(CSVPrinter)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport.writeTasks(CSVPrinter)" value="22.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(File, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, RecordGroup...)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.GanttCSVOpen(Supplier&lt;Reader&gt;, TaskManager, HumanResourceManager, RoleManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createCustomProperties(Collection&lt;String&gt;, CustomPropertyManager)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createResourceRecordGroup(HumanResourceManager, RoleManager)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.createTaskRecordGroup(TaskManager, HumanResourceManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.doLoad(CSVParser, int, int)" value="11.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getFieldNames(Enum...)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.getSkippedLineCount()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.isEmpty(CSVRecord)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.load()" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen.setOptions(CSVOptions)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.ImporterFromCsvFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile.run()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.RecordGroup(String, Set&lt;String&gt;, Set&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(Level, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.addError(List&lt;Pair&lt;Level, String&gt;&gt;, Level, String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.doProcess(CSVRecord)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getCustomFields()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getErrorOutput()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getHeader()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.getOrNull(CSVRecord, String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.hasMandatoryFields(CSVRecord)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.isHeader(CSVRecord)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.postProcess()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setErrorOutput(List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.ResourceFields(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceRecords(HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.doProcess(CSVRecord)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.AssignmentColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl.apply(Task, HumanResourceManager)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.ResourceColumnSpecImpl(String, List&lt;Pair&lt;Level, String&gt;&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.apply(Task, HumanResourceManager)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl.getIndexByName(HumanResourceManager)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.TaskFields(String)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields.toString()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskRecords(TaskManager, HumanResourceManager, TimeUnitStack)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.doProcess(CSVRecord)" value="23.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseAssignmentSpec(CSVRecord)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.parseDateOrError(String)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.postProcess()" value="12.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.setHeader(List&lt;String&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter.main(String[])" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getComponent()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getEvents()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.getTitle()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setActive(AbstractWizard)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setEvents(List&lt;CalendarEvent&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage.setFile(File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.IcsFileImporter()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getCustomPage()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.isReady()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.readEvents(File)" value="11.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.run()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.setFile(File)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(CustomPropertyManager, SortedSet&lt;S&gt;, Class&lt;T&gt;)" value="12.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(HumanResourceManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping.buildMapping(TaskManager)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.ExporterToMsProjectFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createExportJob(File)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.createProjectWriter()" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileExtensions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSecondaryOptions()" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.getSelectedFormatExtension()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile.proposeFileExtension()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.ImporterFromMsProjectFile()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.findChangedDates(Map&lt;GanttTask, Date&gt;, Map&lt;Task, Task&gt;, List&lt;Pair&lt;Level, String&gt;&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getOptions()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile.run()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.LocaleOption()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.getSelectedLocale()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption.setSelectedLocale(Locale)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.ProjectFileExporter(IGanttProject)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertConstraint(TaskDependency)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertFinishTime(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertLag(TaskDependency)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertPriority(Task)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertStartTime(Date)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertTaskId(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.convertValue(CustomProperty)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.copyHours(ProjectCalendarHours, ProjectCalendarHours)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportAssignments(Map&lt;Integer, Task&gt;, Map&lt;Integer, Resource&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomFieldTypes(Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportCustomProperties(CustomPropertyHolder, Map&lt;CustomPropertyDefinition, FieldType&gt;, CustomPropertySetter)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDaysOff(HumanResource, Resource)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportDependencies(Map&lt;Integer, Task&gt;)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(GPCalendar, ProjectCalendar)" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportHolidays(ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResource(HumanResource, Map&lt;Integer, Resource&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportResources(Map&lt;Integer, Resource&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTask(Task, Task, int, int, Map&lt;Integer, Task&gt;, Map&lt;CustomPropertyDefinition, FieldType&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportTasks(Map&lt;Integer, Task&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.exportWeekends(ProjectCalendar)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getActualAndRemainingDuration(Task, double)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getMaxTaskID()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getResourceManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.isWorkingDay(int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter.run()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, ColumnList, File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.ProjectFileImporter(IGanttProject, TaskTreeUIFacade, File)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertConstraint(Relation)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataType(FieldType)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertDataValue(FieldType, Object)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertPriority(Priority)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.convertStartTime(Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createPatchedStream(File)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.createReader(File)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.debugTransformation()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.findDurationFunction(Task, StringBuilder)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.foreignId(Task)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getDurations(Date, Date)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getErrors()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getNativeCalendar()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getOriginalStartDates()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.getTaskManager()" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomColumn(String)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.hideCustomProperties()" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCalendar(ProjectFile)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomFields(Task, GanttTask)" value="9.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importCustomProperties(Resource, HumanResource)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDailyHoliday(ProjectCalendarException, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDayType(ProjectCalendar, Day, int)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDaysOff(Resource, HumanResource)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importDependencies(ProjectFile, Map&lt;Integer, GanttTask&gt;)" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, Date, Optional&lt;String&gt;, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(Date, int, Optional&lt;String&gt;, HolidayAdder)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importHolidays(ProjectCalendarException, HolidayAdder)" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResourceAssignments(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;Integer, HumanResource&gt;)" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importResources(ProjectFile, Map&lt;Integer, HumanResource&gt;)" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTask(ProjectFile, Task, Task, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="17.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importTasks(ProjectFile, Map&lt;Integer, GanttTask&gt;, Map&lt;GanttTask, Date&gt;)" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importWeekends(ProjectCalendar)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.importYearlyHoliday(ProjectCalendarException, HolidayAdder)" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.isCustomField(FieldType)" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.run()" value="9.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter.setPatchMspdi(boolean)" value="1.0"/>
		<VALUE measured="breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="breadthFirstSearch(Task, boolean)" value="1.0"/>
		<VALUE measured="cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="clearOrdering()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.buildDeb(File, File, File)" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.endFileEntry(OutputStream, long)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.main(String[])" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(String, int)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.padd(long, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb.startFileEntry(OutputStream, String, long, long)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Changelog()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Format.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFile()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getFormat()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.getTargetFilename()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.isDebian()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setDebian(boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFile(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.setFormat(Format)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.addText(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtended()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getExtendedFormatted()" value="7.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.getSynopsis()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description.setSynopsis(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setEmail(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.setName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer.toString()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Priority.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.Section()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setDebian(String)" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setEpoch(int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.setUpstream(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version.toString()" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.add(TarFileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addChangelog(Changelog)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addConfFiles(TarFileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addDescription(Description)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addFileToTar(Tar, File, String, String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addMaintainer(Maintainer)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.addVersion(Version)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createDataFile()" value="8.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createMasterControlFile()" value="9.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.createTempFolder()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFileCheck(File)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolder(File)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.deleteFolderCheck(File)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.execute()" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileMd5(File)" value="6.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.getFileNames(FileSet)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.gzip(File, File, int, byte)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.normalizeTargetFolder(TarFileSet)" value="8.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelog(Changelog)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.processChangelogs()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.sanitize(String, String)" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.scanData()" value="13.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setArchitecture(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConfig(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setConflicts(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDebFilenameProperty(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setDepends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setEnhances(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setHomepage(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setMaintainer(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPackage(String)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostinst(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPostrm(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreDepends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPreinst(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPrerm(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setPriority(Priority)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setProvides(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setRecommends(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setReplaces(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSection(Section)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setSuggests(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTemplates(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setToDir(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setTriggers(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.setVersion(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.writeControlFile(File, long)" value="13.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Comment.Comment()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.GenericName.GenericName()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Icon.Icon()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.LocalizedEntry(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.getValue()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setCountry(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setEncoding(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setLang(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setModifier(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.setValue(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry.toString()" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Name.Name()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Type.getValues()" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addComment(Comment)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addGenericName(GenericName)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addIcon(Icon)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.addName(Name)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.execute()" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.init()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setCategories(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setComment(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setExec(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setGenericName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setIcon(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setMimeType(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setName(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNoDisplay(boolean)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setNotShowIn(String)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setOnlyShowIn(String)" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setPath(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTerminal(boolean)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setToFile(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setTryExec(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setType(Type)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.setUrl(String)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateCategories(String)" value="15.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.validateKeys()" value="13.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.GZipOutputStream(OutputStream, int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.close()" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.finish()" value="7.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.setFileSystem(byte)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.write(byte[], int, int)" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeHeader()" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeInt(int, byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeShort(int, byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream.writeTrailer(byte[], int)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(File)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(OutputStream, boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.UnixPrintWriter(Writer, boolean)" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter.println()" value="1.0"/>
		<VALUE measured="commit()" value="1.0"/>
		<VALUE measured="commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="compare(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="compare(Locale, Locale)" value="1.0"/>
		<VALUE measured="compare(String, String)" value="6.0"/>
		<VALUE measured="compare(Task, Task)" value="1.0"/>
		<VALUE measured="compare(TaskActivity, TaskActivity)" value="6.0"/>
		<VALUE measured="compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="contains(Task)" value="1.0"/>
		<VALUE measured="createAtomUnitBuilder()" value="2.0"/>
		<VALUE measured="createTopAndBottomUnitBuilder()" value="1.0"/>
		<VALUE measured="dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.FeaturesSetup(GanttProject, ChartPanel)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.askToRunExtendAlg()" value="4.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupButton()" value="2.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupEvents()" value="4.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupGui(ChartPanel)" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupSliders()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.setupTitle()" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.syncSliders()" value="3.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup.updateSliders()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.TaskChange()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.fire()" value="2.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.onCalendarChange()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectClosed()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectCreated()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectModified()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectOpened()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.projectSaved()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.reset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.setListener(ChangeListener)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskModelReset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskModelReset()" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.MyEntry(Component, Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getKey()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.getValue()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry.setValue(Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getComponent()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.getSlider(String)" value="2.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, Slider)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.newSlider(String, float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.removeSlider(String)" value="2.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.SimpleSlider(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.formatProgress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.getComponent()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.progress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.round(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.setProgress(float)" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.set_slide_progress()" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider.text()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.Statistics(TaskManager)" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.calcParameters()" value="4.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getCompletedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getDelayedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getTotalTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics.getUncompletedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.Feature2Tests()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.calcFiveDaysAgo()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.genTaskNumber()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testCompleted()" value="3.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testDelayed()" value="3.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests.testUncompleted()" value="3.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.MockingManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addOneDay(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.addTaskListener(TaskListener)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.clear()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createCompletedTask(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createConstraint(Type)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createLength(long)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(Date)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.createTask(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.deleteTask(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.emptyClone()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.encode(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getAlgorithmCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendar()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCalendarListener()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyGraph()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectCompletion()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectLength()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectListener()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getProjectStart()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getRootTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTask(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCopyNamePrefixOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskCount()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.getTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.isZeroMilestones()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.newTaskBuilder()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.processCriticalPath(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.registerTask(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.setZeroMilestones(Boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.shift(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager.taskCommitYesNo(TaskMutator, String, String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.MockingTask(GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.addNotes(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.applyThirdDateConstraint()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutator()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.createMutatorFixingDuration()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.delete()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getActivities()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignmentCollection()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAssignments()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getAttachments()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getColor()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCost()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getCustomValues()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependencies()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependant()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDependenciesAsDependee()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDisplayEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getDuration()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getEnd()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getExpand()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getManager()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getName()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNestedTasks()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getNotes()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getPriority()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getShape()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getStart()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getSupertask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskID()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getTaskInfo()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThird()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isCritical()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isMilestone()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isProjectTask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.isSupertask()" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.move(Task, int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setColor(Color)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setCritical(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setExpand(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setName(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setNotes(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setPriority(Priority)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDate(GanttCalendar)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setThirdDateConstraint(int)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.setWebLink(String)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.shift(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.translateDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask.unpluggedClone()" value="1.0"/>
		<VALUE measured="format(Offset)" value="1.0"/>
		<VALUE measured="format(TimeUnit, Date)" value="1.0"/>
		<VALUE measured="get()" value="1.0"/>
		<VALUE measured="getColor(Task)" value="1.0"/>
		<VALUE measured="getContainer(Task)" value="1.0"/>
		<VALUE measured="getDeepNestedTasks(Task)" value="1.0"/>
		<VALUE measured="getDepth(Task)" value="1.0"/>
		<VALUE measured="getDescription()" value="1.0"/>
		<VALUE measured="getDirectoryName()" value="1.0"/>
		<VALUE measured="getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="getNextSibling(Task)" value="1.0"/>
		<VALUE measured="getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="getPassword()" value="1.0"/>
		<VALUE measured="getPreviousSibling(Task)" value="1.0"/>
		<VALUE measured="getRootTask()" value="1.0"/>
		<VALUE measured="getServerName()" value="1.0"/>
		<VALUE measured="getShapePaint(Task)" value="2.0"/>
		<VALUE measured="getSizeLabels()" value="1.0"/>
		<VALUE measured="getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="getTextCount()" value="1.0"/>
		<VALUE measured="getUserName()" value="1.0"/>
		<VALUE measured="hasNestedTasks(Task)" value="1.0"/>
		<VALUE measured="hasNotes(Task)" value="1.0"/>
		<VALUE measured="hyperlinkUpdate(HyperlinkEvent)" value="2.0"/>
		<VALUE measured="i18n(String)" value="1.0"/>
		<VALUE measured="isCriticalTask(Task)" value="2.0"/>
		<VALUE measured="isDeletable()" value="1.0"/>
		<VALUE measured="isEmpty()" value="1.0"/>
		<VALUE measured="isFirst(TaskActivity)" value="1.0"/>
		<VALUE measured="isHighlighted(Component, ComponentAdapter)" value="1.0"/>
		<VALUE measured="isLast(TaskActivity)" value="1.0"/>
		<VALUE measured="isMilestone(Task)" value="1.0"/>
		<VALUE measured="isProjectTask(Task)" value="1.0"/>
		<VALUE measured="isVoid(TaskActivity)" value="1.0"/>
		<VALUE measured="layout(JPanel, int)" value="2.0"/>
		<VALUE measured="logDependencyLoop(String, String)" value="1.0"/>
		<VALUE measured="move(Task, Task)" value="1.0"/>
		<VALUE measured="move(Task, Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.AbstractChartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.isDeletable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startCopyClipboardTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl.startMoveClipboardTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.installUI(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.paint(Graphics, JComponent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi.processMouseMotionEvent(MouseEvent, JLayer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addRenderer(ChartRendererBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.addSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.beginScrollViewInteraction(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.createMouseHoverLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.finishInteraction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.fireSelectionChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getActiveInteraction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getAdapter(Class)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getHeaderHeight(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getRenderedImage(GanttExportSettings)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getStyle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.init(IGanttProject, IntegerOption, FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.paste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.removeSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scheduleTask(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setActiveInteraction(MouseInteraction)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setCursor(Cursor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setDimensions(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setStartOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTimelineHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.CalendarEventAction(GPCalendar, Date, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addException(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.addHoliday(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeException(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction.removeHoliday(GPCalendar, Date, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.ChartComponentBase(IGanttProject, UIFacade, ZoomManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addRenderer(ChartRendererBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.addSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.buildImage(GanttExportSettings, ChartImageVisitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getAdapter(Class)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getJComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getOptionsDialogAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getRenderedImage(GanttExportSettings)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getStyle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.init(IGanttProject, IntegerOption, FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.initMouseListeners()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.paste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.removeSelectionListener(ChartSelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setBottomUnitWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDefaultCursor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setDimensions(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setStartOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTimelineHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setTopUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.ChartTabContentPanel(IGanttProject, UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addChartPanel(Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.addTableResizeListeners(Component, Component)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.alignTopPanelHeights(JComponent, JComponent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createChartPanels()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.createContentComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getLeftPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getRightPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.setDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel.updateTimelineHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.CustomPropertyClass(String, String, Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.fromJavaClass(Class&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getDisplayName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.getJavaClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.decodeTypeAndDefaultValue(String, String)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder.encodeFieldType(Class&lt;?&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.DefaultCustomPropertyDefinition(String, String, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.canSetPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getAttributes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getDefaultValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getPropertyClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.getTypeAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.hashCode()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setDefaultValueAsString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition.setPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.isMacOs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration.setup(GanttProject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter.isCommited()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogBuilder(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.DialogImpl(JDialog, JFrame, NotificationManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.center(Centering)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.hide()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.layout()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.setNotificationOwner(JButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.NotificationViewImpl(JDialog, JButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.close()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.isVisible()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.setComponent(JComponent, JComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl.showBalloon()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.createDialog(Component, Action[], String, NotificationManager)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.ErrorNotifier(UIFacadeImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.add(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.FacadeInvalidator(TreeModel, List&lt;RowHeightAligner&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.isValid()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.projectOpened()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesInserted(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeNodesRemoved(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator.treeStructureChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.debug(Logger, String, Object...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.getLogger(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.log(Throwable)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logSystemInformation()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.logToLogger(Throwable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readConfiguration(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.readLog()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setLogFile(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger.setUIFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.GPTransferable(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createDocumentFlavor()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.createTextFlavor()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferData(DataFlavor)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.getTransferDataFlavors()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable.isDataFlavorSupported(DataFlavor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.ColumnImpl(JXTreeTable, TableColumnExt, Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getHeaderFitDimension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getSort()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getStub()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableColumnExt()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setOrder(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setVisible(boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.GPTreeTableBase(IGanttProject, UIFacade, CustomPropertyManager, DefaultTreeTableModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.HeaderMouseListener(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.createPopupActions(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.handlePopupTrigger(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mousePressed(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener.mouseReleased(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.SortTableHeaderRenderer(JTable, Function&lt;Integer, ColumnImpl&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.TableHeaderUiFacadeImpl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.add(String, int, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clear()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.clearUiColumns()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createColumn(int, Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createDefaultColumns(List&lt;Column&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.createStub(Column)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.deleteColumn(CustomPropertyDefinition)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByID(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.findColumnByViewIndex(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getField(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getModelIndex(Column)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importColumnList(ColumnList)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.importData(ColumnList)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.insertColumnIntoUi(ColumnImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.renameColumn(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl.updateType(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.VscrollAdjustmentListener(TimelineChart, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.adjustmentValueChanged(AdjustmentEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.isScrollable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addAction(Action, KeyStroke)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addActionWithAccelleratorKey(GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.addNewCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.applyComponentOrientation(ComponentOrientation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumnWidth(ColumnImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.autoFitColumns()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellEditor(Class&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createCellRenderer(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.createDefaultEditors()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.customPropertyChange(CustomPropertyEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.deleteCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.doInit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editCellAt(int, int, EventObject)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.editingStopped(ChangeEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getCellEditor(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getHorizontalScrollBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getManageColumnsAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getScrollPane()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTableHeaderUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getToolTipText(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVerticalScrollBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.initTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.insertWithLeftyScrollBar(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.isStartEditingEvent(KeyEvent, boolean)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.newTableColumnExt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onCellSelectionChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.onProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.prepareEditor(TableCellEditor, int, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processKeyBinding(KeyStroke, KeyEvent, int, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.processMouseEvent(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setNewRowAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setRowPropertiesAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.setupActionMaps(GPAction...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.wrapEditor(TableCellEditor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.GPTreeTransferHandler(GPTreeTableBase, TaskManager, Supplier&lt;GanttChart&gt;, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.canImport(TransferSupport)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.createTransferable(JComponent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.getSourceActions(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler.importData(TransferSupport)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentBuildNumber()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion.getCurrentVersionNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.GanttChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, JComponent, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createButtonPanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.createSchedulePanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.GanttExportSettings(boolean, boolean, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.getZoomLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isCommandLineMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isExpanded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.isOnlySelectedItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setCommandLineMode(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setEndDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setExpandedResources(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setLogo(Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setOnlySelectedItem(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setRowCount(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setVisibleTasks(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings.setZoomLevel(ZoomState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.GanttGraphicArea(GanttProject, GanttTree2, TaskManager, ZoomManager, GPUndoManager)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.MouseSupport(ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.findTaskUnderMousePointer(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport.getChartItemUnderMousePoint(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createBaselineColorOptions(ChartModelImpl, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.createToggleHolidayAction(int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.customPropertyChange(CustomPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaseline()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getBaselineColorOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChart(GanttExportSettings)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartImplementation()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getImplementation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getMyChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTaskLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.repaint()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setBaseline(GanttPreviousState)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.setPreviousStateTasks(List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttOptions(RoleManager, DocumentManager, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.characters(char[], int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.endElement(String, String, String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser.startElement(String, String, String, Attributes)" value="89.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(GPOptionGroup...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptionGroups(Iterable&lt;GPOptionGroup&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.addOptions(GPOptionGroup)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.correct(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.doSave(OutputStream)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getAutomatic()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getButtonShow()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getCSVOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExport3dBorders()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportComplete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportRelations()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getExportSettings()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPDirectory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPPwd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFTPUser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontSpec(Font)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getFontStyle(Font)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getIconSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getLockDAVMinutes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getOptionsFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getPluginPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getResourceColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getShowStatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getToolBarPosition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUIConfiguration()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getUndoNumber()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getVersion()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getWorkingDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getXslFo()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.getY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.initDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isLoaded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.isMaximized()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.load()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.loadRoleSets(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.save()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.savePreferences(Preferences, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoleSets(TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.saveRoles(RoleSet, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setAutomatic(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setButtonShow(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setDaysOffColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setEarlierPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExport3dBorders(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportComplete(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportName(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setExportRelations(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPPwd(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUrl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setFTPUser(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setIconSize(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLaterPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setLockDAVMinutes(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setRedline(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceOverloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setResourceUnderloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setShowStatusBar(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setToolBarPosition(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUIConfiguration(UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setUndoNumber(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWeekEndColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowPosition(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWindowSize(int, int, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setWorkingDirectory(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslDir(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.setXslFo(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.BaselineSaver.save(File, List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.GanttPreviousState(String, List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTasks(TaskManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.createTemporaryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.load()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.remove()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.saveFile()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.GanttPreviousStateTask(int, GanttCalendar, int, boolean, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.hasNested()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask.isMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.GanttProject(boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newParser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl.newSaver()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.addMouseListenerToAllContainer(Component[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.changeWorkingDirectory(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.close()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.createToolbar()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.fitBounds(GraphicsConfiguration, Rectangle)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getArea()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getBaselines()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCopyAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getCutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getGanttOptionsGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getHumanResourceManager()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getParserFactory()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getPasteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourcePanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getRoleManager()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getStopEditingMouseListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskContainment()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getToolTip(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getTree()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getViewIndex()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.initOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.isModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.main(String[])" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.newProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.open(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.openStartupDocument(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.printProject()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.quitApplication()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refresh()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.refreshProjectInformation()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAdded(ResourceEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceAssignmentsChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourceChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.resourcesRemoved(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreBounds()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.restoreOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveAsProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.saveProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setApplicationQuitCallback(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setAskForSave(boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setModified(boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setProjectName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setViewIndex(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.tryImportDocument(Document)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.GanttProjectBase()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.RowHeightAligner(TreeTableContainer, ChartModelBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner.optionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.addProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createContentPane(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectClosed()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectCreated()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectModified(boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.fireProjectOpened()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getProjectUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getResourceCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getRssFeedChecker()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getSearchUi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getStatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTabs()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUiFacadeImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getViewManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.removeProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showNotificationDialog(NotificationChannel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showOptionDialog(int, String, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.DefaultTaskColorOption(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.GanttProjectImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.TaskManagerConfigImpl(HumanResourceManager, GPCalendarCalc, GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getProjectDocumentURL()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.addProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getBaselines()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getResourceCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskContainment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.isModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.newTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.open(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.removeProjectEventListener(ProjectEventListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.repaintResourcePanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setModified(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setProjectName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.GanttResourcePanel(GanttProject, UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.addToolbarActions(ToolbarBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.clearSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.copySelection(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createPopupMenu(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.createTreeTable(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.cutSelection(ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveDownAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getMoveUpAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPeople()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getPopupMenuPoint(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getProjectEventListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceAssignments()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResourceTreeTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getResources()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getRowHeightAligner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getTreeActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.handlePopupTrigger(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.init()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.nbPeople()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.newHuman(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAdded(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceAssignmentsChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourceChanged(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.resourcesRemoved(ResourceEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.saveSelectionToClipboard(ClipboardContents, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setSelected(HumanResource, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.setTaskPropertiesAction(GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.startDefaultEditing(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel.updateContextActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.GanttSplash()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.drawTextWithShadow(Graphics2D, String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash.frameInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(String, GanttCalendar, long, TaskManagerImpl, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.GanttTask(TaskManagerImpl, TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask.setLength(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTree2(GanttProject, TaskManager, TaskSelectionManager, UIFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.GanttTreeDropListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragExit(DropTargetEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.dragOver(DropTargetDragEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.drop(DropTargetDropEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener.isHighlighted(Component, ComponentAdapter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeCollapsed(TreeExpansionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener.treeExpanded(TreeExpansionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addObjectWithExpand(Object, MutableTreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.addToolbarActions(ToolbarBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.applyPreservingExpansionState(Task, Predicate&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.clearTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.convertNodesListToItemList(List&lt;DefaultMutableTreeTableNode&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createDirtyfier(GanttProjectBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createPopupMenu(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.createTreeTable(IGanttProject, Runnable, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.expandRefresh(TreeTableNode)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getAllTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getJTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getParentNode(DefaultMutableTreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getPopupMenuActions()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRoot()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getRowHeightAligner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getTreeActions()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.getVisibleNodes(VisibleNodesFilter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.handlePopupTrigger(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.init()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.initRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.onTaskSelectionChanged(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setEditingTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setGraphicArea(ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelected(Task, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.setSelectionPaths(TreePath[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.startDefaultEditing(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.GanttTreeTable(IGanttProject, UIFacade, GanttTreeTableModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.ModelListener.tableChanged(TableModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.centerViewOnSelectedCell()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.doInit()" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.editSelectedTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.onProjectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.BeginDateComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.EndDateComparator.compare(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.GanttTreeTableModel(TaskManager, CustomPropertyManager, UIFacade, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnAdded(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMarginChanged(ChangeEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnMoved(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnRemoved(TableColumnModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.columnSelectionChanged(ListSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnClass(int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getColumnName(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getCustomProperty(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getHierarchicalColumn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.getValueAt(Object, int)" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.isCellEditable(Object, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setCustomPropertyValue(Object, Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValue(Object, Object, int)" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.setValueAt(Object, Object, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getPluginManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator.registerTaskSelectionManager(TaskSelectionManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.OSXAdapter(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleAbout(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleOpenFile(ApplicationEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handlePreferences(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.handleQuit(ApplicationEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.registerMacOSXApplication(GanttProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter.setupSystemProperties()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.PluginOptionsHandler(PluginPreferencesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.PluginPreferencesImpl(Preferences, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.absolutePath()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.childrenNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.createChild(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.flush()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.get(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getBoolean(String, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getByteArray(String, byte[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getDouble(String, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getFloat(String, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getInt(String, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.getLong(String, long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.keys()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.name()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.node(String)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.nodeExists(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.parent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.put(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putBoolean(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putByteArray(String, byte[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putDouble(String, double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putFloat(String, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putInt(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.putLong(String, long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.remove(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.removeNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl.sync()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IEclipsePreferences, IPreferenceFilter[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.applyPreferences(IExportedPreferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, IPreferenceFilter[], OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.exportPreferences(IEclipsePreferences, OutputStream, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.get(String, String, Preferences[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getBoolean(String, String, boolean, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getByteArray(String, String, byte[], IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDefaultLookupOrder(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getDouble(String, String, double, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getFloat(String, String, float, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getInt(String, String, int, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLong(String, String, long, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getLookupOrder(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getRootNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.getString(String, String, String, IScopeContext[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.importPreferences(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.matches(IEclipsePreferences, IPreferenceFilter[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.readPreferences(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl.setDefaultLookupOrder(String, String, String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.PrjInfos(String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setOrganization(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.ResourceChartTabContentPanel(IGanttProject, UIFacade, TreeTableContainer, Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.createButtonPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getChartComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.ResourceDefaultColumn(Column, Class&lt;?&gt;, String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.find(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getColumnStubs()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getStub()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.getValueClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn.isEditable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.ResourceChartSelection(IGanttProject, GanttResourcePanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.cancelClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.commitClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.exportIntoSystemClipboard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.lostOwnership(Clipboard, Transferable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceLoadGraphicArea(GanttProject, ZoomManager, ResourceTreeUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.ResourcechartImplementation(IGanttProject, UIFacade, ChartModelBase, ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.buildImage(GanttExportSettings, ChartImageVisitor)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.getSelection()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paintChart(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation.paste(ChartSelection)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getImplementation()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseListener()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getMouseMotionListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.isExpanded(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.ResourceTreeImageGenerator(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.calculateDimension()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.createImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.isAssignmentVisible(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator.printResources(Graphics, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.ResourceTreeTable(IGanttProject, ResourceTreeTableModel, UIFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.buildPath(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionDown()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.canMoveSelectionUp()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.doInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.downResource()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getDefaultColumns()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getSelectedNodes()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.getToolTipText(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isExpanded(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.isVisible(DefaultMutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.newTableColumnExt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.onProjectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.swapAssignents(AssignmentNode, AssignmentNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable.upResource()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.ResourceTreeTableModel(HumanResourceManager, TaskManager, CustomPropertyManager)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.SelectionKeeper(TreeSelectionModel, DefaultMutableTreeTableNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper.restoreSelection()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.addResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildAssignmentsSubtree(ResourceNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.buildTree()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.changePeople(List&lt;HumanResource&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.decreaseCustomPropertyIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.deleteResources(HumanResource[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getAllResouces()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnClass(int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getColumnName(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getCustomProperty(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForAssigment(ResourceAssignment)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getNodeForResource(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.getValueAt(Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.isCellEditable(Object, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveDown(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.moveUp(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceAssignmentsChanged(Iterable&lt;HumanResource&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.resourceChanged(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setSelectionModel(TreeSelectionModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.setValueAt(Object, Object, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.updateResources()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.useNextIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.ShowHideColumnsDialog(UIFacade, ColumnList, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.TaskContainmentHierarchyFacadeImpl(GanttTree2)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.areUnrelated(Task, Task)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.breadthFirstSearch(Task, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.compareDocumentOrder(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getContainer(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDeepNestedTasks(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getDepth(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNestedTasks(Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getNextSibling(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getOutlinePath(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getPreviousSibling(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskIndex(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.getTasksInDocumentOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.hasNestedTasks(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.move(Task, Task, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sort(Comparator&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.sortHelper(Task, Comparator&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.TaskModelModificationListener(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.TaskTreeImageGenerator(GanttTree2, UIConfiguration, Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.createImage(List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.isVisible(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.paintTask(Graphics, PaintState, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.printTasks(Graphics2D, List&lt;DefaultMutableTreeNode&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.TaskTreeImageGeneratorExt(GanttTree2, UIConfiguration, Image)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.calculateDimension(List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paint(Image, Dimension, List&lt;DefaultMutableTreeNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintIcon(Graphics, ImageIcon, PaintState, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintString(Graphics, TextMetrics, String, PaintState, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt.paintTask(Graphics, PaintState, Task)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.TreeTableCellEditorImpl(DefaultCellEditor, JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.addCellEditorListener(CellEditorListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.cancelCellEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createOnFocusGained(JTextComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createSelectAllCommand(JTextComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.createUnselectAllCommand(JTextComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.isCellEditable(EventObject)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.removeCellEditorListener(CellEditorListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.shouldSelectCell(EventObject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl.stopCellEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesInserted(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeNodesRemoved(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater.treeStructureChanged(TreeModelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.CollapseAllAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.ExpandAllAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.ExpandCollapseAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.TreeTableContainer(Pair&lt;TreeTableClass, TreeTableModelClass&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.applyPreservingExpansionState(ModelObject, Predicate&lt;ModelObject&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.collapseAll(TreePath)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.commitIfEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.expandAll(TreePath)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getDeleteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNewAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getNode(ModelObject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getPropertiesAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getSelectedNodes()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getTreeTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isExpanded(ModelObject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.isVisible(ModelObject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.makeVisible(ModelObject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.onSelectionChanged(List&lt;DefaultMutableTreeTableNode&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setArtefactActions(GPAction, GPAction, GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.setExpanded(ModelObject, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.stopEditing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.breadthFirstSearch(MutableTreeTableNode, Predicate&lt;Pair&lt;MutableTreeTableNode, MutableTreeTableNode&gt;&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.collectSubtree(MutableTreeTableNode, List&lt;MutableTreeTableNode&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.createPath(TreeNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getLevel(TreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeNode, TreeNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getNextSibling(TreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeNode, TreeNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.getPrevSibling(TreeTableNode)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil.removeAllChildren(MutableTreeTableNode)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.LafOption(UIFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption.objectToString(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.UIFacadeImpl(JFrame, GanttStatusBar, NotificationManagerImpl, IGanttProject, UIFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.addOptions(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.buildMessage(Throwable)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createMonitor(Job, IProgressMonitor, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.createProgressGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.doSetLookAndFeel(GanttLookAndFeelInfo)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getAppFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getChartFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDefaultMonitor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getExceptionReport(Throwable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getFontFamilies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLogo()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getSizeLabels()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.i18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.onViewLog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.resetErrorLog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setLookAndFeel(GanttLookAndFeelInfo)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showConfirmationDialog(String, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showNotificationDialog(NotificationChannel, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showOptionDialog(int, String, Action[])" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.showYesNoConfirmationDialog(String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateComponentTreeUI()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.updateFonts()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.ArtefactAction(String, IconSize, ActiveActionProvider, Action[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.actionStateChanged()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactDeleteAction.ArtefactDeleteAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactNewAction.ArtefactNewAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactPropertiesAction.ArtefactPropertiesAction(ActiveActionProvider, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.BaselineDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction.actionPerformed(ActionEvent)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.CalculateCriticalPathAction(TaskManager, UIConfiguration, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getID()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.getIconFilePrefix()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.isOn()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction.setOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.CancelAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.GPAction(String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.IconSize(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize.asString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.calledFromAppleScreenMenu(ActionEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createIcon(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.createVoidAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getAllKeyStrokes(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getCustomIconPath()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getFontawesomeLabel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getI18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIcon(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStroke(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getKeyStrokeText(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedDescription()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.parseKeyStroke(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.setFontAwesomeLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateAction()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateIcon(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateName()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.updateTooltip()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.OkAction(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.isDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction.setDefault(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.ShowChannelAction(NotificationManager, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.channelCleared()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.getLocalizedName()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationAdded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.notificationRead(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction.updateState()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.ViewToggleAction(Chart, GPViewManager, GPView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.CopyAction(GPViewManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.CutAction(GPViewManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.EditMenu(IGanttProject, UIFacade, GPViewManager, SearchUi, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getRedoAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu.getUndoAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.PasteAction(IGanttProject, UIFacade, GPViewManager, IconSize, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.actionPerformed(ActionEvent)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteExternalDocument(InputStream)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.pasteInternalFlavor(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.RedoAction(GPUndoManager, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.getLocalizedName()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.undoableEditHappened(UndoableEditEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.RefreshViewAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.SearchDialogAction(SearchUi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.SettingsDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.UndoAction(GPUndoManager, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.getLocalizedName()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoOrRedoHappened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.undoableEditHappened(UndoableEditEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.AboutAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.HelpMenu(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.RecoverLastProjectAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.recover(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction.runAction(Document)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.ViewLogAction(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.createMenu()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.CloudProjectActionBase(String, UIFacade, DocumentManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase.showURLDialog(IGanttProject, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.ExitAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.NewProjectAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.OpenMRUDocumentAction(int, String, IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction.getLocalizedName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.OpenProjectAction(IGanttProject, ProjectUIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.OpenURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction.openRemoteProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.PrintAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.ProjectExportAction(UIFacade, IGanttProject, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.ProjectImportAction(UIFacade, GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.ProjectMenu(GanttProject, JMenu, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getNewProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getOpenProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getPrintAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu.getSaveProjectAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.ProjectPreviewAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.ProjectPropertiesAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.SaveProjectAction(GanttProject, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectCreated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectModified()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.projectSaved()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.SaveProjectAsAction(GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.SaveURLAction(IGanttProject, UIFacade, ProjectUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction.saveProjectRemotely(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.AssignmentDeleteAction(AssignmentContext, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction.deleteAssignments(ResourceAssignment[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.ResourceAction(String, HumanResourceManager, ResourceContext, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.addStateChangedListener(ActionStateChangedListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.getSelection()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.hasResources()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.ResourceActionSet(ResourceContext, AssignmentContext, GanttProject, UIFacade, ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getActions()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getAssignmentDelete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceDeleteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveDownAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceMoveUpAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceNewAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourcePropertiesAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet.getResourceSendMailAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.ResourceDeleteAction(HumanResourceManager, ResourceContext, GanttProject, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction.deleteResources(HumanResource[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.ResourceImportAction(HumanResourceManager, TaskManager, RoleManager, GanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction.getResourcesFile()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.ResourceMoveDownAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.ResourceMoveUpAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction.valueChanged(TreeSelectionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.ResourceNewAction(HumanResourceManager, RoleManager, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.updateAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.ResourcePropertiesAction(IGanttProject, ResourceContext, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.ResourceSendMailAction(ResourceTreeTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction.valueChanged(TreeSelectionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.ScrollTimeIntervalAction(String, int, TaskManager, ChartModel, ScrollingManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction.createTimeInterval()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.ScrollToEndAction(IGanttProject, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.ScrollToSelectionAction(UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.selectionChanged(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction.userInputConsumerChanged(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.ScrollToStartAction(IGanttProject, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.ScrollToTodayAction(TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.IndentTargetFunctionFactory(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.OutdentTargetFunctionFactory(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.apply(Collection&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.TaskActionBase(String, TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.actionPerformed(ActionEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.addStateChangedListener(ActionStateChangedListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.askUserPermission(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.forwardScheduling()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getTreeFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.selectionChanged(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase.userInputConsumerChanged(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.TaskDeleteAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.askUserPermission(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.run(List&lt;Task&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.TaskIndentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.indent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, IndentApplyFxn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.TaskLinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction.run(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.TaskMoveDownAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.TaskMoveEnabledPredicate(TaskManager, Function&lt;Collection&lt;Task&gt;, Function&lt;Task, Task&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.apply(List&lt;Task&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.TaskMoveUpAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.isEnabled(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.TaskNewAction(IGanttProject, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.actionPerformed(ActionEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.updateAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.TaskPropertiesAction(IGanttProject, TaskSelectionManager, UIFacade, IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.asToolbarAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction.withIcon(IconSize)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.TaskUnindentAction(TaskManager, TaskSelectionManager, UIFacade, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.isEnabled(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.run(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction.unindent(List&lt;Task&gt;, TaskContainmentHierarchyFacade, UnindentApplyFxn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.TaskUnlinkAction(TaskManager, TaskSelectionManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.asToolbarAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.isEnabled(List&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction.run(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.ViewChartOptionsDialogAction(ChartComponentBase, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.createDialogComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction.rollback()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.ViewCycleAction(GPViewManager, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.GPViewImpl(Chart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.getViewComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.ViewMenu(IGanttProject, GPViewManager, IntegerOption, FontOption, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.ZoomActionSet(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomInAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet.getZoomOutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.ZoomInAction(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.ZoomOutAction(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.actionPerformed(ActionEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.getIconFilePrefix()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction.zoomChanged(ZoomEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.application.MainApplication.run(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, GPCalendar, Runnable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.CalendarEditorPanel(UIFacade, List&lt;CalendarEvent&gt;, Runnable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.ColorEditor(UIFacade, FocusSetter)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getCellEditorValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor.moveFocusToTable(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.DateCellRendererImpl(DateFormat)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl.getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.Column(Class&lt;?&gt;, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getColumnClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getDefault()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.TableModelImpl(List&lt;CalendarEvent&gt;, Runnable, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.delete(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValue(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.getValueAt(int, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isCellEditable(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.isRecurring()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.setValueAt(Object, int, int)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createDateValidatorComponents(String, DateFormat...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createNonRecurringComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createRecurringComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.createTableComponent(TableModelImpl, DateFormat, UIFacade)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getEvents()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.getI18NedEventType(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.recurring(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.reload(GPCalendar, List&lt;CalendarEvent&gt;, TableModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.CalendarTagHandler(GPCalendarCalc, HolidayTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.GPCalendarProvider(List&lt;GPCalendar&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getCalendars()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.getInstance()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendar(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.readCalendars()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.BackgroundRendererImpl(ChartModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.paint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ChartModelBase(TaskManager, TimeUnitStack, UIConfiguration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.OptionEventDispatcher.optionsChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.ScrollingSessionImpl(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.finish()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.scrollTo(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl.shiftOffsets(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addOptionChangeListener(GPOptionChangeListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.addRenderer(SceneBuilder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createOffsetBuilderFactory()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.createScrollingSession(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.fireOptionsChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartItemWithCoordinates(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getChartUIConfiguration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getDefaultUnitOffsets()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getEndDate()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getHorizontalOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getMilestones()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAnchorDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOffsetAt(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getOptionEventDispatcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getPainter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getProjectConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTimelineTopLineHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnit(Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getTopUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVerticalOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.getVisibleLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.paint(Graphics)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.resetRenderers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBaseFont(FontSpec)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomTimeUnit(TimeUnit)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBottomUnitWidth(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setBounds(Dimension)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setChartUIConfiguration(ChartUIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHeaderHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setHorizontalOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setRowHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setStartDate(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTimelineTasks(Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopTimeUnit(TimeUnit)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setTopUnit(TimeUnit)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setVerticalOffset(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.setupCopy(ChartModelBase)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.ChartModelImpl(TaskManager, TimeUnitStack, UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskBoundaryItem(int, int)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.findTaskProgressItem(int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getBaseline()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartItemWithCoordinates(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getGraphicPrimitive(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskContainment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.getVisibleTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.isExplicitlyHidden(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setBaseline(List&lt;GanttPreviousStateTask&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setExplicitlyHiddenTasks(Set&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ChartModelResource(TaskManager, HumanResourceManager, TimeUnitStack, UIConfiguration, ResourceChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.ResourceLoadOption(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.calculateRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getChartOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.getVisibleResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.setVisibleTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.ChartOptionGroup(String, GPOption[], OptionEventDispatcher)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.ChartRendererBase(ChartModelBase, Canvas)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.build()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getChartModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getPrimitiveContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.ChartPropertiesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.addValue(Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.loadPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.setValues(Iterable&lt;Entry&lt;String, String&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption.updateValue(Entry&lt;String, String&gt;, Entry&lt;String, String&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartUIConfiguration(UIConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.createCopy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBaseFontSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getBottomUnitGridColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartFont()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getChartStylesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getDayOffColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getEarlierPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderBorderColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHolidayTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor1()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getHorizontalGutterColor2()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getLaterPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getMargin()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getPublicHolidayTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceNormalLoadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceOverloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getResourceUnderLoadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderFont()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getSpanningHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekEndColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWeekendAlphaValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getWorkingTimeBackgroundColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.getYOffSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isCriticalPathOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.isRedlineOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setBaseFont(Font, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setHeaderHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setRowHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.setYOffSet(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.ChartViewState(TimelineChart, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getCurrentZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.getTopTimeUnit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollBy(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.scrollTo(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState.zoomChanged(ZoomEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.DependencyInteractionRenderer(int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.changePoint2(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.getDraw()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.paint(Graphics)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer.setDraw(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.MilestoneTaskFakeActivity(Task, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.ProjectCalendarDialogAction(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction.onCalendarEditCommited(ProjectCalendarOptionPageProvider)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.ResourceLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoadRenderer(ChartModelResource, ResourceChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.beforeProcessingTimeFrames()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.buildTasksLoadsRectangles(List&lt;Load&gt;, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.calculateGap(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createLoadText(Rectangle, Load)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.createRectangle(List&lt;Offset&gt;, Date, Date, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getChartStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.getDefaultOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.render()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoadDetails(LoadDistribution, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(List&lt;Load&gt;, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.renderLoads(Load, Load, List&lt;Offset&gt;, int, String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.SimpleRenderedImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.XToTileX(int, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.YToTileY(int, int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.copyData(WritableRaster)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getColorModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getData(Rectangle)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxTileY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMaxY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinTileY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinX()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getMinY()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumXTiles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getNumYTiles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getProperty(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getPropertyNames(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSampleModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getSources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridXOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileGridYOffset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getTileWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileXToX(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage.tileYToY(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.ColouredRectanglePainter(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter.paint(Rectangle)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.StyledPainterImpl(ChartUIConfiguration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Line)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Polygon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Rectangle)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(Text)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.paint(TextGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.prePaint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.setGraphics(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.TaskActivityPart(TaskActivity, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.equals(Object)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isFirst()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.isLast()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.TaskInteractionHintRenderer(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.paint(Graphics2D)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer.setX(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.BarChartConnectorImpl(Task, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEnd()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getEndVector()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStart()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl.getStartVector()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.TaskActivityChartApi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBarHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getBottomUnitOffsets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getChartStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getEndDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getViewportWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi.getWeekendOpacityOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskRendererImpl2(ChartModelImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.VerticalPartitioning(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning.build(TaskContainmentHierarchyFacade)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.calculateRowHeight()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.createTaskActivitySceneBuilder(Canvas, ChartApi, Style)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getLabelOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRectangleHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getRowHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getTaskRectangles(Task, ChartModelImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.getVisibleTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.render()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderActivities(int, Task, List&lt;TaskActivity&gt;, OffsetList, boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderBaseline(Task, int, OffsetList)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderDependencies()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderLabels(List&lt;Polygon&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderProgressBar(List&lt;Polygon&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderTasksAboveAndBelowViewport(List&lt;Task&gt;, List&lt;Task&gt;, OffsetList)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.renderVisibleTasks(List&lt;Task&gt;, OffsetList)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnBounds(List&lt;TaskActivity&gt;, Date, Date)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.splitOnViewportBounds(List&lt;TaskActivity&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.LabelTextSelector(Task, Text)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.createMaxWidthLabel(TextMetrics, String, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector.getLabels(TextMetrics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.TimelineLabelRendererImpl(ChartModelApi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.createTimelineLabel(int, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.getLabelLayer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.render()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.VisibleNodesFilter.getVisibleNodes(JXTreeTable, int, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.ChartDimensions(GanttExportSettings, GPTreeTableBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getChartWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getFullWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getLogoHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTableHeaderHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.getTreeWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions.setChartWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.ChartImageBuilder(GanttExportSettings, ChartModelBase, GPTreeTableBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder.buildImage(ChartImageVisitor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.RenderedChartImage(ChartModel, BufferedImage, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getChart(int, int, int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getTile(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.getWholeImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage.paintChart(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.ClipboardContents(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addResource(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.addTasks(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.build()" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.copy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.cut()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIncomingDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getIntraDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getOutgoingDeps()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents.isCut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.ClipboardTaskProcessor(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.canMove(Task, ClipboardContents)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAndInsert(Task, Task, Task, Map&lt;Task, Task&gt;, ClipboardContents)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyAssignments(ClipboardContents, Map&lt;Task, Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.copyDependencies(ClipboardContents, Map&lt;Task, Task&gt;)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, ClipboardContents)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsChild(Task, Task, ClipboardContents)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.pasteAsSibling(Task, ClipboardContents)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTaskCopyNameOption(StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateAssignments(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor.setTruncateExternalDeps(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.GanttChartController(IGanttProject, UIFacade, ChartModelImpl, ChartComponentBase, GanttTree2, ChartViewState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskEndInteraction(MouseEvent, TaskBoundaryChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginDrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.beginMoveTaskInteractions(MouseEvent, List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.buildImage(GanttExportSettings, ChartImageVisitor)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.canPaste(ChartSelection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.findTaskUnderPointer(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getChartItemUnderMousePoint(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getMouseMotionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getSelection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.getViewState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.hideTooltip()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paintChart(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.paste(ChartSelection)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController.showTooltip(int, int, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.GanttChartSelection(IGanttProject, TreeTableContainer&lt;Task, GanttTreeTable, GanttTreeTableModel&gt;, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.buildClipboardContents()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.exportTasksIntoSystemClipboard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.lostOwnership(Clipboard, Transferable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.paste(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection.startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.MouseListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase, GanttTree2)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getPopupMenuActions(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.handleEvent(ChartItem, MouseEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mouseClicked(MouseEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.mousePressed(MouseEvent)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDragTasks(MouseEvent, Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl.startDrawDependency(MouseEvent, ChartItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.MouseMotionListenerImpl(GanttChartController, ChartModelImpl, UIFacade, ChartComponentBase)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.findCalendarEvent(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl.mouseMoved(MouseEvent)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.CalendarChartItem(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem.getDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.ChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.TaskBoundaryChartItem(Task, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem.isStartBoundary()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskNotesChartItem.TaskNotesChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskProgressChartItem.TaskProgressChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem.TaskRegularAreaChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TimelineLabelChartItem.TimelineLabelChartItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.ChangeTaskBoundaryInteraction(Date, Task, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.doFinish(TaskMutator)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.finish(TaskMutator)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.paint(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction.updateTooltip(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.ChangeTaskEndInteraction(TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction.getNotesText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.ChangeTaskProgressInteraction(MouseEvent, TaskProgressChartItem, TimelineFacade, TaskChartModelFacade, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.apply(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.doFinish(TaskMutator)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction.paint(Graphics)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.ChangeTaskProgressRuler(Task, TaskChartModelFacade)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler.getProgress(int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.ChangeTaskStartInteraction(MouseEvent, TaskBoundaryChartItem, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.apply(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction.getNotesText()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.DrawDependencyInteraction(MouseEvent, TaskRegularAreaChartItem, TimelineFacade, ChartModelFacade, UIFacade, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.apply(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.finish()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.MouseInteractionBase(Date, TimelineFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getChartDateGrid()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getLengthDiff(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.getStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.paint(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase.setStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.MouseListenerBase(UIFacade, ChartComponentBase, AbstractChartImplementation)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getPopupMenuActions(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseEntered(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mousePressed(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.mouseReleased(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.showPopupMenu(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase.startScrollView(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.MouseMotionListenerBase(UIFacade, AbstractChartImplementation)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase.mouseDragged(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.MouseWheelListenerBase(ZoomManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomIn()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.fireZoomOut()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.isRotationUp(MouseWheelEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase.mouseWheelMoved(MouseWheelEvent)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.MoveTaskInteractions(MouseEvent, List&lt;Task&gt;, TimelineFacade, UIFacade, RecalculateTaskScheduleAlgorithm)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.apply(MouseEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.doFinish()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions.finish()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.ScrollViewInteraction(MouseEvent, TimelineFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.apply(MouseEvent)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction.finish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.TimelineFacadeImpl(ChartModelBase, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createScrollingSession(int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.createTimeInterval(TimeUnit, Date, Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getDateAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getEndDateAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl.setVScrollController(VScrollController)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.GPToolbar(JPanel, List&lt;TestGanttRolloverButton&gt;, int, boolean, IntegerOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.getToolbar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.resizeToolbar(List&lt;? extends JComponent&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.setButtonSizeScaling(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar.updateButtons()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.HighlightOnMouseOver(AbstractButton, Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseClicked(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseEntered(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.NavigationPanel(IGanttProject, TimelineChart, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.PanelBorder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder.updateUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.ButtonBuilder(TestGanttRolloverButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.add()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder.withAutoRepeat(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ToolbarBuilder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addButton(TestGanttRolloverButton)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addComboBox(Action[], Action)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addGap()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addPanel(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.addWhitespace()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.build()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.button(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBackground(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withBorder(Border)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withDpiOption(IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withGapFactory(Supplier&lt;Component&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withHeight(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withLafOption(GPOption&lt;String&gt;, Function&lt;String, Float&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.withSquareButtons()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.ZoomingPanel(UIFacade, TimelineChart)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.Item.Item(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.addItem(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.getItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.RssFeedChecker(GPTimeUnitStack, UIFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssProposalCommand()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.createRssReadCommand()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.getUiOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.markLastCheck()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.onYes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.run()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.setOptionsVersion(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.wasToday(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.addItem(RssFeed, Node, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.compareCategory(String, String, String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.getXPath(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.isApplicableToVersion(Node, String, String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser.parse(InputStream, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument.setUserInfo(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException.DocumentException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.DocumentCreator(IGanttProject, UIFacade, ParserFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.StringOptionImpl(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addListener(DocumentMRUListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.addToRecentDocuments(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.changeWorkingDirectory(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.clearRecentDocuments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createAutosaveCleanup()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createDocument(String, String, String)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.createTemporaryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getAutosaveZipFs()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getFTPOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getLastAutosaveDocument(Document)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getNetworkOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getOptionGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getProxyDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getRecentDocuments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getResourceVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getTempDir()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWebDavStorageUi()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.getWorkingDirectoryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.newAutosaveDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentManager.FTPOptions.FTPOptions(String, GPOption&lt;?&gt;[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentStorageUi.Components.Components(JComponent, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.DocumentsMRU(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.add(String, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.addListener(DocumentMRUListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.fireMRUListChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU.iterator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.FileDocument(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canCreate(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canOverwrite()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.canWrite()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getLastAccessTimestamp()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.open()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.FtpDocument(String, StringOption, StringOption)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.NetworkOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.buildPageComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.canEnableTestAction(GPOptionGroup)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.FailureState.enter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.OnlyShowWeekendsTagHandler(GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.ParsingState(SuccessState, FailureState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState.enter()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.getDefaultDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl.setDefaultDocument(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.PortfolioTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler.startElement(String, String, String, Attributes)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ProxyDocument(DocumentCreator, Document, IGanttProject, UIFacade, ColumnList, ColumnList, ParserFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.SuccessState.enter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getActiveCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getFilePath()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getPortfolioImpl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.write()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.ReadOnlyProxyDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.acquireLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.canWrite()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getFilePath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getInputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getOutputStream()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getPortfolio()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getURI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.read()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.releaseLock()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.decorate(JComponent, JComponent, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.getSize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel.setCollection(WebDavResource, List&lt;WebDavResource&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.GanttURLChooser(IGanttProject, UIFacade, ListOption&lt;WebDavServerDescriptor&gt;, WebDavUri, StringOption, StringOption, IntegerOption, ...)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.ReloadWorker(WebDavResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.doInBackground()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.done()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker.readChildren(WebDavResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.addEmptyRow(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.buildUrl()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createComponent()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createOpenDocumentUi(OkAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createSaveDocumentUi(OkAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.createUsernamePasswordPanel()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.dispose()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.findSavedServer(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getLockTimeout()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getPathOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getSelectedResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.onSelectionChanged(WebDavResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.reloadFilesTable()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setProgressBar(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setSelectionListener(SelectionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.setWebDavActionsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.showError(Exception)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryApplyUrl(WebDavUri)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.tryEnterCollection(JXList, FilesTableModel)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.updateUsernameAndPassword()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(String, String, String, StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.HttpDocument(WebDavResource, String, String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.acquireLock()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canRead()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.canWrite()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getFileName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getHTTPError(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getInputStream()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getLastError()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getOutputStream()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getURI()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.getWebdavResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isLocal()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.isValidForMRU()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.releaseLock()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument.write()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.HttpDocumentOutputStream(HttpDocument)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream.close()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.Key(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.equals(Object)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.MiltonResourceFactory(String, String, StringOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.clearCache()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.createResource(WebDavUri)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getHost(WebDavUri)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.getProxyDetails(StringOption)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.setCredentials(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Host, MiltonResourceFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.MiltonResourceImpl(WebDavUri, Resource, MiltonResourceFactory)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.assertExists()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.canLock(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.delete()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.exists()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getChildResources()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getHost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getInputStream()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getLockOwners()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getOptionalImpl()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getParent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.getWebDavUri()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isLocked()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.isWritable()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.lock(int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.unlock()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl.write(byte[])" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.WebDavOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.buildPageComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException.WebDavException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException.WebDavRuntimeException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.WebDavServerDescriptor(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getPassword()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getRootUrl()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.getUsername()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor.setRootUrl(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.EnumerationOptionImpl(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.objectToString(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.reload()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.ServerListOption(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.addValue(WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getPersistentValue()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.loadPersistentValue(String)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValue(WebDavServerDescriptor)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.setValues(Iterable&lt;WebDavServerDescriptor&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.updateValue(WebDavServerDescriptor, WebDavServerDescriptor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.WebDavStorageImpl(IGanttProject, UIFacade)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createChooser(Document)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.createNoLockAction(String, GanttURLChooser, DocumentReceiver)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.findServer(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLastWebDavDocumentOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getLegacyLastWebDAVDocumentOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getProxyOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getServersOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavLockTimeoutOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.getWebDavReleaseLockOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.open(Document, DocumentReceiver)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.save(Document, DocumentReceiver)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.WebDavUri(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildChild(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildParent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildRootUrl()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri.buildUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.CommandLineExportApplication()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.export(Args)" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getArguments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.getCommandLineFlags()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.ConsoleUIFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.addOnUpdateComponentTreeUi(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.createDialog(Component, Action[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getCurrentTaskView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getGanttDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLafOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLogo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getLookAndFeel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getMainFrame()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getNotificationManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceDividerLocation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getResourceTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getScrollingManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskSelectionManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getTaskTree()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getViewIndex()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomActionSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.getZoomManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setGanttDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setLookAndFeel(GanttLookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setResourceDividerLocation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setStatusText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setViewIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.setWorkbenchTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showErrorDialog(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showNotificationDialog(NotificationChannel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showOptionDialog(int, String, Action[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Action[], int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showPopupMenu(Component, Collection&lt;Action&gt;, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showSettingsDialog(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade.showYesNoConfirmationDialog(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.DeprecatedProjectExportData.DeprecatedProjectExportData(IGanttProject, String, Chart, Chart, GanttExportSettings, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException.ExportException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFileWizardImpl(UIFacade, IGanttProject, Preferences)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFinalizationJobImpl.run(File[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getExporter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getPublishInWebOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.getUrl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setExporter(Exporter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State.setUrl(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.canFinish()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.onOkPressed()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.ExporterJob(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportRangeOptionGroup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.createExportSettings()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getCommandLineKeys()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeEndOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getExportRangeStartOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getGanttChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getResourceChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.run(File, ExportFinalizationJob)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.ExporterChooserPage(List&lt;Exporter&gt;, State)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage.setActive(boolean)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createCVSExportJob(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileExtensions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV.proposeFileExtension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.ExporterToImage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.FileTypeOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getAvailableValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.proposeFileExtension()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createImageExportJob(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.createJobs(File, List&lt;File&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getCustomOptionsUI()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileExtensions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.getSecondaryOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.proposeFileExtension()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.FileChooserPage(State, IGanttProject, WizardImpl, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createFileFilter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.createSecondaryOptionsPanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getFileChooserTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getOptionGroups()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.loadPreferences()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedFileChange(File)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.onSelectedUrlChange(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage.proposeOutputFile(IGanttProject, Exporter)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(Task, int, StringBuffer)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor.visit(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.detach()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.loginAndChangedir(FTPOptions)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp.put(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.WebPublisher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.createTransferJob(Ftp, File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.run(File[], FTPOptions)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.ExtensionBasedFileFilter(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.accept(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.getExtension(File)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter.matches(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.GanttXMLFileFilter.GanttXMLFileFilter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.AbstractPagesDialog(String, UIFacade, List&lt;ListItem&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem.ListItem(boolean, String, String, Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.getComponent()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.isPageVisible(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.show(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.AbstractTableAndActionsComponent(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addAction(Action, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.addSelectionListener(SelectionListener&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createDefaultTableAndActions(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.createIsEnabledFunction(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.fireSelectionChanged(List&lt;T&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getActionsComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getAddResourceAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getDeleteItemAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.getValue(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.onSelectionChanged()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setActionOrientation(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelection(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent.setSelectionMode(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ActionUtil.setupAutoRepeat(JButton, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.DateInterval(Date, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromModelDates(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.createFromVisibleDates(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.getVisibleEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateIntervalListEditor(DateIntervalModel)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.add(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.canRemove(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.format(DateInterval)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getIntervals()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.getMaxIntervalLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel.remove(DateInterval)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel.update()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.updateActions()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JDialog, Container, Centering)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner.center(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.ComboItem(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.EditableList(List&lt;T&gt;, List&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.TableAndActionsImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onAddEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onDeleteEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl.onSelectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.getValueAt(int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.isCellEditable(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl.setValueAt(Object, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.applyValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createDefaultComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.createPrototype(Object)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getActionsComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObject()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getSelectedObjects()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getStringValue(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableAndActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableCellRendererComponent(DefaultTableCellRenderer, T, boolean, boolean, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTableComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.initComponent()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.isEditable(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.reloadValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setUndefinedValueLabel(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.setupEditor(List&lt;T&gt;, JTable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.stopEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.FileChooserPageBase(WizardImpl, Preferences, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.UrlFetcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.fetch()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.onFetchComplete(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.reschedule()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatus(IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setStatusLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher.setUrl(URL)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getDefaultFileName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.getSelectedUrl()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.loadPreferences()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedFileChange(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.onSelectedUrlChange(URL)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.reportMalformedUrl(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setActive(boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setOptionsEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setSelectedFile(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.setStatus(JLabel, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.GPColorChooser(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.buildComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColors()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.getRecentColorsOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser.setRecentColors(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.GPlainDocument(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.insertString(int, String, AttributeSet)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setPattern(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument.setValidCharacters(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(AbstractFormatter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.GTextField(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setFocus()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setPattern(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField.setValidCharacters(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogInfo.GanttDialogInfo(Frame, int, int, String, String)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.GanttDialogPerson(CustomPropertyManager, UIFacade, HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.applyChanges()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.constructDaysOffPanel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.findRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.loadFields()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.okButtonActionPerformed()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.result()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson.setVisible(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.GanttDialogProperties(GanttTask[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties.show(IGanttProject, UIFacade)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.GanttImagePanel(Image, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel.setScale(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(LookAndFeelInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.GanttLookAndFeelInfo(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.GanttLookAndFeels()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.addLookAndFeel(GanttLookAndFeelInfo)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getDefaultInfo()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getGanttLookAndFeels()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByClass(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInfoByName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels.getInstalledLookAndFeels()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.GanttStatusBar(JFrame)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.ProgressBarDialog(IProgressMonitor)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.dialogInit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.done()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.getLabelText()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setProgress(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.setSubTask(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog.start(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.ProgressMonitorImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.beginTask(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.done()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.internalWorked(double)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.isCanceled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setCanceled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.setTaskName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.subTask(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl.worked(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.createProgressMonitor()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setFirstText(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setNotificationManager(NotificationManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.setSecondText(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.GanttTabbedPane()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Component, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.addTab(String, Icon, Component, String, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane.getSelectedUserObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.GanttTaskPropertiesBean(GanttTask[], IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.addEmptyRow(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.applySettings()" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.canBeProjectTask(Task, TaskContainmentHierarchyFacade)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCheckBox()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructCustomColumnPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructEarliestBegin(Container)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructGeneralPanel()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructNotesPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructPredecessorsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.constructResourcesPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getLength()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getNotes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPercentComplete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getTaskName()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThird()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getThirdDateConstraint()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.getWebLink()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.init()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isMilestone()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isProjectTaskOrContainsProjectTask(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.isSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setSelectedTaskProperties()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.setThird(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean.storeOriginalValues(GanttTask)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.ListAndFieldsPanel(EditableList&lt;T&gt;, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.NotificationChannel(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.addNotifications(Collection&lt;NotificationItem&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getDefaultNotification()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getItems()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getNormalColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.getUnreadCount()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isPulsing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.saveNormalColor()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setButton(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setDefaultNotification(NotificationItem)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setPulsing(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setRead(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.NotificationComponent(NotificationChannel, AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(NotificationItem, NotificationChannel)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.addNotification(String, String, HyperlinkListener, NotificationChannel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.channelCleared()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createBackwardAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createClearAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createForwardAction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.createHtmlPane(String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getActions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationAdded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.notificationRead(NotificationItem)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.processItems()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent.updateEnabled()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.NotificationItem(String, String, HyperlinkListener)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.equals(Object)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.isRead()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem.setRead(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.NotificationManagerImpl(AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.addNotifications(NotificationChannel, Collection&lt;NotificationItem&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.getChannelButtons()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.hideNotification()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.setAnimationView(AnimationView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showNotification(NotificationChannel)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl.showPending()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.OpenFileDialog(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog.show()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.ProjectMRUMenu(IGanttProject, UIFacade, ProjectUIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.add(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu.mruListChanged(Collection&lt;String&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.ProjectOpenDiagnosticImpl(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addModifiedTask(Task, Date, Date)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.addReason(Task, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildEndDateChangeTable()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.buildStartDateChangeTable()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.info(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl.showDialog()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.run(String, ShowDialogCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx.setOpenLinksInBrowser(WebEngine)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiSwing.run(String, ShowDialogCallback)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.ProjectOpenStrategy(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.adjustTasks(TaskManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.checkLegacyMilestones()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1.tryPatchMilestones(IGanttProject, TaskManager)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step2.checkEarliestStartConstraints()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.processTasks(List&lt;Runnable&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3.runUiTasks()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.close()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.getMilestonesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.openFileAsIs(Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ProjectUIFacadeImpl(UIFacade, DocumentManager, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.afterSaveProject(IGanttProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.beforeClose()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.createProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.ensureProjectSaved(IGanttProject)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.formatWriteStatusMessage(Document, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.getUndoManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(Document, IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.openProject(IGanttProject)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProject(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectAs(IGanttProject)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryLock(IGanttProject, Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTrySave(IGanttProject, Document)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.saveProjectTryWrite(IGanttProject, Document)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl.showNewProjectWizard(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.RecentColorsOption(List&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.addValue(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.asEnumerationOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getPersistentValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.getValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.loadPersistentValue(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.removeValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValue(Color)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValueIndex(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.setValues(Iterable&lt;Color&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption.updateValue(Color, Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseEntered(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler.mouseExited(MouseEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Action)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.TestGanttRolloverButton(Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.getPreferredSize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.paintComponent(Graphics)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setIcon(Icon)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setScale(float)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setText(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setTextHidden(boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.setupFontAwesome()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.TextFieldAndFileChooserComponent(UIFacade, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getSelectedURL()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.getWorkingDir()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFile(File)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileFilter(FileFilter)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.setFileSelectionMode(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.showFileChooser()" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent.tryFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.RedlineOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.UIConfiguration(Color, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getAppFontSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getChartFontOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDayOffColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getDpiOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getEarlierPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getLaterPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getPreviousTaskColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getProjectBoundariesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getRedlineOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceOverloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getResourceUnderloadColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekEndColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.getWeekendAlphaRenderingOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isCriticalPathOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.isRedlineOn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setChartFontOption(FontOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setCriticalPathOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDayOffColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setDpiOption(IntegerOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setEarlierPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setLaterPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setPreviousTaskColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setRedlineOn(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceOverloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setResourceUnderloadColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.setWeekEndColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.DatePickerEditCommiter(JXDatePicker, JFormattedTextField, DateValidator, ValueValidator&lt;Date&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.attachOnFocusLost(ActionListener)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.resetValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter.tryCommit()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.aroundProjectStart(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default.dateInRange(Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.GPDateCellEditor(IGanttProject, boolean, ValueValidator&lt;Date&gt;, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getActionListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getCellEditorValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.getTableCellEditorComponent(JTable, Object, boolean, int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.languageChanged(Event)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor.stopCellEditing()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.MultiscreenFitResult.MultiscreenFitResult(double, double, GraphicsConfiguration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.attachValidator(JTextField, ValueValidator&lt;T&gt;, GPOption&lt;T&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.autoFitColumnWidth(JTable, TableColumn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.border(JComponent, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.clearErrorLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.contentPaneBorder(JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createButtonBar(JButton[], JButton[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createDatePicker(DateFormat...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createHtmlPane(String, HyperlinkListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createStringDateValidator(DateValidator, Supplier&lt;List&lt;DateFormat&gt;&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTitle(JComponent, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTooltiplessJMenu(Action)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.createTopAndCenter(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.formatPathForLabel(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeLabel(GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeScale(GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getFontawesomeYShift(GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getHeaderDimension(JTable, TableColumn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getUiProperty(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.getValidFieldColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.initJavaFx(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.isFontawesomeSizePreferred()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.multiscreenFit(Rectangle)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorComponent(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newColorRenderer(Supplier&lt;Integer&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.newDateCellEditor(IGanttProject, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.pushAction(JComponent, boolean, KeyStroke, GPAction)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.registerActions(JComponent, boolean, GPAction...)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setBackgroundTree(JComponent, Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ActionListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupDatePicker(JXDatePicker, Date, DateValidator, ValueValidator&lt;Date&gt;, ActionListener)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupErrorLabel(JLabel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupHighlighters(JXTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.setupTableUI(JTable, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.tryParse(DateFormat, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.walkComponentTree(JComponent, Predicate&lt;JComponent&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ViewLogDialog.show(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.AboutDialog2(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtml(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createHtmlPage(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createPages()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createSummaryPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.createTranslationsPage()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.i18n(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2.onOk()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.BooleanOptionAction(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction.actionPerformed(ActionEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.CSVSettingsPanel(UIFacade, CSVOptions)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.ExportFieldsTableModel(List&lt;BooleanOption&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnClass(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.getValueAt(int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel.setValueAt(Object, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.applyChanges(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createResourcePropertiesTableModel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createSeparatorSettingsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskExportFieldsPanel(TableModel, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.createTaskPropertiesTableModel()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getCsvOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getFixed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getSeparat()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.getTextSeparat()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.initialize()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.EnumerationOptionComboBoxModel(EnumerationOption, String[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.Item(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSelectedItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.geti18nedValues(EnumerationOption, GPOptionGroup)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.onValueChange()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.setSelectedItem(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.ExportCsvOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], GPOptionGroup[], int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.getComponent(Action[], JComponent[], int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.setSelected(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel.updateSelectionUI(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.GanttChartOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.GeneralOptionPanel(UIFacade, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.askForApplyChanges()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel.rollback()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.InterfaceOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.checkLocale(Locale)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getExtDir()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider.init(IGanttProject, UIFacade)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.OptionPageProviderBase(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getCanonicalPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getPageID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase.wrapContentComponent(JComponent, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.OptionPageProviderPanel(OptionPageProvider, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel.initialize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.BooleanOptionRadioUi(BooleanOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getNoButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi.getYesButton()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.I18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getAdvancedActionTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionGroupLabelKey(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionLabelKey(GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageDescriptionKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageLabelKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionPageTitleKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getCanonicalOptionValueLabelKey(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorButtonText(ColorOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getColorChooserTitle(ColorOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionGroupLabel(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getPageTitle(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(GPOptionGroup, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.getValue(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N.hasValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.OptionsPageBuilder(Component, LayoutApi)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPage(GPOptionGroup[], String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.buildPlanePage(GPOptionGroup[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanComponent(GPOptionGroup, BooleanOption)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createBooleanOptionRadioUi(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createButtonComponent(GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createColorComponent(ColorOption)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createDateComponent(DateOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, GPOptionGroup)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createEnumerationComponent(EnumerationOption, Supplier&lt;EnumerationOptionComboBoxModel&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFileComponent(FileOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createFontComponent(FontOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createGroupComponent(GPOptionGroup, GPOption&lt;?&gt;...)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createLabeledComponent(GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionComponent(GPOptionGroup, GPOption&lt;?&gt;)" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createOptionLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createRadioButtonBooleanComponent(GPOptionGroup, BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStandaloneOptionPanel(GPOption&lt;?&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createStringComponent(StringOption)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createValidatingComponent(GPOption&lt;T&gt;, ValueValidator&lt;T&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.createWaitIndicatorComponent(DefaultBooleanOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getI18N()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getTrailingLabel(BooleanOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.getValidFieldColor()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.isCheckboxOption(GPOptionGroup, GPOption&lt;?&gt;)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.needsLabel(GPOptionGroup, GPOption&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setI18N(I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setOptionKeyPrefix(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.setUiFacade(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.updateTextField(JTextField, DocumentListener, ChangeValueEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.ProjectBasicOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.buildPageComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.ProjectCalendarOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.buildPageComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.moveProject(TimeDuration)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider.updateMoveOptions(TimeDuration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.ProjectRolesOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.buildPageComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.getRoleManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider.hasCustomComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.ProjectSettingsPanel(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.applyChanges(boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getProjectOrganization()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel.initialize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.ResourceChartOptionPageProvider()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.SettingsDialog2(IGanttProject, UIFacade, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getListItems(List&lt;OptionPageProvider&gt;, String, IGanttProject, UIFacade)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.getPages(String, IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2.onOk()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.getConstraintsForCell(int, int, Container, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, Function&lt;Integer, Integer&gt;)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeCompactGrid(Container, int, int, int, int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.makeGrid(Container, int, int, int, int, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities.printSizes(Component)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.TopPanel.create(String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.WeekendsSettingsPanel(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.applyChanges(boolean)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel.initialize()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model.CustomPropertyDefaultValueAdapter.createDefaultValueOption(CustomPropertyClass, CustomPropertyDefinition)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.I18N()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.formatRoleForTooltip(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getDayNames()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getNewProjectWizardWindowTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectDomainPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getProjectWeekendPageTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRoleSetDisplayName(RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipFooter()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N.getRolesetTooltipHeader(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard.createNewProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.NewProjectWizardWindow(IGanttProject, UIFacade, I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addProjectNamePage(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addRoleSetPage(RoleSet[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.addWeekendConfigurationPage(IGanttProject)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.ProjectNamePage(IGanttProject, I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.RoleSetListModel(RoleSet[], I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.createTooltipText(RoleSet)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getCellRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getElementAt(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.isTheOnlyEnabled(RoleSet)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel.toggle(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetPage(RoleSet[], I18N)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.setActive(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.CalendarOption(GPCalendar, List&lt;GPCalendar&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption.objectToString(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.CheckBoxAction(GPCalendar, int, String, ButtonModel, Supplier&lt;Integer&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction.actionPerformed(ActionEvent)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendConfigurationPage(GPCalendarCalc, I18N, UIFacade)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.WeekendSchedulingOption(SchedulingEnum)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption.objectToString(SchedulingEnum)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.append(List&lt;T&gt;, T...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createCalendarOption(GPCalendar)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.createWeekendCheckBoxes(GPCalendar, String[])" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.fillCustomCalendar(List&lt;CalendarEvent&gt;, GPCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.updateBasedOnLabel(GPCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.WizardImpl(UIFacade, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.addPageComponent(WizardPage, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.adjustButtonState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.backPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getCurrentPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.nextPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onCancelPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePage(WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.removePageComponent(WizardPage)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl.show()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.ScrollingManagerImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.addScrollingListener(ScrollingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.removeScrollingListener(ScrollingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(TimeDuration)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollBy(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl.scrollTo(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.ColumnManagerPanel(CustomPropertyManager, ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.DefaultValueOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.commit()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption.setValue(Boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.IsVisibleOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.findColumn(CustomPropertyDefinition)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisible(CustomPropertyDefinition, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption.setVisibleFields(ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.NameOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.PropertyClassOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.commit()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.getCustomPropertyClass(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.objectToString(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.reloadValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.resetValue(String, boolean, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption.setUIControls(CardLayout, JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.commitCustomPropertyEdit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createComponent()" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.createDefaultFieldDefinitions(ColumnList, List&lt;CustomPropertyDefinition&gt;, List&lt;CustomPropertyDefinition&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.getFieldsComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.isEditable(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setDefaultValuePanelEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.setSelectedDefinition(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.createTableAndActions(JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupComboBoxEditor(TableColumn, Object[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel.setupTableUI(JXTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.CustomColumnTableModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.getValueAt(int, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.isCellEditable(int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.reload()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel.setValueAt(Object, int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnsPanel(CustomPropertyManager, UIFacade, CustomPropertyHolder, ColumnList)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.DependencyTableModel(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.MyColumn(String, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getCaption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.getTableColumn(JTable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn.isEditable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.TaskComboItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.createDependency(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.delete(int[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.getValueAt(int, int)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.isCellEditable(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.setValueAt(Object, int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.updateDependency(Object, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.Column(String, Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getColumnClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.ResourcesTableModel(ResourceAssignmentCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.createAssignment(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.delete(int[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnClass(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getColumnName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getResourcesAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getRowCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.getValueAt(int, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isCellEditable(int, int)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.isChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.setValueAt(Object, int, int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.updateAssignment(Object, int, int)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.TaskAllocationsPanel(Task, HumanResourceManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.commit()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.createCostPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getComponent()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.commit()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getComponent()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.init(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel.setUpPredecessorComboColumn(TableColumn, JTable)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.TaskScheduleDatesPanel(UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.adjustLength()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.changeLength(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLabel(String, BooleanOption, JComponent, GPAction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.createLockAction(String, BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.fireDurationChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getLength()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.insertInto(JPanel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setEnd(GanttCalendar, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setStart(GanttCalendar, boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setUnpluggedClone(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.setupFields(boolean, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.showPopup(List&lt;Action&gt;, JComponent, JComponent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel.swapLocks(BooleanOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.ViewHolder(ViewManagerImpl, GanttTabbedPane, GPView, Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.languageChanged(Event)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.selectionChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setActive(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder.setVisible(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.ViewManagerImpl(IGanttProject, UIFacade, GanttTabbedPane, GPUndoManager)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activateNextView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.activatePrevView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.createView(GPView, Icon)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getActiveChart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCopyAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getCutAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getPasteAction()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getProjectEventListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedArtefacts()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.getSelectedView()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.toggleVisible(GPView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl.updateActions()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.close()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isReady()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.isVisible()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl.setComponent(JComponent, JComponent, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.ContentPaneBuilder(GanttTabbedPane, GanttStatusBar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.build(Component, Container)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.getAnimationHost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.ZoomEvent(ZoomManager, ZoomState)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent.getNewZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomManager(TimeUnitStack)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.ZoomState(TimeUnitPair, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getBottomUnitWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getPersistentName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getTimeUnitPair()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.addZoomListener(ZoomListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.canZoomOut()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.fireZoomingChanged(int, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.getZoomState(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.removeZoomListener(ZoomListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.setZoomState(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomIn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.zoomOut()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.BufferProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getHumanResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getTaskCustomColumnManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.getVisibleFields()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newParser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject.newSaver()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.FileChooserPage(UIFacade, Importer, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createFileFilter(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.createOptions(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage.setFile(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.ImportFileWizardImpl(UIFacade, IGanttProject, GanttOptions)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl.getImporters()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.ImporterBase(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getCustomPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getFileTypeDescription()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getSecondaryOptions()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.getUiFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.isReady()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.reportErrors(UIFacade, List&lt;Pair&lt;Level, String&gt;&gt;, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase.setFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.ImporterChooserPage(List&lt;Importer&gt;, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.getTitle()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.onSelectImporter(Importer)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage.setActive(AbstractWizard)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createFileChooser(GanttOptions)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory.createImporter(FileFilter)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.ImporterFromGanttFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.TaskFieldImpl(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getOrder()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getSort()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.getWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.isVisible()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setOrder(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setSort(SortOrder)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setVisible(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl.setWidth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.add(String, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getField(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.getSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl.importData(ColumnList)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.createBufferProject(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getDocument(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.getOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.importBufferProject(IGanttProject, BufferProject, UIFacade, MergeResourcesOption, ImportCalendarOption)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.run(File, IGanttProject, BufferProject)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.setContext(IGanttProject, UIFacade, Preferences)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.ImporterFromTxtFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileNamePattern()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.getFileTypeDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.save(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver.saveAssignment(TransformerHandler, ResourceAssignment)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.CSVOptions()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createResourceExportOption(ResourceDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.createTaskExportOption(TaskDefaultColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getBomOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getResourceOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getSeparatedTextChars()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions.getTaskOptions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.getShortDayName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver.save(IGanttProject, TransformerHandler)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttChartViewSaver.save(ColumnList, TransformerHandler)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.GanttTXTOpen(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen.load(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.DefaultTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.endElement(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler.startElement(String, String, String, Attributes)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(PrjInfos, UIConfiguration, TaskManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.GanttXMLOpen(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.TimelineTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onEndElement()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingFinished()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addParsingListener(ParsingListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.addTagHandler(TagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.doLoad(InputStream)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getDefaultTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.getTimelineTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.load(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.GanttXMLSaver(IGanttProject, TaskTreeUIFacade, GanttResourcePanel, GanttGraphicArea, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.save(OutputStream)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveAssignments(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveCalendar(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveHistory(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveResources(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveRoles(TransformerHandler)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveTasks(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveVacations(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver.saveViews(TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.save(List&lt;GanttPreviousState&gt;, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(GanttPreviousState, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver.saveBaseline(String, List&lt;GanttPreviousStateTask&gt;, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOption(String, GPOption&lt;?&gt;, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, GPOption&lt;?&gt;...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionList(TransformerHandler, Iterable&lt;GPOption&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver.saveOptionMap(Iterable&lt;Entry&lt;String, GPOption&lt;?&gt;&gt;&gt;, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.save(IGanttProject, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomColumnDefinitions(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveCustomProperties(IGanttProject, HumanResource, TransformerHandler)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver.saveRates(HumanResource, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, Boolean, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, String, AttributesImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.addAttribute(String, int, AttributesImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.cdataElement(String, String, AttributesImpl, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.createHandler(Result)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyComment(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.emptyElement(String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.endElement(String, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, AttributesImpl, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase.startElement(String, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.encodeFieldType(Class&lt;?&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.save(IGanttProject, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTask(TransformerHandler, GanttTask, CustomPropertyManager)" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperties(TransformerHandler, CustomPropertyManager)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver.writeTaskProperty(TransformerHandler, String, String, String, String, String, Map&lt;String, String&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.VacationSaver.save(IGanttProject, TransformerHandler)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.save(UIFacade, TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeColumns(ColumnList, TransformerHandler)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeRecentColors(TransformerHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver.writeTimelineTasks(UIFacade, TransformerHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.XmlParser(List&lt;TagHandler&gt;, List&lt;ParsingListener&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.characters(char[], int, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endCDATA()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endDocument()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.parse(InputStream)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startCDATA()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(Properties)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.CharSetMap(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(Locale, String)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.getCharSet(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadFile(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadPath(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadResource(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.loadStream(InputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[])" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.searchCharSet(String[], StringBuffer, int)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCharSet(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap.setCommonCharSet(String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.getShortDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl.setLocaleImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.Event(GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event.getLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.GanttLanguage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.applyDateFormatLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.correctLabel(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.createDateFormat(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.fireLanguageChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatDate(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatLanguageAndCountry(Locale)" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatShortDate(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatText(String, Object...)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.formatTime(Calendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getAvailableLocales()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCharSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getComponentOrientation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getCorrectedLabel(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDateFormatLocale(Locale)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getDay(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLocale()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getLongDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMediumDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getMonth(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getRecurringDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getResourceBundle(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDateFormat()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getShortDayNames(Locale)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.getText(String, Locale)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.parseDate(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.removeListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setLocale(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.setShortDateFormat(SimpleDateFormat)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.LanguageOption(String, Locale[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getPersistentValue()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption.objectToString(Locale)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.ShortDateFormatOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.commit()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.formatDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.getSelectedValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.loadPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setSelectedLocale(Locale)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption.setValue(String, Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.AbstractTagHandler(String, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.appendCdata(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.clearCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.getCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isMyTag(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.isTagStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.setTagStarted(boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler.startElement(String, String, String, Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.AllocationTagHandler(HumanResourceManager, TaskManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.findRole(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.getTaskManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.loadAllocation(Attributes)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingFinished()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ColorValueParser.parseString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.CustomPropertiesStructure()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setTaskPropertyID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure.setValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesTagHandler(ParsingContext, TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.loadProperty(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingFinished()" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.DefaultWeekTagHandler(GPCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.getShortDayName(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.loadCalendar(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.DependencyTagHandler(ParsingContext, TaskManager, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.GanttDependStructure()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDependType(Type)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setDifference(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setHardness(Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure.setTaskID(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getContext()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddressee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.getDependencyAddresser(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.loadDependency(Attributes)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingFinished()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException.FileFormatException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.CalendarEventAttrs(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.HolidayTagHandler(GPCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.endElement(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.loadHoliday(CalendarEventAttrs)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.onCalendarLoaded()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.processLastEvent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.OptionTagHandler(T)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onEndElement()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler.onStartElement(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.addTaskWithLegacyFixedStart(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.getTasksWithLegacyFixedStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.isStackEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.peekTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.popTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext.pushTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.PreviousStateTasksTagHandler(List&lt;GanttPreviousState&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.appendCdata(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.endElement(String, String, String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.hasCdata()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.loadPreviousTask(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler.startElement(String, String, String, Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.ResourceTagHandler(HumanResourceManager, RoleManager, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.endElement(String, String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.findRole(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.getResourceManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomProperty(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadCustomPropertyDefinition(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadRate(Attributes)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.loadResource(Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingFinished()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler.startElement(String, String, String, Attributes)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.RoleTagHandler(RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.clearRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.endElement(String, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.findRoleSet(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.loadRoles(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler.startElement(String, String, String, Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.TaskDisplayColumnsTagHandler(String, String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createLegacyHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createPilsenHandler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.createTaskDisplayColumnsWrapper(ColumnList, TaskDisplayColumnsTagHandler, TaskDisplayColumnsTagHandler)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.loadTaskDisplay(Attributes)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.TaskPropertiesTagHandler(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.loadTaskProperty(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.TaskTagHandler(TaskManager, ParsingContext, TaskTreeUIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.endElement(String, String, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.loadTask(Attributes)" value="25.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingFinished()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler.parsingStarted()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.VacationTagHandler(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.loadResource(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler.onStartElement(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.ViewTagHandler(String, UIFacade, TaskDisplayColumnsTagHandler)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.loadViewState(Attributes)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onEndElement()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler.onStartElement(Attributes)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getCharts()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExporters()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager.getExtensions(String, Class&lt;T&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.GanttPrintable(RenderedImage, double)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable.print(Graphics, PageFormat, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintManager.printChart(Chart, GanttExportSettings)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.PagePreview(int, PageFormat, Printable, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.clearCache()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMaximumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getMinimumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getPreferredSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledHeight()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.getScaledWidth()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.paintComponent(Graphics)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview.setScale(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.doLayout()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMaximumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getMinimumSize()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer.getPreferredSize()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PrintPreview(IGanttProject, UIFacade, Chart, Date, Date)" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.StatusBar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel0(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setLabel1(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText0(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar.setText1(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changePageOrientation(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.changeScale()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.createPages()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.onChangingDates()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.print()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.run(Runnable)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.updateSourceImage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.AssignmentNode(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getRoleForAssigment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getStandardField(ResourceDefaultColumn)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setRoleForAssigment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.setStandardField(ResourceDefaultColumn, Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl.getValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.HumanResource(String, int, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.ResourceAssignmentImpl(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addCustomProperty(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.addDaysOff(GanttDaysOff)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.createAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentChanged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireAssignmentsChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.fireResourceChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getCustomProperties()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDaysOff()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getDescription()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getLoadDistribution()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getMail()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getPhone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getRole()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.getStandardPayRate()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.removeAllAssignments()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.resetLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setCustomField(CustomPropertyDefinition, Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setDescription(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setId(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setMail(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setPhone(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.setStandardPayRate(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.swapAssignments(ResourceAssignment, ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.unpluggedClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.HumanResourceManager(Role, CustomPropertyManager, RoleManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withEmail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withRole(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder.withStandardRate(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.add(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.addView(ResourceView)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.create(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.down(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireAssignmentsChanged(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireCleanup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceAdded(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourceChanged(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.fireResourcesRemoved(HumanResource[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getById(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getResourcesArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.getValueAsString(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.importData(HumanResourceManager, HumanResourceMerger)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newHumanResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.newResourceBuilder()" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.remove(HumanResource, GPUndoManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.save(OutputStream)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.up(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceMerger.MergeResourcesOption.MergeResourcesOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.Load(Date, Date, float, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.isResourceUnavailable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.LoadDistribution(HumanResource)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.addLoad(Date, Date, float, List&lt;Load&gt;, Task)" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getDaysOff()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getSeparatedTaskLoads()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.getTasksLoads()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processActivity(TaskActivity, float)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processAssignment(ResourceAssignment)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDayOff(GanttDaysOff)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.processDaysOff(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.OverwritingMerger(EnumerationOption)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildEmailCache(HumanResourceManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.buildNameCache(HumanResourceManager)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.findNative(HumanResource, HumanResourceManager)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(HumanResource, HumanResource)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger.merge(Map&lt;HumanResource, HumanResource&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.ResourceEvent(HumanResourceManager, HumanResource[])" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent.getResources()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.ResourceNode(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.equals(Object)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getCustomField(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getDefaultRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getEMail()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getPhone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.getStandardField(ResourceDefaultColumn)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.removeAllChildren()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setCustomField(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setDefaultRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setEMail(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setPhone(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.setStandardField(ResourceDefaultColumn, Object)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode.toString()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.ResourceTableNode(Object, Set&lt;ResourceDefaultColumn&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode.isEditable(ResourceDefaultColumn)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.RoleImpl(int, String, RoleSet)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.getPersistentID()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.Access.getInstance()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.RoleEvent(RoleManager, RoleSet)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent.getChangedRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.RoleManagerImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.addRoleListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.changeRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.createRoleSet(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.fireRolesChanged(RoleSet)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getDefaultRole()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getEnabledRoles()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectLevelRoles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getProjectRoleSet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSet(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.getRoleSets()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.importData(RoleManager)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl.removeRoleListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.RolePersistentID(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.asString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID.getRoleSetID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.RoleSetImpl(String, RoleManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.changeRole(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.createRole(String, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.deleteRole(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.findRole(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.getRoles()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.importData(RoleSet)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.MySearchResult.MySearchResult(HumanResource, ResourceSearchService)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.ResourceSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.search(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.SearchDialog(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.createSearchBox(SearchCallback)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getComponent()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.getResultViewDataModel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.gotoSelection()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.processResults(List&lt;SearchResult&lt;?&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.runSearch(String, SearchCallback)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.SearchResult(String, String, String, SearchObjectType, SearchService&lt;?, SearchObjectType&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getLabel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getOrigin()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.getSnippet()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.SearchServiceBase(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.init(IGanttProject, TreeUiFacade&lt;SO&gt;, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.isNotEmptyAndContains(String, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase.select(List&lt;SR&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.PopupSearchCallback()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.accept(List&lt;SearchResult&lt;?&gt;&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.dismissPopup()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.onSelect(JPopupMenu, List&lt;SearchResult&lt;?&gt;&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.runSearch()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback.setSearchBox(JTextField)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.SearchUiImpl(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.getSearchField()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.requestFocus()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.MySearchResult.MySearchResult(Task, TaskSearchService)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.TaskSearchService()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.init(IGanttProject, UIFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.search(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.JPaintCombo(Paint[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo.getSelectedPaint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.PaintCellRenderer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.getListCellRendererComponent(JList, Object, int, boolean, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer.paintComponent(Graphics)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.BlankLineNode.BlankLineNode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(String, CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.CustomColumEvent(int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getColumn()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getOldName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.CustomColumn(CustomColumnsManager, String, CustomPropertyClass, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.canSetPropertyClass(CustomPropertyClass)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getAttributes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getDefaultValueAsString()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getPropertyClass()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.getTypeAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setDefaultValueAsString(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setId(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.setPropertyClass(CustomPropertyClass)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.CustomColumnsException(int, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.CustomColumnsManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addListener(CustomPropertyListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.addNewCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.createDefinition(String, String, String, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.deleteDefinition(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getCustomPropertyDefinition(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.getDefinitions()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.importData(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.CustomColumnsStorage(CustomColumnsManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumn(CustomColumn)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.addCustomColumnsListener(CustomPropertyListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.changeLanguage(GanttLanguage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.createId()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.findByName(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireCustomColumnsChange(CustomPropertyEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(CustomPropertyDefinition, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.fireDefinitionChanged(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnByID(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColumnCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.getCustomColums()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.importData(CustomColumnsStorage)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.removeCustomColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.reset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomColumnsValues(CustomPropertyManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.CustomPropertyImpl(CustomPropertyDefinition, Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl.getValueAsString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.addCustomProperty(CustomPropertyDefinition, String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.clone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomProperties()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getCustomPropertyDefinition(CustomPropertyManager, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValue(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.getValueAsString(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.hasOwnValue(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.removeCustomColumn(CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.setValue(CustomPropertyDefinition, Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.CustomPropertyEvent(int, CustomPropertyDefinition, CustomPropertyDefinition)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getColName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getDefinition()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getOldValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.CustomPropertyListenerImpl(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.customPropertyChange(CustomPropertyEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl.removeCustomPropertyValues(CustomPropertyDefinition)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException.DurationParsingException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(HumanResource, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.MutationInfo(ResourceAssignment, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(ResourceAssignmentCollectionImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentCollectionImpl(TaskImpl, HumanResourceManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.ResourceAssignmentImpl(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.addAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.commit()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl.deleteAssignment(HumanResource)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.ResourceAssignmentStub(HumanResource, Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getLoad()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getResource()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getRoleForAssignment()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.isCoordinator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setCoordinator(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setLoad(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.setRoleForAssignment(Role)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.addAssignment(ResourceAssignment)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.auxAddAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.copy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.deleteAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getCoordinator()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.importData(ResourceAssignmentCollection)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.removeAssignment(HumanResource)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.Priority(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.fromPersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getI18nKey()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getIconPath()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getLowerString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority.getPriority(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.TaskActivitiesAlgorithm(GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm.recalculateActivities(Task, List&lt;TaskActivity&gt;, Date, Date)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.TaskActivityImpl(Task, Date, Date, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getIntensity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getOwner()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isFirst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.isLast()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskContainmentHierarchyFacade)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.TaskDocumentOrderComparator(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator.compare(Task, Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getCalculatedValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getManualValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.getValue()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.isCalculated()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setCalculated(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl.setValue(Cost)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setOldValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange.setValue(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorException.MutatorException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.addNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.cachePrecomputedShift(Task, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.commit()" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getActivities()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getCompletionPercentage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getDuration()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getPrecomputedShift(float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.getThird()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCompletionPercentage(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setCritical(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setDuration(TimeDuration)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setEnd(GanttCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setExpand(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setIsolationLevel(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setMilestone(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setStart(GanttCalendar)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setThird(GanttCalendar, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(TimeDuration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl.shift(float)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.enable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender.fireEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.enable()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender.fireEvent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, TaskImpl, boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.TaskImpl(TaskManagerImpl, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.addNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.adjustNestedTasks()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.applyThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.areEventsEnabled()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.calculateEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.colorDefined()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutator()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.createMutatorFixingDuration()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.enableEvents(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getActivities()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignmentCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAssignments()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getAttachments()" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getColor()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCompletionPercentage()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCost()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getCustomValues()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependant()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDependenciesAsDependee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDisplayEnd()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getDuration()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getEnd()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getExpand()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNestedTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getNotes()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getShape()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getStart()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskID()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getTaskInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThird()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getThirdDateConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.getWebLink()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isCritical()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isLegacyMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isMilestone()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isProjectTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isSupertask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.isUnplugged()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.move(Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.recalculateActivities(GPCalendarCalc, Task, List&lt;TaskActivity&gt;, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCompletionPercentage(int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setCritical(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setExpand(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setMilestone(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setName(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setProjectTask(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setShape(ShapePaint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDate(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setThirdDateConstraint(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.setWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shapeDefined()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(TimeDuration)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shift(float)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.shiftDate(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.translateDurationValue(TimeDuration)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.unpluggedClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.Access.newInstance(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCompletion(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withCost(BigDecimal)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withEndDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withExpansionState(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withId(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withLegacyMilestone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withNotes(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withParent(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrevSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPriority(Priority)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withPrototype(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withStartDate(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder.withWebLink(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeFactoryImpl.createFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.addDeepNestedTasks(Task, ArrayList&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.areUnrelated(Task, Task)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, Predicate&lt;Pair&lt;Task, Task&gt;&gt;)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.breadthFirstSearch(Task, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.compareDocumentOrder(Task, Task)" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.contains(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getContainer(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDeepNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getDepth(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getNextSibling(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getOutlinePath(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getPreviousSibling(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTaskIndex(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.getTasksInDocumentOrder()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.hasNestedTasks(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.move(Task, Task, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl.sort(Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskManagerImpl(Factory, TaskManagerConfig, UIFacade, WeekendCalendarImpl)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.TaskMap(TaskManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.getTasks()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.isEmpty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.removeTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.setDirty()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap.size()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.TaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getAttributeName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.getTagName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption.loadValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.addTaskListener(TaskListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.areEventsEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createConstraint(Type)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(String)" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(TimeUnit, float)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createLength(long)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.createTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.deleteTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.emptyClone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.encode(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findClosestWorkingTime(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.findTimeUnit(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyAdded(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyChanged(TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireDependencyRemoved(TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskAdded(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskModelReset()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskProgressChanged(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskPropertiesChanged(Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskRemoved(Task, Task)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.fireTaskScheduleChanged(Task, GanttCalendar, GanttCalendar)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAlgorithmCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getAndIncrementId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendar()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCalendarListener()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getConfig()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getCustomPropertyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyGraph()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getDependencyHardnessOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getHierarchyManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getMaxId()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectCompletion()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectDocument()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectLength()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getProjectStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getRootTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTask(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCopyNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskCount()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskDefaultColorOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTaskNamePrefixOption()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.getTimeUnitStack()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importAssignments(TaskManager, HumanResourceManager, Map&lt;Task, Task&gt;, Map&lt;HumanResource, HumanResource&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(Task, Task, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;, Map&lt;Task, Task&gt;)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.importData(TaskManager, Map&lt;CustomPropertyDefinition, CustomPropertyDefinition&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isRegistered(TaskImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.isZeroMilestones()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.newTaskBuilder()" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.onTaskMoved(TaskImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.processCriticalPath(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectClosed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.projectOpened()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.registerTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.resetCriticalPath()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setEventsEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.setZeroMilestones(Boolean)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.shift(Date, TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.taskCommitYesNo(TaskMutator, String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.tasksToActivities(Task[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.TaskNode(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.applyThirdDateConstraint()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getCompletionPercentage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getDuration()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getEnd()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getPriority()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getTaskInfo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.getUserObject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setCompletionPercentage(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setDuration(TimeDuration)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setEnd(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setName(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setStart(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.setTaskInfo(TaskInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.TaskProperties(TimeUnitStack)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatCoordinators(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatDate(GanttCalendar, StringBuffer)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatPredecessors(Task, String, boolean)" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.formatResources(Collection&lt;ResourceAssignment&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.getProperty(Task, String)" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependencies(Iterable&lt;String&gt;, Task, Function&lt;Integer, Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties.parseDependency(String, Task, Function&lt;Integer, Task&gt;, Map&lt;Integer, Supplier&lt;TaskDependency&gt;&gt;)" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.TaskSelectionManager(Supplier&lt;TaskManager&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addSelectionListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.addTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireSelectionChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.fireUserInputConsumerChanged()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getEarliestStart()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getLatestEnd()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getSelectedTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.isTaskSelected(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeSelectionListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.removeTask(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setSelectedTasks(List&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager.setUserInputConsumer(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskView.getTimelineTasks()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskSchedule(Task, TaskContainmentHierarchyFacade)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.recalculateSupertaskScheduleBottomUp(Set&lt;Task&gt;, TaskContainmentHierarchyFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl.run(Collection&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.adjustNestedTasks(Task)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Collection&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.run(Task[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.getDiagnostic()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.run()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setDiagnostic(Diagnostic)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase.setEnabled(boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.AlgorithmCollection(TaskManagerImpl, FindPossibleDependeesAlgorithm, RecalculateTaskScheduleAlgorithm, AdjustTaskBoundsAlgorithm, RecalculateTaskCompletionPercentageAlgorithm, ChartBoundsAlgorithm, CriticalPathAlgorithm, ...)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getAdjustTaskBoundsAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getCriticalPathAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getExtendUncompletedTaskAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getFindPossibleDependeesAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getProjectBoundsAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskCompletionPercentageAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getRecalculateTaskScheduleAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getScheduler()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection.getShiftTaskTreeAlgorithm()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmException.AlgorithmException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CostAlgorithmImpl.getCalculatedCost(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.CriticalPathAlgorithmImpl(TaskManager, GPCalendarCalc)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Date, Date, Date, Date, int, Set&lt;Task&gt;)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.Node(Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.collectDependees(Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.isCritical()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node.toString()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.Processor(Map&lt;Task, Node&gt;, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.calculateLatestDates(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.enqueueDependees(LinkedList&lt;Node&gt;, Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Map&lt;Task, Node&gt;, Node)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.findLatestFinishTime(Node, Node, TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.hasMoreInput()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.processQueue()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor.run()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.createTaskNodeMap(Task[], Node)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.getCriticalTasks()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.DependencyGraph(Supplier&lt;TaskContainmentHierarchyFacade&gt;, Logger)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.ExplicitDependencyImpl(TaskDependency, Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.equals(Object)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.refresh()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(GraphData, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.GraphData(Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.addToLevel(int, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.checkLayerValidity()" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.createEmptyLayers()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.getLayer(int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.removeFromLevel(int, Node)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.rollback()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData.withTransaction()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.ImplicitInheritedDependency(DependencyEdge, Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.ImplicitSubSuperTaskDependency(Node, Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getDst()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getEndRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getSrc()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.getStartRange()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.isWeak()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.refresh()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.Node(Task, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addIncoming(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.addOutgoing(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.demoteLayer(GraphData)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getIncoming()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getOutgoing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.promoteLayer(GraphData)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeIncoming(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.removeOutgoing(DependencyEdge)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.revertData()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(Node, Transaction)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.NodeData(NodeData)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addIncoming(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.addOutgoing(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getIncoming()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getLevel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.getOutgoing()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeIncoming(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.removeOutgoing(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.revert()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData.setLevel(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.isRunning()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.rollback()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.start()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction.touch(Node)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addDependency(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addEdge(DependencyEdge)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addInheritedDependencies(DependencyEdge, Node)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addListener(Listener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.addTask(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.buildLoop(Map&lt;Task, DependencyEdge&gt;, DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.checkLayerValidity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.findExplicitDependency(TaskDependency, Node, Node)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.fireGraphChanged()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLayer(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getLogger()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.getNode(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.isAncestor(Node, Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.move(Task, Task)" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeDependency(TaskDependency)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeEdge(DependencyEdge)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeImplicitDependencies(Node)" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.removeTask(Task)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.rollbackTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.setLogger(Logger)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.startTransaction()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.ExtendUncompletedTaskAlgorithm(DependencyGraph, WeekendCalendarImpl, SchedulerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.couldRun()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.defineEndOfNextWorkingDay(WeekendCalendarImpl)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.doRun()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.extendUncompletedTasks(Node)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.modifyTaskEndToNextWorkingEnd(Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.run()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskAfterNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskBeforeNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm.taskStartsBeforeNextWorkingEnd(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.FindPossibleDependeesAlgorithmImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.processTask(Task[], Task, ArrayList&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl.run(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.Result.Result(Date, Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.getBounds(Collection&lt;Task&gt;)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentage(Task, TaskContainmentHierarchyFacade)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.recalculateSupertaskCompletionPercentageBottomUp(Task, TaskContainmentHierarchyFacade)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm.run(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.RecalculateTaskScheduleAlgorithm(AdjustTaskBoundsAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.buildDistanceGraph(TaskDependency[], int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilConstraints(TaskDependency)" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.fulfilDependencies()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isEnabled()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.isRunning()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.modifyTaskStart(Task, GanttCalendar)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Collection&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.run(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm.traverse(TaskContainmentHierarchyFacade, Task, Set&lt;Task&gt;)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(Collection&lt;T&gt;, Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm.run(T[], Function&lt;T, T&gt;, Collection&lt;T&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.SchedulerImpl(DependencyGraph, Supplier&lt;TaskContainmentHierarchyFacade&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.doRun()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.getTaskModelListener()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskEnd(Task, Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.modifyTaskStart(Task, Date)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.run()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.schedule(Node)" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl.setEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.ShiftTaskTreeAlgorithm(TaskManagerImpl, RecalculateTaskScheduleAlgorithm)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(List&lt;Task&gt;, TimeDuration, boolean)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.run(Task, TimeDuration, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm.shiftTask(Task, TimeDuration, boolean)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortByStartDate(List&lt;TaskActivity&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm.sortTasksByStartDate(List&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.LoopDetector(TaskManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector.isLooping(TaskDependency)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey.RangeSearchFromKey(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchToKey.RangeSearchToKey(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, TaskDependencyImpl)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.SearchKey(int, int, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.compareTo(SearchKey)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.Hardness(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.getIdentifier()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness.parse(String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.MutationInfo(TaskDependency, int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo.compareTo(MutationInfo)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.commit()" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl.deleteDependency(TaskDependency)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.TaskDependencyCollectionImpl(Factory, EventDispatcher)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl._isLooping(TaskDependency, Set&lt;Task&gt;)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.addDependency(TaskDependency)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.auxCreateDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.canCreateDependency(Task, Task)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.clear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createDependency(Task, Task, TaskDependencyConstraint, Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.createMutator()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.delete(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.deleteDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.doClear()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.fireChanged(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDefaultHardness()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependencies(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependant(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getDependenciesAsDependee(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.getTaskHierarchy()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.isLooping(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.DefaultCollision(GanttCalendar, int, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getAcceptableStart()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.getVariation()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision.isActive()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromPersistentValue(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.fromReadablePersistentValue(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getPersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type.getReadablePersistentValue()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(String, Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException.TaskDependencyException(Throwable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.TaskDependencyImpl(Task, Task, TaskDependencyCollectionImpl, TaskDependencyConstraint, Hardness, int)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.delete()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.equals(Object)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getActivityBinding()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getConstraint()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependant()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDependee()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getDifference()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEnd()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getEndVector()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getHardness()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStart()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.getStartVector()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.hashCode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setConstraint(TaskDependencyConstraint)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setDifference(int)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.setHardness(Hardness)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.TaskDependencySliceAsDependant(Task, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.TaskDependencySliceAsDependee(Task, TaskDependencyCollection)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.TaskDependencySliceImpl(Task, TaskDependencyCollection, Function&lt;Task, TaskDependencySlice&gt;)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.clear(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependency(Task)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getDependencyCollection()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.hasLinks(List&lt;Task&gt;)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl.toArray()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.ConstraintImpl(Type, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.addDelay(GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.clone()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getBackwardCollision(Date)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.getType()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.setTaskDependency(TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(Date, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.shift(GanttCalendar, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl.toString()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.DependencyActivityBindingImpl(TaskActivity, TaskActivity, Date[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getAlignedBounds()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependantActivity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl.getDependeeActivity()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.FinishFinishConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getBackwardCollision(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl.getCollision()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.FinishStartConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getBackwardCollision(Date)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl.getCollision()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.StartFinishConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getBackwardCollision(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl.getCollision()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.StartStartConstraintImpl()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getActivityBinding()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getBackwardCollision(Date)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl.getCollision()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.TaskDependencyEvent(TaskDependencyCollection, TaskDependency)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent.getDependency()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.TaskHierarchyEvent(Object, Task, Task, Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getNewContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getOldContainer()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyAdded(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyChanged(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.dependencyRemoved(TaskDependencyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskModelReset()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskProgressChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskPropertiesChanged(TaskPropertyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter.taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.TaskPropertyEvent(Object)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.TaskScheduleEvent(Task, GanttCalendar, GanttCalendar, GanttCalendar, GanttCalendar)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewFinishDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getNewStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldFinishDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getOldStartDate()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.TaskHierarchyItem(Task, TaskHierarchyItem)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.addNestedItem(TaskHierarchyItem, int)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.delete()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getContainerItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNestedItems()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getNextSiblingItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem.getTask()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.createItem(Task)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl.getRootItem()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.UndoManagerImpl(IGanttProject, ParserFactory, DocumentManager)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.addUndoableEditListener(GPUndoListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canRedo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.canUndo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.die()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoOrRedoHappened()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.fireUndoableEditHappened(UndoableEditImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getDocumentManager()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getParserFactory()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getProject()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getRedoPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.getUndoPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.redo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.removeUndoableEditListener(GPUndoListener)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl.undoableEdit(String, Runnable)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.UndoableEditImpl(String, Runnable, UndoManagerImpl)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canRedo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.canUndo()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.getPresentationName()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.redo()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.restoreDocument(Document)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.saveFile()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undo()" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl.undoRedoExceptionHandler(Exception)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.connectStringArray(String[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayURL(String)" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithDesktopApi(String)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.displayUrlWithJnlpApi(String)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.getPlatform()" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.replaceToken(String[], String, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[])" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.runCmdLine(String[], String[])" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.determineColor(String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion.getColor(Color)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.DateUtils.parseDate(String)" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendExtension(File, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.appendSuffixBeforeExtension(File, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getExtension(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.getFilenameWithoutExtension(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil.replaceExtension(File, String)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MathUtil.signum(int)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.append(StringBuilder, int, int, String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil.toString(MouseEvent)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.PropertiesUtil.loadProperties(Properties, String)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getDisplayNames(Object[])" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.getTruncatedString(String, int, FontMetrics)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.isEmptyOrNull(String)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padLeft(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils.padRight(String, int)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.Pair(F, S)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.create(F, S)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.first()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair.second()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.AbstractFileChooserPage(UIFacade, Preferences, String, FileFilter, GPOptionGroup[], boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.UrlFetcher()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.fetch()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.getComponent()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.onFetchComplete(File)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.reschedule()" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatus(IStatus)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setStatusLabel(JLabel)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher.setUrl(URL)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.createSecondaryOptionsPanel()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getChooser()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getComponent()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileChooserSelectionMode()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getFileStatus(File)" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getOptionGroups()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getPreferences()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getSelectedUrl()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.getWizard()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.loadPreferences()" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.onSelectedFileChange(File)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.reportMalformedUrl(Exception)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setActive(AbstractWizard)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setEnabledTree(JComponent, boolean)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.setOptionsEnabled(boolean)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.showStatus(JLabel, IStatus)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.AbstractWizard(UIFacade, String, WizardPage)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.addPageComponent(WizardPage)" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.adjustButtonState()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.backPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.canFinish()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getCurrentPage()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getDialog()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.getUIFacade()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.isExistingNextPage(WizardPage)" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.nextPage()" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.onOkPressed()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setNextPage(WizardPage)" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.setOkAction(Runnable)" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.show()" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard.wrapePageComponent(String, JComponent)" value="1.0"/>
		<VALUE measured="objectToString(CheckOption)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.check(StringTokenizer, String)" value="3.0"/>
		<VALUE measured="org.w3c.util.DateParser.getCalendar(String)" value="25.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDate(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoHours(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.getIsoDateNoMillis(Date)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.main(String[])" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.parse(String)" value="1.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(Date)" value="2.0"/>
		<VALUE measured="org.w3c.util.DateParser.test(String)" value="2.0"/>
		<VALUE measured="org.w3c.util.DateParser.twoDigit(int)" value="3.0"/>
		<VALUE measured="org.w3c.util.InvalidDateException.InvalidDateException(String)" value="1.0"/>
		<VALUE measured="paint(Rectangle)" value="9.0"/>
		<VALUE measured="run()" value="1.0"/>
		<VALUE measured="setValue(Date)" value="1.0"/>
		<VALUE measured="setValue(Double)" value="1.0"/>
		<VALUE measured="sort(Comparator&lt;Task&gt;)" value="1.0"/>
		<VALUE measured="startCopyClipboardTransaction()" value="1.0"/>
		<VALUE measured="startMoveClipboardTransaction()" value="1.0"/>
		<VALUE measured="stringToObject(String)" value="1.0"/>
		<VALUE measured="taskAdded(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskModelReset()" value="1.0"/>
		<VALUE measured="taskMoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskRemoved(TaskHierarchyEvent)" value="1.0"/>
		<VALUE measured="taskScheduleChanged(TaskScheduleEvent)" value="1.0"/>
		<VALUE measured="toString()" value="1.0"/>
	</METRIC>
	<METRIC category="Class" name="Average operation complexity" abbreviation="OCavg">
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl" value="1.1764705882352942"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl" value="1.2"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent" value="1.125"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase" value="2.1666666666666665"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff" value="1.2"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.Values" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl" value="2.3333333333333335"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker" value="1.6666666666666667"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter" value="1.1666666666666667"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas" value="1.85"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label" value="1.3333333333333333"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon" value="1.0769230769230769"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape" value="1.0666666666666667"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text" value="1.05"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup" value="1.4545454545454546"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex" value="1.4"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser" value="2.5714285714285716"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset" value="1.1428571428571428"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory" value="1.0714285714285714"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl" value="2.076923076923077"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.FactoryImpl" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList" value="1.2"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup" value="3.5"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByEndDate" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByPixels" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByStartDate" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager" value="2.142857142857143"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption" value="1.4"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer" value="1.6666666666666667"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer" value="2.6"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint" value="2.090909090909091"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style" value="3.4545454545454546"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border" value="1.6"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders" value="1.1111111111111112"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color" value="1.3333333333333333"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding" value="1.2222222222222223"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl" value="1.2857142857142858"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State" value="1.3333333333333333"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter" value="3.8333333333333335"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder" value="2.2857142857142856"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder" value="2.1818181818181817"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder" value="1.2727272727272727"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.Result" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector" value="1.3333333333333333"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder" value="4.8"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.Style" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier" value="2.6666666666666665"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder" value="1.7647058823529411"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter" value="1.1666666666666667"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter" value="1.5"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters" value="1.6666666666666667"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText" value="1.8"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn" value="1.3076923076923077"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.Functions" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption" value="1.1428571428571428"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption" value="1.5"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption" value="1.25"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption" value="1.25"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption" value="1.4"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFileOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption" value="1.6"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec" value="1.1428571428571428"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption" value="1.0769230769230769"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.I18N" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners" value="1.3333333333333333"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry" value="1.5"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup" value="1.75"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.Immutable" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar" value="1.375"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl" value="1.4166666666666667"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl" value="1.2727272727272727"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph" value="1.8333333333333333"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl" value="1.1818181818181819"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitStack.Util" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl" value="1.2"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack" value="3.066666666666667"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl" value="1.6"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.DefaultCalendarFactory" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport" value="5.071428571428571"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen" value="2.466666666666667"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup" value="1.3333333333333333"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords" value="2.6666666666666665"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl" value="2.5"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl" value="1.75"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter" value="2.25"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage" value="1.5"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping" value="1.9166666666666667"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile" value="1.4285714285714286"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile" value="1.8333333333333333"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter" value="2.176470588235294"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter" value="3.0681818181818183"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb" value="2.2916666666666665"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog" value="1.125"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Format" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description" value="2.2"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer" value="1.3333333333333333"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Priority" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version" value="2.5"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry" value="2.5416666666666665"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Comment" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.GenericName" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Icon" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry" value="1.5"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Name" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Type" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream" value="2.111111111111111"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup" value="1.5"/>
		<VALUE measured="es.group.work.features.event.TaskChange" value="1.05"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager" value="1.2857142857142858"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics" value="1.5"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests" value="2.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation" value="1.2075471698113207"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction" value="1.1333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase" value="1.0465116279069768"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel" value="1.35"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass" value="1.2857142857142858"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder" value="2.142857142857143"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition" value="1.1875"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration" value="1.2857142857142858"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder" value="1.8"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl" value="1.1666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator" value="1.1111111111111112"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger" value="1.8571428571428572"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable" value="1.8333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase" value="1.547945205479452"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl" value="1.125"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener" value="1.5555555555555556"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl" value="2.6666666666666665"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel" value="1.3636363636363635"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings" value="1.0454545454545454"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea" value="1.2894736842105263"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions" value="1.3766233766233766"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser" value="31.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState" value="1.1111111111111112"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.BaselineSaver" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject" value="1.625"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase" value="1.0909090909090908"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel" value="1.558139534883721"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2" value="1.5434782608695652"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable" value="1.6428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.ModelListener" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.BeginDateComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.EndDateComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter" value="1.375"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea" value="1.2857142857142858"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable" value="2.1052631578947367"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl" value="2.32"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt" value="3.2857142857142856"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer" value="1.5172413793103448"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil" value="2.1666666666666665"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl" value="1.527027027027027"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction" value="1.8571428571428572"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactDeleteAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactNewAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactPropertiesAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction" value="2.03125"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction" value="1.5555555555555556"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction" value="1.2222222222222223"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction" value="1.2222222222222223"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction" value="1.2857142857142858"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction" value="1.1666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction" value="1.0909090909090908"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction" value="1.75"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet" value="1.1111111111111112"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction" value="1.1666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction" value="1.1666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction" value="1.2857142857142858"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction" value="1.8"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction" value="1.75"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase" value="1.1875"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction" value="1.625"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction" value="1.7142857142857142"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction" value="1.7142857142857142"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction" value="1.125"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction" value="1.375"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.application.MainApplication" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel" value="1.173913043478261"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl" value="2.5454545454545454"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase" value="1.379746835443038"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.OptionEventDispatcher" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl" value="2.25"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl" value="1.7894736842105263"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption" value="1.2727272727272727"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity" value="1.0833333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer" value="2.4285714285714284"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart" value="1.1818181818181819"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2" value="1.9047619047619047"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl" value="1.5714285714285714"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning" value="5.5"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.VisibleNodesFilter" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents" value="1.6470588235294117"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor" value="2.5454545454545454"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController" value="1.434782608695652"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection" value="1.1"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl" value="2.6666666666666665"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskNotesChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskProgressChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TimelineLabelChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase" value="1.2222222222222223"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions" value="2.2"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder" value="1.375"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.Gaps" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.Item" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker" value="1.7777777777777777"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser" value="3.125"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument" value="1.1"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator" value="1.457142857142857"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentManager.FTPOptions" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentStorageUi.Components" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU" value="1.8333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument" value="1.411764705882353"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument" value="1.5454545454545454"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument" value="1.1153846153846154"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.FailureState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.SuccessState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser" value="1.8333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker" value="2.25"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument" value="1.7894736842105263"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory" value="2.4285714285714284"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl" value="1.5416666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider" value="1.1333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor" value="1.375"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl" value="1.411764705882353"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption" value="1.9090909090909092"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication" value="3.2"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.DeprecatedProjectExportData" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl" value="1.8"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFinalizationJobImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage" value="2.6"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV" value="1.1"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage" value="1.1818181818181819"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage" value="3.1"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.GanttXMLFileFilter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog" value="1.9090909090909092"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent" value="1.5909090909090908"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ActionUtil" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor" value="1.7142857142857142"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel" value="1.1666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList" value="1.5769230769230769"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl" value="2.8"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase" value="1.76"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser" value="1.0769230769230769"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogInfo" value="2.75"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson" value="1.588235294117647"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels" value="1.7142857142857142"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog" value="1.125"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl" value="1.0769230769230769"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean" value="2.1052631578947367"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel" value="1.4210526315789473"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent" value="1.4210526315789473"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem" value="1.8"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl" value="1.5333333333333334"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl" value="2.125"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiSwing" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1" value="2.8"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step2" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl" value="1.95"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent" value="1.8333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil" value="1.6538461538461537"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter" value="1.8333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor" value="1.8571428571428572"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.MultiscreenFitResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ViewLogDialog" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel" value="1.8461538461538463"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel" value="1.8571428571428572"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel" value="2.125"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider" value="2.75"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase" value="1.0909090909090908"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder" value="1.591549295774648"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N" value="1.2941176470588236"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider" value="1.7272727272727273"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider" value="1.1818181818181819"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel" value="1.1818181818181819"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities" value="2.8333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.TopPanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel" value="2.6666666666666665"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model.CustomPropertyDefaultValueAdapter" value="1.75"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N" value="1.1111111111111112"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel" value="1.625"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage" value="2.066666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl" value="1.2105263157894737"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel" value="1.565217391304348"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption" value="1.8"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption" value="1.5714285714285714"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel" value="2.5833333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel" value="2.7142857142857144"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel" value="1.5833333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel" value="1.48"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager" value="1.5454545454545454"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase" value="1.2666666666666666"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile" value="1.0909090909090908"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttChartViewSaver" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen" value="1.1"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler" value="4.6"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver" value="1.6923076923076923"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver" value="5.333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.io.VacationSaver" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser" value="1.8888888888888888"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap" value="2.4444444444444446"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage" value="1.5833333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption" value="1.4444444444444444"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption" value="1.125"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler" value="1.3846153846153846"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler" value="2.625"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ColorValueParser" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler" value="1.75"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler" value="1.7777777777777777"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler" value="2.6666666666666665"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler" value="2.5454545454545454"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler" value="1.4166666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler" value="4.142857142857143"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintManager" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview" value="1.6296296296296295"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview" value="1.2222222222222223"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer" value="2.75"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource" value="1.3055555555555556"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager" value="1.6153846153846154"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder" value="1.1666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceMerger.MergeResourcesOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution" value="2.6363636363636362"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode" value="1.8235294117647058"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.Access" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl" value="1.6470588235294117"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl" value="1.4285714285714286"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.MySearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog" value="1.3888888888888888"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.MySearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.BlankLineNode" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn" value="1.2105263157894737"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage" value="1.4375"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues" value="1.6363636363636365"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl" value="1.5333333333333334"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority" value="1.5714285714285714"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl" value="1.5057471264367817"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl" value="1.7073170731707317"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.Access" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl" value="1.9775280898876404"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeFactoryImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap" value="1.2222222222222223"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode" value="1.1764705882352942"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties" value="3.7333333333333334"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager" value="1.75"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskView" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl" value="4.333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CostAlgorithmImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node" value="2.2"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor" value="2.75"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph" value="2.6296296296296298"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData" value="2.090909090909091"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency" value="1.1"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency" value="1.1"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node" value="1.3076923076923077"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData" value="1.5454545454545454"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction" value="1.25"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm" value="2.1818181818181817"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.Result" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm" value="3.25"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm" value="3.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl" value="3.6"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm" value="3.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchToKey" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl" value="1.6818181818181819"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl" value="2.3333333333333335"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl" value="1.75"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl" value="1.1818181818181819"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl" value="2.25"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl" value="2.25"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl" value="2.25"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem" value="2.4285714285714284"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl" value="1.2352941176470589"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl" value="1.1111111111111112"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl" value="3.625"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.DateUtils" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil" value="1.8"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MathUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil" value="2.5"/>
		<VALUE measured="net.sourceforge.ganttproject.util.PropertiesUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils" value="2.8"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage" value="1.5925925925925926"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher" value="1.5555555555555556"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard" value="1.4444444444444444"/>
		<VALUE measured="org.w3c.util.DateParser" value="2.9"/>
		<VALUE measured="org.w3c.util.InvalidDateException" value="1.0"/>
	</METRIC>
	<METRIC category="Class" name="Maximum operation complexity" abbreviation="OCmax">
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.Values" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.FactoryImpl" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByEndDate" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByPixels" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByStartDate" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.Result" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder" value="12.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.Style" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.Functions" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFileOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.I18N" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.Immutable" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitStack.Util" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack" value="22.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.DefaultCalendarFactory" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport" value="22.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen" value="11.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter" value="9.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile" value="4.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter" value="16.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb" value="13.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Format" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description" value="7.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer" value="2.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Priority" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section" value="3.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry" value="15.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Comment" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.GenericName" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Icon" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry" value="5.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Name" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Type" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream" value="6.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter" value="1.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup" value="3.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange" value="2.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager" value="2.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry" value="1.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider" value="1.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics" value="4.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests" value="3.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager" value="1.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser" value="86.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.BaselineSaver" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.ModelListener" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.BeginDateComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.EndDateComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactDeleteAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactNewAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactPropertiesAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.application.MainApplication" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.OptionEventDispatcher" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.VisibleNodesFilter" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskNotesChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskProgressChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TimelineLabelChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.Gaps" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.Item" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentManager.FTPOptions" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentStorageUi.Components" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.FailureState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.SuccessState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.DeprecatedProjectExportData" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFinalizationJobImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.GanttXMLFileFilter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ActionUtil" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogInfo" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiSwing" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step2" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.MultiscreenFitResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ViewLogDialog" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.TopPanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model.CustomPropertyDefaultValueAdapter" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttChartViewSaver" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.VacationSaver" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ColorValueParser" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintManager" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceMerger.MergeResourcesOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.Access" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.MySearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.MySearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.BlankLineNode" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.Access" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeFactoryImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskView" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CostAlgorithmImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.Result" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchToKey" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.DateUtils" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MathUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.PropertiesUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard" value="5.0"/>
		<VALUE measured="org.w3c.util.DateParser" value="18.0"/>
		<VALUE measured="org.w3c.util.InvalidDateException" value="1.0"/>
	</METRIC>
	<METRIC category="Class" name="Weighted method complexity" abbreviation="WMC">
		<VALUE measured="biz.ganttproject.core.calendar.AlwaysWorkingTimeCalendarImpl" value="20.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarActivityImpl" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.CalendarEvent.Type" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendar.DayType" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarBase" value="26.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GPCalendarCalc.MoveDirection" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.GanttDaysOff" value="12.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.ImportCalendarOption.Values" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.WeekendCalendarImpl" value="63.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.ForwardTimeWalker" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker.WorkingUnitCounter" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas" value="37.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Arrow" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.HAlignment" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Label" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Line" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Polygon" value="14.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Rectangle" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Shape" value="16.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.Text" value="21.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.TextGroup" value="16.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.Canvas.VAlignment" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.DummySpatialIndex.Rect" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas.FontChooser" value="18.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.Offset" value="16.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilder.Factory" value="15.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl" value="27.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.FactoryImpl" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetBuilderImpl.OffsetStep" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetList" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup" value="21.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByEndDate" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByPixels" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetLookup.ComparatorByStartDate" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid.OffsetManager" value="15.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.AlphaRenderingOption" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.LineRenderer" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.PolygonRenderer" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.RectangleRenderer" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapeConstants" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.ShapePaint" value="23.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style" value="38.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.BackgroundImage" value="12.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Border" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Borders" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Color" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Padding" value="11.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.Style.Visibility" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextLengthCalculatorImpl.State" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render.TextPainter" value="23.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.AbstractSceneBuilder" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.BottomUnitSceneBuilder" value="16.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.DayGridSceneBuilder" value="24.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.TimelineSceneBuilder" value="14.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.ChartBoundsAlgorithm.Result" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.Connector.Vector" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.DependencySceneBuilder" value="24.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder" value="24.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.Style" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskActivitySceneBuilder.StyleApplier" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt.TaskLabelSceneBuilder" value="30.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.CachingTextFormatter" value="7.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.DayTextFormatter" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.MonthTextFormatter" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.QuarterTextFormatter" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeFormatters" value="10.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText" value="9.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.TimeUnitText.Position" value="0.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.WeekTextFormatter" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text.YearTextFormatter" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn" value="17.0"/>
		<VALUE measured="biz.ganttproject.core.model.task.TaskDefaultColumn.Functions" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.ChangeValueEvent" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.option.ColorOption.Util" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultBooleanOption" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultColorOption" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDateOption" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultDoubleOption" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultEnumerationOption" value="14.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFileOption" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultFontOption" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultIntegerOption" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultMoneyOption" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.DefaultStringOption" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.option.FontSpec.Size" value="2.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption" value="28.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.I18N" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPAbstractOption.Listeners.Entry" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.option.GPOptionGroup" value="21.0"/>
		<VALUE measured="biz.ganttproject.core.option.ValidationException" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.ColumnStub" value="12.0"/>
		<VALUE measured="biz.ganttproject.core.table.ColumnList.Immutable" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.time.CalendarFactory" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.time.GanttCalendar" value="22.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeDurationImpl" value="17.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitDateFrameableImpl" value="4.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitFunctionOfDateImpl.ParameterizedTimeUnitImpl" value="14.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph" value="11.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitGraph.Composition" value="3.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitImpl" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitPair" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.time.TimeUnitStack.Util" value="5.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.FramerImpl" value="6.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GPTimeUnitStack" value="46.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.GregorianTimeUnitStack" value="11.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl" value="8.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl.WeekFramerImpl.DefaultCalendarFactory" value="1.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVExport" value="71.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.GanttCSVOpen" value="37.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ImporterFromCsvFile" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.RecordGroup" value="20.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords" value="8.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.ResourceRecords.ResourceFields" value="2.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords" value="45.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.AssignmentColumnSpecImpl" value="5.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.ResourceColumnSpecImpl" value="7.0"/>
		<VALUE measured="biz.ganttproject.impex.csv.TaskRecords.TaskFields" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter" value="3.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsConverter.Args" value="0.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter" value="18.0"/>
		<VALUE measured="biz.ganttproject.impex.ical.IcsFileImporter.CalendarEditorPage" value="9.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.CustomPropertyMapping" value="23.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ExporterToMsProjectFile" value="20.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ImporterFromMsProjectFile" value="11.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.LocaleOption" value="6.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileExporter" value="74.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.ProjectFileImporter" value="135.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2.WebStartIDClass" value="0.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.BuildDeb" value="12.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb" value="110.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog" value="9.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Changelog.Format" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Description" value="11.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Maintainer" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Priority" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Section" value="4.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.Deb.Version" value="10.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry" value="61.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Comment" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.GenericName" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Icon" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.LocalizedEntry" value="12.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Name" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.DesktopEntry.Type" value="1.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.GZipOutputStream" value="19.0"/>
		<VALUE measured="com.googlecode.ant_deb_task.UnixPrintWriter" value="6.0"/>
		<VALUE measured="es.group.work.features.FeaturesSetup" value="18.0"/>
		<VALUE measured="es.group.work.features.event.TaskChange" value="21.0"/>
		<VALUE measured="es.group.work.features.event.TaskProgressListener" value="9.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager" value="9.0"/>
		<VALUE measured="es.group.work.features.sliders.MyManager.MyEntry" value="4.0"/>
		<VALUE measured="es.group.work.features.sliders.SimpleSlider" value="9.0"/>
		<VALUE measured="es.group.work.features.statistics.Statistics" value="9.0"/>
		<VALUE measured="es.group.work.features.tests.Feature2Tests" value="12.0"/>
		<VALUE measured="es.group.work.features.tests.MockingManager" value="45.0"/>
		<VALUE measured="es.group.work.features.tests.MockingTask" value="59.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation" value="64.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.ChartSelectionImpl" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.AbstractChartImplementation.MouseHoverLayerUi" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CalendarEventAction" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartComponentBase" value="45.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ChartTabContentPanel" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyClass" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.CustomPropertyManager.PropertyTypeEncoder" value="30.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DefaultCustomPropertyDefinition" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DesktopIntegration" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.Commiter" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.DialogImpl" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.DialogBuilder.NotificationViewImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ErrorNotifier" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.FacadeInvalidator" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPLogger" value="26.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTransferable" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase" value="113.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.ColumnImpl" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.HeaderMouseListener" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.SortTableHeaderRenderer" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.TableHeaderUiFacadeImpl" value="56.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTableBase.VscrollAdjustmentListener" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPTreeTransferHandler" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GPVersion" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttChartTabContentPanel" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttExportSettings" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea" value="49.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttGraphicArea.MouseSupport" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions" value="106.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttOptions.GanttXMLOptionsParser" value="93.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousState.BaselineSaver" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttPreviousStateTask" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject" value="156.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.Args" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProject.ParserFactoryImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase" value="60.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectBase.RowHeightAligner" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl" value="33.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.DefaultTaskColorOption" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttProjectImpl.TaskManagerConfigImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttResourcePanel" value="67.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttSplash" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTask" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2" value="71.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeDropListener" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTree2.GanttTreeExpansionListener" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTable.ModelListener" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel" value="75.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.BeginDateComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.EndDateComparator" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.GanttTreeTableModel.Icons" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.Mediator" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.OSXAdapter" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginOptionsHandler" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PluginPreferencesImpl" value="40.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PreferenceServiceImpl" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.PrjInfos" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ProjectEventListener.Stub" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceChartTabContentPanel" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceDefaultColumn" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourceChartSelection" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceLoadGraphicArea.ResourcechartImplementation" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeImageGenerator" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTable" value="40.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel" value="56.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ResourceTreeTableModel.SelectionKeeper" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.ShowHideColumnsDialog" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl" value="58.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskModelModificationListener" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGenerator.PaintState" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TaskTreeImageGeneratorExt" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableCellEditorImpl" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer" value="44.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ChartUpdater" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.CollapseAllAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandAllAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeTableContainer.ExpandCollapseAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.TreeUtil" value="26.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl" value="113.0"/>
		<VALUE measured="net.sourceforge.ganttproject.UIFacadeImpl.LafOption" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactAction" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactDeleteAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactNewAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ArtefactPropertiesAction" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.BaselineDialogAction" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CalculateCriticalPathAction" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.CancelAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction" value="65.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.GPAction.IconSize" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.OkAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ShowChannelAction" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.ViewToggleAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CopyAction" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.CutAction" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.EditMenu" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.PasteAction" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RedoAction" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.RefreshViewAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SearchDialogAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.SettingsDialogAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit.UndoAction" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.AboutAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.RecoverLastProjectAction" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help.HelpMenu.ViewLogAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.CloudProjectActionBase" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ExitAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.NewProjectAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenMRUDocumentAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenProjectAction" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.OpenURLAction" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.PrintAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectExportAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectImportAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectMenu" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPreviewAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.ProjectPropertiesAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAction" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveProjectAsAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project.SaveURLAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.AssignmentDeleteAction" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceAction" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceActionSet" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceDeleteAction" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceImportAction" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveDownAction" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceMoveUpAction" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceNewAction" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourcePropertiesAction" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource.ResourceSendMailAction" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollTimeIntervalAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToEndAction" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToSelectionAction" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToStartAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll.ScrollToTodayAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.IndentTargetFunctionFactory" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.OutdentTargetFunctionFactory" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskActionBase" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskDeleteAction" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskIndentAction" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskLinkAction" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveDownAction" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveEnabledPredicate" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskMoveUpAction" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskNewAction" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskPropertiesAction" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnindentAction" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task.TaskUnlinkAction" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewChartOptionsDialogAction" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewCycleAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view.ViewMenu.GPViewImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomActionSet" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomInAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom.ZoomOutAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.application.MainApplication" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.ColorEditor" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.DateCellRendererImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.CalendarEditorPanel.TableModelImpl.Column" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar.GPCalendarProvider.CalendarTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.BackgroundRendererImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase" value="109.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.OptionEventDispatcher" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelBase.ScrollingSessionImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelImpl" value="34.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartModelResource.ResourceLoadOption" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartOptionGroup" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartRendererBase" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration" value="34.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartUIConfiguration.ChartPropertiesOption" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ChartViewState" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.DependencyInteractionRenderer" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.MilestoneTaskFakeActivity" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ProjectCalendarDialogAction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer" value="34.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.ResourceLoadRenderer.ResourceLoad" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.SimpleRenderedImage" value="49.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl" value="34.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.StyledPainterImpl.ColouredRectanglePainter" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskActivityPart" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskInteractionHintRenderer" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2" value="80.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.BarChartConnectorImpl" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.TaskActivityChartApi" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TaskRendererImpl2.VerticalPartitioning" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.TimelineLabelRendererImpl.LabelTextSelector" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.VisibleNodesFilter" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartDimensions" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.ChartImageBuilder" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export.RenderedChartImage" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardContents" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.ClipboardTaskProcessor" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartController" value="33.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.GanttChartSelection" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseListenerImpl" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt.MouseMotionListenerImpl" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.CalendarChartItem" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.ChartItem" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskBoundaryChartItem" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskNotesChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskProgressChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TaskRegularAreaChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item.TimelineLabelChartItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskBoundaryInteraction" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskEndInteraction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressInteraction" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskProgressRuler" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ChangeTaskStartInteraction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.DrawDependencyInteraction" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseInteractionBase" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseListenerBase" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseMotionListenerBase" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MouseWheelListenerBase" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.MoveTaskInteractions" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.ScrollViewInteraction" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse.TimelineFacadeImpl" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.GPToolbar" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.HighlightOnMouseOver" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.NavigationPanel" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.PanelBorder" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder" value="44.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.ButtonBuilder" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ToolbarBuilder.Gaps" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview.ZoomingPanel" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeed.Item" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker" value="32.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssFeedChecker.CheckOption" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client.RssParser" value="25.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractDocument" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.AbstractURLDocument" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.DocumentException" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.Document.ErrorCode" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator" value="51.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentCreator.StringOptionImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentManager.FTPOptions" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentStorageUi.Components" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.DocumentsMRU" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FileDocument" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.FtpDocument" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.NetworkOptionPageProvider" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument" value="29.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.FailureState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.OnlyShowWeekendsTagHandler" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.ParsingState" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.PortfolioTagHandler" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ProxyDocument.SuccessState" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.ReadOnlyProxyDocument" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesCellRenderer" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.FilesTableModel" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser" value="77.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.GanttURLChooser.ReloadWorker" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocument" value="34.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.HttpDocumentOutputStream" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceFactory.Key" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.MiltonResourceImpl" value="37.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavOptionPageProvider" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavException" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavResource.WebDavRuntimeException" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavServerDescriptor" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavStorageImpl.ServerListOption.EnumerationOptionImpl" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav.WebDavUri" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.CommandLineExportApplication.Args" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ConsoleUIFacade" value="42.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.DeprecatedProjectExportData" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportException" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.ExportFinalizationJobImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExportFileWizardImpl.State" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterBase.ExporterJob" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterChooserPage" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToCSV" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.ExporterToImage.FileTypeOption" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.FileChooserPage" value="31.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.TaskVisitor" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export.WebPublisher.Ftp" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.ExtensionBasedFileFilter" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter.GanttXMLFileFilter" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.font.Fonts" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractPagesDialog.ListItem" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.AbstractTableAndActionsComponent" value="35.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ActionUtil" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DateInterval" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.DefaultDateIntervalModel" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DateIntervalListEditor.MyListModel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.DialogAligner" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList" value="41.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.ComboItem" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableAndActionsImpl" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.EditableList.TableModelImpl" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase" value="44.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.FileChooserPageBase.UrlFetcher" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPColorChooser" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GPlainDocument" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GTextField" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogInfo" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogPerson" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttDialogProperties" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttImagePanel" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeelInfo" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttLookAndFeels" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressBarDialog" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttStatusBar.ProgressMonitorImpl" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTabbedPane" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.GanttTaskPropertiesBean" value="80.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ListAndFieldsPanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationChannel" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationComponent" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationItem" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.NotificationManagerImpl" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.OpenFileDialog" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectMRUMenu" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticImpl" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiFx" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenDiagnosticUiSwing" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.ConvertMilestones" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step1" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step2" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectOpenStrategy.Step3" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ProjectUIFacadeImpl" value="39.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.RecentColorsOption" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton" value="25.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TestGanttRolloverButton.MouseOverHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.TextFieldAndFileChooserComponent" value="33.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration" value="30.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIConfiguration.RedlineOption" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIFacade.Centering" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIFacade.Choice" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil" value="86.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DatePickerEditCommiter" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.DateValidator.Default" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.GPDateCellEditor" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.UIUtil.MultiscreenFitResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.ViewLogDialog" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about.AboutDialog2" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.BooleanOptionAction" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.CSVSettingsPanel.ExportFieldsTableModel" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.EnumerationOptionComboBoxModel.Item" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ExportCsvOptionPageProvider" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GPOptionChoicePanel" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GanttChartOptionPageProvider" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.GeneralOptionPanel" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.InterfaceOptionPageProvider" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderBase" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionPageProviderPanel" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder" value="113.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.BooleanOptionRadioUi" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.OptionsPageBuilder.I18N" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectBasicOptionPageProvider" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectCalendarOptionPageProvider" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectRolesOptionPageProvider" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ProjectSettingsPanel" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.ResourceChartOptionPageProvider" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SettingsDialog2" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.SpringUtilities" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.TopPanel" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.WeekendsSettingsPanel" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model.CustomPropertyDefaultValueAdapter" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.I18N" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizard" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.NewProjectWizardWindow" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.ProjectNamePage" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.RoleSetPage.RoleSetListModel" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage" value="31.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CalendarOption" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.CheckBoxAction" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.SchedulingEnum" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WeekendConfigurationPage.WeekendSchedulingOption" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard.WizardImpl" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling.ScrollingManagerImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel" value="36.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.DefaultValueOption" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.IsVisibleOption" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.NameOption" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView.ColumnManagerPanel.PropertyClassOption" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CommonPanel" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.CustomColumnsPanel.CustomColumnTableModel" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel" value="31.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.MyColumn" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.DependencyTableModel.TaskComboItem" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel" value="38.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.ResourcesTableModel.Column" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskAllocationsPanel" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskDependenciesPanel" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties.TaskScheduleDatesPanel" value="37.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewHolder" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view.ViewManagerImpl" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window.ContentPaneBuilder.AnimationHostImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomEvent" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom.ZoomManager.ZoomState" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.BufferProject" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.FileChooserPage" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImportFileWizardImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterBase" value="19.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterChooserPage" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFactory" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.TaskFieldImpl" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromGanttFile.VisibleFieldsImpl" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer.ImporterFromTxtFile" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.AssignmentSaver" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CSVOptions" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.CalendarSaver" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttChartViewSaver" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttTXTOpen" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.DefaultTagHandler" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLOpen.TimelineTagHandler" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.GanttXMLSaver" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.HistorySaver" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.OptionSaver" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ResourceSaver" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.SaverBase" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.TaskSaver" value="32.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.VacationSaver" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.ViewSaver" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io.XmlParser" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.CharSetMap" value="44.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage" value="57.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.CalendarFactoryImpl" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.GanttLanguage.Event" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.LanguageOption" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language.ShortDateFormatOption" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AbstractTagHandler" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.AllocationTagHandler" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ColorValueParser" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.CustomPropertiesTagHandler.CustomPropertiesStructure" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DefaultWeekTagHandler" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.DependencyTagHandler.GanttDependStructure" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.FileFormatException" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.HolidayTagHandler.CalendarEventAttrs" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.OptionTagHandler" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ParsingContext" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.PreviousStateTasksTagHandler" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ResourceTagHandler" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.RoleTagHandler" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskDisplayColumnsTagHandler" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskPropertiesTagHandler" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.TaskTagHandler" value="29.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.VacationTagHandler" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser.ViewTagHandler" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins.PluginManager" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.GanttPrintable" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintManager" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview" value="44.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PagePreview" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.PreviewContainer" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print.PrintPreview.StatusBar" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.AssignmentNode" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource" value="47.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.CustomPropertyImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResource.ResourceAssignmentImpl" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager" value="42.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceManager.ResourceBuilder" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.HumanResourceMerger.MergeResourcesOption" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution" value="29.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.LoadDistribution.Load" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.OverwritingMerger" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceEvent" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceNode" value="31.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource.ResourceTableNode" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleImpl" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.Access" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManager.RoleEvent" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleManagerImpl" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RolePersistentID" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles.RoleSetImpl" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.ResourceSearchService.MySearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchDialog" value="25.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchResult" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchServiceBase" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.SearchUiImpl.PopupSearchCallback" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search.TaskSearchService.MySearchResult" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.JPaintCombo" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape.PaintCellRenderer" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.BlankLineNode" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumEvent" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumn" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsException" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsManager" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsStorage" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomColumnsValues.CustomPropertyImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyEvent" value="7.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.CustomPropertyListenerImpl" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.DurationParsingException" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.MutationInfo" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentImpl" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentMutatorImpl" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.ResourceAssignmentCollectionImpl.ResourceAssignmentStub" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.Task.Priority" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivitiesAlgorithm" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskActivityImpl" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskDocumentOrderComparator" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl" value="131.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.CostImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.FieldChange" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.MutatorImpl" value="70.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.ProgressEventSender" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskImpl.PropertiesEventSender" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.Access" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManager.TaskBuilder" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl" value="176.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeFactoryImpl" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.FacadeImpl" value="49.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskMap" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskManagerImpl.TaskNamePrefixOption" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskNode" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskProperties" value="56.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskSelectionManager" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.TaskView" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AdjustTaskBoundsAlgorithm.AlgorithmImpl" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmBase" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmCollection" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.AlgorithmException" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CostAlgorithmImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Node" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.CriticalPathAlgorithmImpl.Processor" value="22.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph" value="71.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ExplicitDependencyImpl" value="16.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.GraphData" value="23.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitInheritedDependency" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.ImplicitSubSuperTaskDependency" value="11.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Node" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.NodeData" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.DependencyGraph.Transaction" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ExtendUncompletedTaskAlgorithm" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.FindPossibleDependeesAlgorithmImpl" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ProjectBoundsAlgorithm.Result" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskCompletionPercentageAlgorithm" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RecalculateTaskScheduleAlgorithm" value="40.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.RetainRootsAlgorithm" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SchedulerImpl" value="36.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.ShiftTaskTreeAlgorithm" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm.SortTasksAlgorithm" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.LoopDetector" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchFromKey" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.RangeSearchToKey" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.SearchKey" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependency.Hardness" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl" value="37.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutationInfo" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyCollectionImpl.MutatorImpl" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.DefaultCollision" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyConstraint.Type" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyException" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencyImpl" value="28.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependant" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceAsDependee" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.TaskDependencySliceImpl" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.ConstraintImpl" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.DependencyActivityBindingImpl" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishFinishConstraintImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.FinishStartConstraintImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartFinishConstraintImpl" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint.StartStartConstraintImpl" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskDependencyEvent" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskHierarchyEvent" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskListenerAdapter" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskPropertyEvent" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event.TaskScheduleEvent" value="6.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyItem" value="17.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy.TaskHierarchyManagerImpl" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoManagerImpl" value="21.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo.UndoableEditImpl" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl" value="29.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.BrowserControl.Platforms" value="0.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.ColorConvertion" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.DateUtils" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.FileUtil" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MathUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.MouseUtil" value="5.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.PropertiesUtil" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.StringUtils" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect.Pair" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage" value="43.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractFileChooserPage.UrlFetcher" value="14.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard.AbstractWizard" value="26.0"/>
		<VALUE measured="org.ganttproject.WebStartIDClass" value="0.0"/>
		<VALUE measured="org.w3c.util.DateParser" value="29.0"/>
		<VALUE measured="org.w3c.util.InvalidDateException" value="1.0"/>
	</METRIC>
	<METRIC category="Package" name="Average cyclomatic complexity" abbreviation="v(G)avg">
		<VALUE measured="biz.ganttproject.core.calendar" value="1.9620253164556962"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker" value="1.3333333333333333"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas" value="1.462962962962963"/>
		<VALUE measured="biz.ganttproject.core.chart.grid" value="1.7903225806451613"/>
		<VALUE measured="biz.ganttproject.core.chart.render" value="2.231707317073171"/>
		<VALUE measured="biz.ganttproject.core.chart.scene" value="1.9310344827586208"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt" value="2.6956521739130435"/>
		<VALUE measured="biz.ganttproject.core.chart.text" value="1.303030303030303"/>
		<VALUE measured="biz.ganttproject.core.model.task" value="1.2666666666666666"/>
		<VALUE measured="biz.ganttproject.core.option" value="1.2857142857142858"/>
		<VALUE measured="biz.ganttproject.core.table" value="1.0"/>
		<VALUE measured="biz.ganttproject.core.time" value="1.3896103896103895"/>
		<VALUE measured="biz.ganttproject.core.time.impl" value="1.945945945945946"/>
		<VALUE measured="biz.ganttproject.impex.csv" value="3.073529411764706"/>
		<VALUE measured="biz.ganttproject.impex.ical" value="2.642857142857143"/>
		<VALUE measured="biz.ganttproject.impex.msproject2" value="2.814432989690722"/>
		<VALUE measured="com.googlecode.ant_deb_task" value="2.123076923076923"/>
		<VALUE measured="es.group.work.features" value="2.0"/>
		<VALUE measured="es.group.work.features.event" value="1.0344827586206897"/>
		<VALUE measured="es.group.work.features.sliders" value="1.1"/>
		<VALUE measured="es.group.work.features.statistics" value="1.5"/>
		<VALUE measured="es.group.work.features.tests" value="1.0545454545454545"/>
		<VALUE measured="net.sourceforge.ganttproject" value="1.7724770642201835"/>
		<VALUE measured="net.sourceforge.ganttproject.action" value="1.8923076923076922"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit" value="1.4523809523809523"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project" value="1.4827586206896552"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource" value="1.471698113207547"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll" value="1.3846153846153846"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task" value="1.5949367088607596"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view" value="1.5384615384615385"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom" value="1.1818181818181819"/>
		<VALUE measured="net.sourceforge.ganttproject.application" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar" value="2.0232558139534884"/>
		<VALUE measured="net.sourceforge.ganttproject.chart" value="1.6411042944785277"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export" value="1.2"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt" value="2.0294117647058822"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse" value="1.71875"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview" value="1.7027027027027026"/>
		<VALUE measured="net.sourceforge.ganttproject.client" value="2.7142857142857144"/>
		<VALUE measured="net.sourceforge.ganttproject.document" value="1.5070422535211268"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav" value="2.3566433566433567"/>
		<VALUE measured="net.sourceforge.ganttproject.export" value="1.743801652892562"/>
		<VALUE measured="net.sourceforge.ganttproject.filter" value="1.6666666666666667"/>
		<VALUE measured="net.sourceforge.ganttproject.gui" value="1.9515738498789346"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about" value="1.3333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options" value="1.9529411764705882"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling" value="1.5"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties" value="2.097560975609756"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view" value="1.368421052631579"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window" value="1.1428571428571428"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom" value="1.4210526315789473"/>
		<VALUE measured="net.sourceforge.ganttproject.importer" value="1.303030303030303"/>
		<VALUE measured="net.sourceforge.ganttproject.io" value="2.337078651685393"/>
		<VALUE measured="net.sourceforge.ganttproject.language" value="1.9333333333333333"/>
		<VALUE measured="net.sourceforge.ganttproject.parser" value="2.113821138211382"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins" value="3.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print" value="2.3225806451612905"/>
		<VALUE measured="net.sourceforge.ganttproject.resource" value="1.5955882352941178"/>
		<VALUE measured="net.sourceforge.ganttproject.roles" value="1.5348837209302326"/>
		<VALUE measured="net.sourceforge.ganttproject.search" value="1.5945945945945945"/>
		<VALUE measured="net.sourceforge.ganttproject.shape" value="1.6"/>
		<VALUE measured="net.sourceforge.ganttproject.task" value="1.7444933920704846"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm" value="2.3934426229508197"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency" value="1.5978260869565217"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint" value="1.6774193548387097"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy" value="2.2222222222222223"/>
		<VALUE measured="net.sourceforge.ganttproject.undo" value="1.4"/>
		<VALUE measured="net.sourceforge.ganttproject.util" value="3.36"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect" value="1.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard" value="1.8095238095238095"/>
		<VALUE measured="org.w3c.util" value="3.727272727272727"/>
	</METRIC>
	<METRIC category="Package" name="Total cyclomatic complexity" abbreviation="v(G)tot">
		<VALUE measured="biz.ganttproject.core.calendar" value="155.0"/>
		<VALUE measured="biz.ganttproject.core.calendar.walker" value="12.0"/>
		<VALUE measured="biz.ganttproject.core.chart.canvas" value="158.0"/>
		<VALUE measured="biz.ganttproject.core.chart.grid" value="111.0"/>
		<VALUE measured="biz.ganttproject.core.chart.render" value="183.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene" value="56.0"/>
		<VALUE measured="biz.ganttproject.core.chart.scene.gantt" value="124.0"/>
		<VALUE measured="biz.ganttproject.core.chart.text" value="43.0"/>
		<VALUE measured="biz.ganttproject.core.model.task" value="19.0"/>
		<VALUE measured="biz.ganttproject.core.option" value="144.0"/>
		<VALUE measured="biz.ganttproject.core.table" value="13.0"/>
		<VALUE measured="biz.ganttproject.core.time" value="107.0"/>
		<VALUE measured="biz.ganttproject.core.time.impl" value="72.0"/>
		<VALUE measured="biz.ganttproject.impex.csv" value="209.0"/>
		<VALUE measured="biz.ganttproject.impex.ical" value="37.0"/>
		<VALUE measured="biz.ganttproject.impex.msproject2" value="273.0"/>
		<VALUE measured="com.googlecode.ant_deb_task" value="276.0"/>
		<VALUE measured="es.group.work.features" value="18.0"/>
		<VALUE measured="es.group.work.features.event" value="30.0"/>
		<VALUE measured="es.group.work.features.sliders" value="22.0"/>
		<VALUE measured="es.group.work.features.statistics" value="9.0"/>
		<VALUE measured="es.group.work.features.tests" value="116.0"/>
		<VALUE measured="net.sourceforge.ganttproject" value="1932.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action" value="123.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.edit" value="61.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.help" value="15.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.project" value="86.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.resource" value="78.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.scroll" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.task" value="126.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.view" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.action.zoom" value="13.0"/>
		<VALUE measured="net.sourceforge.ganttproject.application" value="2.0"/>
		<VALUE measured="net.sourceforge.ganttproject.calendar" value="87.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart" value="535.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.export" value="18.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.gantt" value="138.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.item" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.mouse" value="110.0"/>
		<VALUE measured="net.sourceforge.ganttproject.chart.overview" value="63.0"/>
		<VALUE measured="net.sourceforge.ganttproject.client" value="57.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document" value="214.0"/>
		<VALUE measured="net.sourceforge.ganttproject.document.webdav" value="337.0"/>
		<VALUE measured="net.sourceforge.ganttproject.export" value="211.0"/>
		<VALUE measured="net.sourceforge.ganttproject.filter" value="10.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui" value="806.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.about" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options" value="332.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.options.model" value="12.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.projectwizard" value="93.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.scrolling" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.tableView" value="54.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.taskproperties" value="172.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.view" value="26.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.window" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.gui.zoom" value="27.0"/>
		<VALUE measured="net.sourceforge.ganttproject.importer" value="86.0"/>
		<VALUE measured="net.sourceforge.ganttproject.io" value="208.0"/>
		<VALUE measured="net.sourceforge.ganttproject.language" value="145.0"/>
		<VALUE measured="net.sourceforge.ganttproject.parser" value="260.0"/>
		<VALUE measured="net.sourceforge.ganttproject.plugins" value="9.0"/>
		<VALUE measured="net.sourceforge.ganttproject.print" value="72.0"/>
		<VALUE measured="net.sourceforge.ganttproject.resource" value="217.0"/>
		<VALUE measured="net.sourceforge.ganttproject.roles" value="66.0"/>
		<VALUE measured="net.sourceforge.ganttproject.search" value="59.0"/>
		<VALUE measured="net.sourceforge.ganttproject.shape" value="8.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task" value="792.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.algorithm" value="438.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency" value="147.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.dependency.constraint" value="52.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.event" value="24.0"/>
		<VALUE measured="net.sourceforge.ganttproject.task.hierarchy" value="20.0"/>
		<VALUE measured="net.sourceforge.ganttproject.undo" value="35.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util" value="84.0"/>
		<VALUE measured="net.sourceforge.ganttproject.util.collect" value="4.0"/>
		<VALUE measured="net.sourceforge.ganttproject.wizard" value="76.0"/>
		<VALUE measured="org.w3c.util" value="41.0"/>
	</METRIC>
	<METRIC category="Module" name="Average cyclomatic complexity" abbreviation="v(G)avg">
		<VALUE measured="ganttproject" value="1.826064994106752"/>
	</METRIC>
	<METRIC category="Module" name="Total cyclomatic complexity" abbreviation="v(G)tot">
		<VALUE measured="ganttproject" value="10845.0"/>
	</METRIC>
	<METRIC category="Project" name="Average cyclomatic complexity" abbreviation="v(G)avg">
		<VALUE measured="project" value="1.826064994106752"/>
	</METRIC>
	<METRIC category="Project" name="Total cyclomatic complexity" abbreviation="v(G)tot">
		<VALUE measured="project" value="10845.0"/>
	</METRIC>
</METRICS>
